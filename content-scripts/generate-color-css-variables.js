(()=>{"use strict";const e=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,t=function(t){return"string"==typeof t&&e.test(t)};for(var r=[],a=0;a<256;++a)r.push((a+256).toString(16).substr(1));function i(e,t,r,a){switch(e){case 0:return t&r^~t&a;case 1:case 3:return t^r^a;case 2:return t&r^t&a^r&a}}function n(e,t){return e<<t|e>>>32-t}var s=function(e,a,i){function n(e,a,n,s){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t}(e)),"string"==typeof a&&(a=function(e){if(!t(e))throw TypeError("Invalid UUID");var r,a=new Uint8Array(16);return a[0]=(r=parseInt(e.slice(0,8),16))>>>24,a[1]=r>>>16&255,a[2]=r>>>8&255,a[3]=255&r,a[4]=(r=parseInt(e.slice(9,13),16))>>>8,a[5]=255&r,a[6]=(r=parseInt(e.slice(14,18),16))>>>8,a[7]=255&r,a[8]=(r=parseInt(e.slice(19,23),16))>>>8,a[9]=255&r,a[10]=(r=parseInt(e.slice(24,36),16))/1099511627776&255,a[11]=r/4294967296&255,a[12]=r>>>24&255,a[13]=r>>>16&255,a[14]=r>>>8&255,a[15]=255&r,a}(a)),16!==a.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var o=new Uint8Array(16+e.length);if(o.set(a),o.set(e,a.length),(o=i(o))[6]=15&o[6]|80,o[8]=63&o[8]|128,n){s=s||0;for(var c=0;c<16;++c)n[s+c]=o[c];return n}return function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=(r[e[a+0]]+r[e[a+1]]+r[e[a+2]]+r[e[a+3]]+"-"+r[e[a+4]]+r[e[a+5]]+"-"+r[e[a+6]]+r[e[a+7]]+"-"+r[e[a+8]]+r[e[a+9]]+"-"+r[e[a+10]]+r[e[a+11]]+r[e[a+12]]+r[e[a+13]]+r[e[a+14]]+r[e[a+15]]).toLowerCase();if(!t(i))throw TypeError("Stringified UUID is invalid");return i}(o)}try{n.name="v5"}catch(e){}return n.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",n.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",n}(0,0,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],r=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var a=unescape(encodeURIComponent(e));e=[];for(var s=0;s<a.length;++s)e.push(a.charCodeAt(s))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var o=e.length/4+2,c=Math.ceil(o/16),l=new Array(c),d=0;d<c;++d){for(var p=new Uint32Array(16),f=0;f<16;++f)p[f]=e[64*d+4*f]<<24|e[64*d+4*f+1]<<16|e[64*d+4*f+2]<<8|e[64*d+4*f+3];l[d]=p}l[c-1][14]=8*(e.length-1)/Math.pow(2,32),l[c-1][14]=Math.floor(l[c-1][14]),l[c-1][15]=8*(e.length-1)&4294967295;for(var u=0;u<c;++u){for(var m=new Uint32Array(80),g=0;g<16;++g)m[g]=l[u][g];for(var v=16;v<80;++v)m[v]=n(m[v-3]^m[v-8]^m[v-14]^m[v-16],1);for(var y=r[0],h=r[1],b=r[2],k=r[3],U=r[4],w=0;w<80;++w){var E=Math.floor(w/20),S=n(y,5)+i(E,h,b,k)+U+t[E]+m[w]>>>0;U=k,k=b,b=n(h,30)>>>0,h=y,y=S}r[0]=r[0]+y>>>0,r[1]=r[1]+h>>>0,r[2]=r[2]+b>>>0,r[3]=r[3]+k>>>0,r[4]=r[4]+U>>>0}return[r[0]>>24&255,r[0]>>16&255,r[0]>>8&255,255&r[0],r[1]>>24&255,r[1]>>16&255,r[1]>>8&255,255&r[1],r[2]>>24&255,r[2]>>16&255,r[2]>>8&255,255&r[2],r[3]>>24&255,r[3]>>16&255,r[3]>>8&255,255&r[3],r[4]>>24&255,r[4]>>16&255,r[4]>>8&255,255&r[4]]}));const o=s,c="774522d3-7912-4e5c-b55b-e17198620b32",l=(o("service-worker",c),o("message-tracking",c),o("empire-tracking",c),o("universe-account-tracking",c),o("internal",c));var d;function p(e,t=10){const r=parseInt(e,t);if(isNaN(r))throw new Error(`'${e}' is not a valid integer value`);return r}function f(e,t){if(null!=t)throw{message:e,data:t};throw new Error("[OGame Tracker] "+e)}!function(e){e.StayAlive="internal/stay-alive",e.DropDatabaseConnections="internal/drop-db-connections",e.Notification="notification",e.TrackExpedition="expedition/track-expedition",e.Expedition="expedition/single",e.NewExpedition="expedition/new",e.DebrisFieldReport="debris-fields/single",e.NewDebrisFieldReport="debris-fields/new",e.TrackDebrisFieldReport="debris-fields/track",e.TrackManualDebrisFieldReport="debris-fields/track-manually",e.CombatReport="combat-reports/single",e.NewCombatReport="combat-reports/new",e.TrackCombatReport="combat-reports/track",e.RequestSingleCombatReport="combat-reports/request-single-report",e.CombatReportUnknown="combat-reports/is-unknown",e.WillNotBeTracked="message-tracking/no-tracking",e.TrackingError="message-tracking/error",e.UpdatePlanetData="empire/update-planet-data",e.UpdatePlanetActiveItems="empire/update-active-items",e.UpdatePlanetBuildingLevels="empire/update-buildings-levels",e.UpdateResearchLevels="empire/update-research-levels",e.UpdatePlanetShipCounts="empire/update-planet-ships",e.UpdatePlanetDefenseCounts="empire/update-planet-defenses",e.UpdatePlanetMissileCounts="empire/update-planet-missiles",e.UpdateActiveOfficers="empire/update-active-officers",e.UpdatePlayerClass="empire/update-player-class",e.UpdateAllianceClass="empire/update-alliance-class",e.UpdatePlanetProductionSettings="empire/update-planet-production-settings",e.UpdateFleets="empire/fleets",e.NotifyEmpireDataUpdate="empire/notify-update",e.RequestSettings="settings/request-data",e.Settings="settings/data",e.NotifySettingsUpdate="settings/notify-update",e.NotifyUniverseHistoryUpdate="universe-history/notify-update",e.NotifyServerSettingsUpdate="server-settings/notify-update",e.ForceUpdateServerSettings="server-settings/force-update",e.UpdatePlayerName="accounts/update-player-name",e.UpdateUniverseName="universes/update-universe-name",e.NotifyUniverseSpecificSettingsUpdate="universe-specific-settings/notify-update",e.UpdateLifeformExperience="lifeforms/update-lifeform-experience",e.UpdateSelectedLifeform="lifeforms/update-selected-lifeform",e.UpdatePlanetActiveLifeformBuildingLevels="lifeforms/update-active-building-levels",e.UpdatePlanetLifeformBuildingLevels="lifeforms/update-all-building-levels",e.UpdatePlanetActiveLifeformTechnologyLevels="lifeforms/update-active-technology-levels",e.UpdatePlanetLifeformTechnologyLevels="lifeforms/update-all-technology-levels",e.TrackLifeformDiscovery="lifeforms/track-discovery",e.LifeformDiscovery="lifeforms/discovery",e.NewLifeformDiscovery="lifeforms/new-discovery"}(d||(d={}));const u=function(){const e=function(){const e=function(){const e={};return document.cookie.split(";").forEach((t=>{const[r,a]=t.split("=").map((e=>decodeURIComponent(e.trim())));e[r]=a})),e}().oglocale;return null==e||"undefined"==e?document.querySelector('meta[name="ogame-language"]')?.content??f("Cannot find language meta tag"):e}(),t=(document.querySelector('meta[name="ogame-universe"]')?.content??f("Cannot find universe meta tag")).split(".")[0].split("-"),r=t[0].replace(/^s/,""),a=t[1];return/^\d+$/.test(r)||f("Found ogame universe tag but failed to extract server id from it"),{language:a,userLanguage:e,serverId:p(r,10),playerId:p(document.querySelector('meta[name="ogame-player-id"]')?.content??f("Cannot find player id meta tag"),10)}}();let m=null;var g;chrome.runtime.onMessage.addListener((e=>function(e){if(function(e,t,r=!0){return e.language==t.language&&e.serverId==t.serverId&&(!r||e.playerId==t.playerId)}(u,e.ogameMeta))switch(e.type){case d.Settings:{const{data:t}=e;!function(e){const t={};Object.keys(e.resources).forEach((r=>t[`--ogame-tracker--resource--${r}`]=e.resources[r])),Object.keys(e.ships).forEach((r=>t[`--ogame-tracker--ship--${r}`]=e.ships[r])),Object.keys(e.combatResults).forEach((r=>t[`--ogame-tracker--combat-result--${r}`]=e.combatResults[r])),Object.keys(e.expeditions.events).forEach((r=>t[`--ogame-tracker--expedition-event--${r}`]=e.expeditions.events[r])),Object.keys(e.expeditions.sizes).forEach((r=>t[`--ogame-tracker--expedition-size--${r}`]=e.expeditions.sizes[r])),t["--ogame-tracker--dark-matter"]=e.expeditions.events.darkMatter,Object.keys(e.expeditions.depletion).forEach((r=>t[`--ogame-tracker--depletion-level--${r}`]=e.expeditions.depletion[r])),Object.keys(e.lifeformDiscoveries.events).forEach((r=>t[`--ogame-tracker--lifeform-discovery-event--${r}`]=e.lifeformDiscoveries.events[r])),Object.keys(e.lifeformDiscoveries.artifactFindingSizes).forEach((r=>t[`--ogame-tracker--lifeform-discovery-result--artifacts--size--${r}`]=e.lifeformDiscoveries.artifactFindingSizes[r])),Object.keys(e.lifeforms).forEach((r=>t[`--ogame-tracker--lifeform--${r}`]=e.lifeforms[r]));const r=Object.keys(t).map((e=>`${e}: ${t[e]}`)).join(";");null==m&&(m=document.createElement("style"),document.head.append(m)),m.textContent=`:root { ${r} }`}(t.colors);break}}}(e))),g={type:d.RequestSettings,ogameMeta:u,senderUuid:l},chrome.runtime.sendMessage(g,(function(){const e=chrome.runtime.lastError?.message;if(!["Receiving end does not exist.","The message port closed before a response was received."].some((t=>e?.includes(t)??!1)))throw chrome.runtime.lastError}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,