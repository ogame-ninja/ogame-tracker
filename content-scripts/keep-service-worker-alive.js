(()=>{"use strict";function e(){const e=chrome.runtime.lastError?.message;if(!["Receiving end does not exist.","The message port closed before a response was received."].some((t=>e?.includes(t)??!1)))throw chrome.runtime.lastError}var t;function r(e,t=10){const r=parseInt(e,t);if(isNaN(r))throw new Error(`'${e}' is not a valid integer value`);return r}function a(e,t){if(null!=t)throw{message:e,data:t};throw new Error("[OGame Tracker] "+e)}function n(){const e=function(){const e=function(){const e={};return document.cookie.split(";").forEach((t=>{const[r,a]=t.split("=").map((e=>decodeURIComponent(e.trim())));e[r]=a})),e}().oglocale;return null==e||"undefined"==e?document.querySelector('meta[name="ogame-language"]')?.content??a("Cannot find language meta tag"):e}(),t=(document.querySelector('meta[name="ogame-universe"]')?.content??a("Cannot find universe meta tag")).split(".")[0].split("-"),n=t[0].replace(/^s/,""),i=t[1];return/^\d+$/.test(n)||a("Found ogame universe tag but failed to extract server id from it"),{language:i,userLanguage:e,serverId:r(n,10),playerId:r(document.querySelector('meta[name="ogame-player-id"]')?.content??a("Cannot find player id meta tag"),10)}}!function(e){e.StayAlive="internal/stay-alive",e.DropDatabaseConnections="internal/drop-db-connections",e.Notification="notification",e.TrackExpedition="expedition/track-expedition",e.Expedition="expedition/single",e.NewExpedition="expedition/new",e.DebrisFieldReport="debris-fields/single",e.NewDebrisFieldReport="debris-fields/new",e.TrackDebrisFieldReport="debris-fields/track",e.TrackManualDebrisFieldReport="debris-fields/track-manually",e.CombatReport="combat-reports/single",e.NewCombatReport="combat-reports/new",e.TrackCombatReport="combat-reports/track",e.RequestSingleCombatReport="combat-reports/request-single-report",e.CombatReportUnknown="combat-reports/is-unknown",e.WillNotBeTracked="message-tracking/no-tracking",e.TrackingError="message-tracking/error",e.UpdatePlanetData="empire/update-planet-data",e.UpdatePlanetActiveItems="empire/update-active-items",e.UpdatePlanetBuildingLevels="empire/update-buildings-levels",e.UpdateResearchLevels="empire/update-research-levels",e.UpdatePlanetShipCounts="empire/update-planet-ships",e.UpdatePlanetDefenseCounts="empire/update-planet-defenses",e.UpdatePlanetMissileCounts="empire/update-planet-missiles",e.UpdateActiveOfficers="empire/update-active-officers",e.UpdatePlayerClass="empire/update-player-class",e.UpdateAllianceClass="empire/update-alliance-class",e.UpdatePlanetProductionSettings="empire/update-planet-production-settings",e.UpdateFleets="empire/fleets",e.NotifyEmpireDataUpdate="empire/notify-update",e.RequestSettings="settings/request-data",e.Settings="settings/data",e.NotifySettingsUpdate="settings/notify-update",e.NotifyUniverseHistoryUpdate="universe-history/notify-update",e.NotifyServerSettingsUpdate="server-settings/notify-update",e.ForceUpdateServerSettings="server-settings/force-update",e.UpdatePlayerName="accounts/update-player-name",e.UpdateUniverseName="universes/update-universe-name",e.NotifyUniverseSpecificSettingsUpdate="universe-specific-settings/notify-update",e.UpdateLifeformExperience="lifeforms/update-lifeform-experience",e.UpdateSelectedLifeform="lifeforms/update-selected-lifeform",e.UpdatePlanetActiveLifeformBuildingLevels="lifeforms/update-active-building-levels",e.UpdatePlanetLifeformBuildingLevels="lifeforms/update-all-building-levels",e.UpdatePlanetActiveLifeformTechnologyLevels="lifeforms/update-active-technology-levels",e.UpdatePlanetLifeformTechnologyLevels="lifeforms/update-all-technology-levels",e.TrackLifeformDiscovery="lifeforms/track-discovery",e.LifeformDiscovery="lifeforms/discovery",e.NewLifeformDiscovery="lifeforms/new-discovery"}(t||(t={}));const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,o=function(e){return"string"==typeof e&&i.test(e)};for(var s=[],l=0;l<256;++l)s.push((l+256).toString(16).substr(1));function c(e,t,r,a){switch(e){case 0:return t&r^~t&a;case 1:case 3:return t^r^a;case 2:return t&r^t&a^r&a}}function p(e,t){return e<<t|e>>>32-t}var d=function(e,t,r){function a(e,t,a,n){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t}(e)),"string"==typeof t&&(t=function(e){if(!o(e))throw TypeError("Invalid UUID");var t,r=new Uint8Array(16);return r[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r}(t)),16!==t.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var i=new Uint8Array(16+e.length);if(i.set(t),i.set(e,t.length),(i=r(i))[6]=15&i[6]|80,i[8]=63&i[8]|128,a){n=n||0;for(var l=0;l<16;++l)a[n+l]=i[l];return a}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase();if(!o(r))throw TypeError("Stringified UUID is invalid");return r}(i)}try{a.name="v5"}catch(e){}return a.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",a.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",a}(0,0,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],r=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var a=unescape(encodeURIComponent(e));e=[];for(var n=0;n<a.length;++n)e.push(a.charCodeAt(n))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var i=e.length/4+2,o=Math.ceil(i/16),s=new Array(o),l=0;l<o;++l){for(var d=new Uint32Array(16),f=0;f<16;++f)d[f]=e[64*l+4*f]<<24|e[64*l+4*f+1]<<16|e[64*l+4*f+2]<<8|e[64*l+4*f+3];s[l]=d}s[o-1][14]=8*(e.length-1)/Math.pow(2,32),s[o-1][14]=Math.floor(s[o-1][14]),s[o-1][15]=8*(e.length-1)&4294967295;for(var u=0;u<o;++u){for(var m=new Uint32Array(80),g=0;g<16;++g)m[g]=s[u][g];for(var v=16;v<80;++v)m[v]=p(m[v-3]^m[v-8]^m[v-14]^m[v-16],1);for(var y=r[0],U=r[1],h=r[2],b=r[3],w=r[4],k=0;k<80;++k){var S=Math.floor(k/20),C=p(y,5)+c(S,U,h,b)+w+t[S]+m[k]>>>0;w=b,b=h,h=p(U,30)>>>0,U=y,y=C}r[0]=r[0]+y>>>0,r[1]=r[1]+U>>>0,r[2]=r[2]+h>>>0,r[3]=r[3]+b>>>0,r[4]=r[4]+w>>>0}return[r[0]>>24&255,r[0]>>16&255,r[0]>>8&255,255&r[0],r[1]>>24&255,r[1]>>16&255,r[1]>>8&255,255&r[1],r[2]>>24&255,r[2]>>16&255,r[2]>>8&255,255&r[2],r[3]>>24&255,r[3]>>16&255,r[3]>>8&255,255&r[3],r[4]>>24&255,r[4]>>16&255,r[4]>>8&255,255&r[4]]}));const f=d,u="774522d3-7912-4e5c-b55b-e17198620b32",m=(f("service-worker",u),f("message-tracking",u),f("empire-tracking",u),f("universe-account-tracking",u),f("internal",u));function g(){var r;r={type:t.StayAlive,ogameMeta:n(),senderUuid:m},chrome.runtime.sendMessage(r,e),setTimeout((()=>g()),6e4)}setTimeout((()=>g()),0)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,