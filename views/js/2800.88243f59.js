"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[2800],{2800:(t,e,n)=>{n.r(e),n.d(e,{default:()=>p});var i=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("div",{staticClass:"version"},[t._v("Version: "+t._s(t.version))]),n("hr"),n("h3",{domProps:{textContent:t._s(t.$i18n.$t.extension.about.info.table.currentAccount.header)}}),t.loading?n("loading-spinner"):n("grid-table",{staticClass:"info-table",staticStyle:{width:"400px"},attrs:{items:t.itemsCurrentAccount,columns:t.columns,"no-header":""}}),n("hr"),n("h3",{domProps:{textContent:t._s(t.$i18n.$t.extension.about.info.table.global.header)}}),t.loading?n("loading-spinner"):n("grid-table",{staticClass:"info-table",staticStyle:{width:"400px"},attrs:{items:t.itemsGlobal,columns:t.columns,"no-header":""}})],1)},s=[],r=n(655),a=n(4028),o=n(4992),u=n(5359),l=n(7090),c=n(6903),b=n(7076),h=n(5038),d=n(9828);let $=class extends a.w3{get version(){return chrome.runtime.getManifest().version}get currentAccountExpeditions(){return l.m.count}get currentAccountCombats(){return o.t.count}get currentAccountDfReports(){return u.J.count}get currentAccountLfDiscoveries(){return c.F.count}get trackedAccounts(){return d.z.accounts.length}get lastServerSettingsUpdate(){return b.s.lastUpdate}universeHistoryEntries=0;totalBytesInUse=0;loading=!0;async mounted(){this.universeHistoryEntries=await h.z.getNumberOfTotalEntries(),this.totalBytesInUse=(await navigator.storage.estimate()).usage??0,this.loading=!1}get itemsCurrentAccount(){return[{label:this.$i18n.$t.extension.about.info.table.currentAccount.numberOfTrackedExpeditions,value:this.$i18n.$n(this.currentAccountExpeditions)},{label:this.$i18n.$t.extension.about.info.table.currentAccount.numberOfTrackedCombatReports,value:this.$i18n.$n(this.currentAccountCombats)},{label:this.$i18n.$t.extension.about.info.table.currentAccount.numberOfTrackedDebrisFieldReports,value:this.$i18n.$n(this.currentAccountDfReports)},{label:this.$i18n.$t.extension.about.info.table.currentAccount.numberOfTrackedLifeformDiscoveries,value:this.$i18n.$n(this.currentAccountLfDiscoveries)},{label:this.$i18n.$t.extension.about.info.table.currentAccount.lastUpdateServerSettings,value:null==this.lastServerSettingsUpdate?"-":this.$i18n.$d(this.lastServerSettingsUpdate,"date")},{label:this.$i18n.$t.extension.about.info.table.currentAccount.numberOfUniverseHistoryEntries,value:this.$i18n.$n(this.universeHistoryEntries)}]}get itemsGlobal(){return[{label:this.$i18n.$t.extension.about.info.table.global.numberOfTrackedAccounts,value:this.$i18n.$n(this.trackedAccounts)},{label:this.$i18n.$t.extension.about.info.table.global.estimatedSize,value:this.formatBytes(this.totalBytesInUse)}]}get columns(){return[{key:"label",label:""},{key:"value",label:""}]}formatBytes(t){const e=["B","kB","MB","GB"];let n=0;const i=1e3;while(t>i&&e.length>n+1)t/=i,n++;return`${this.$i18n.$n(t,{maximumFractionDigits:1})} ${e[n]}`}};$=(0,r.gn)([(0,a.wA)({})],$);const g=$,m=g;var f=n(1001),v=(0,f.Z)(m,i,s,!1,null,"7d07e0ef",null);const p=v.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,