"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[3064],{3768:(e,a,r)=>{if(r.d(a,{p:()=>i}),5061!=r.j)var t=r(6882);if(5061!=r.j)var s=r(5034);if(5061!=r.j)var o=r(2809);async function i(e){(0,t.gW)("broadcasting message",e),(0,o.b)(e);const a=await chrome.tabs.query({url:"*://*/bots/*/browser/html/*"});a.forEach((a=>{null!=a.id&&chrome.tabs.sendMessage(a.id,e,s.e)}))}},5034:(e,a,r)=>{function t(){const e=chrome.runtime.lastError?.message;if(!["Receiving end does not exist.","The message port closed before a response was received."].some((a=>e?.includes(a)??!1)))throw chrome.runtime.lastError}r.d(a,{e:()=>t})},2809:(e,a,r)=>{if(r.d(a,{b:()=>s}),5061!=r.j)var t=r(5034);function s(e){chrome.runtime.sendMessage(e,t.e)}},2927:(e,a,r)=>{r.d(a,{J:()=>t});const t=8},9167:(e,a,r)=>{var t;r.d(a,{I:()=>t}),function(e){e["cs"]="cs",e["de"]="de",e["da"]="da",e["el"]="el",e["en"]="en",e["es-es"]="es-es",e["es-ar"]="es-ar",e["es-mx"]="es-mx",e["fr"]="fr",e["hr"]="hr",e["hu"]="hu",e["it"]="it",e["nl"]="nl",e["pl"]="pl",e["pt-br"]="pt-br",e["pt-pt"]="pt-pt",e["ro"]="ro",e["ru"]="ru",e["sl"]="sl",e["tr"]="tr",e["zh-tw"]="zh-tw"}(t||(t={}))},1821:(e,a,r)=>{r.d(a,{j:()=>Ea});var t=r(655),s=r(6538),o=r(874),i=r(4028),n=r(9167),l=r(2057);const d={[l.g.lightFighter]:"Leichter Jäger",[l.g.heavyFighter]:"Schwerer Jäger",[l.g.cruiser]:"Kreuzer",[l.g.battleship]:"Schlachtschiff",[l.g.battlecruiser]:"Schlachtkreuzer",[l.g.bomber]:"Bomber",[l.g.destroyer]:"Zerstörer",[l.g.deathStar]:"Todesstern",[l.g.reaper]:"Reaper",[l.g.pathfinder]:"Pathfinder",[l.g.smallCargo]:"Kleiner Transporter",[l.g.largeCargo]:"Großer Transporter",[l.g.colonyShip]:"Kolonieschiff",[l.g.recycler]:"Recycler",[l.g.espionageProbe]:"Spionagesonde",[l.g.solarSatellite]:"Solarsatellit",[l.g.crawler]:"Crawler"};var c=r(2382);const u={[c.r.rocketLauncher]:"Raketenwerfer",[c.r.lightLaser]:"Leichtes Lasergeschütz",[c.r.heavyLaser]:"Schweres Lasergeschütz",[c.r.gaussCannon]:"Gaußkanone",[c.r.ionCannon]:"Ionengeschütz",[c.r.plasmaTurret]:"Plasmawerfer",[c.r.smallShieldDome]:"Kleine Schildkuppel",[c.r.largeShieldDome]:"Große Schildkuppel"};var m=r(6864);const g={[m.A.metalMine]:"Metallmine",[m.A.metalStorage]:"Metallspeicher",[m.A.crystalMine]:"Kristallmine",[m.A.crystalStorage]:"Kristallspeicher",[m.A.deuteriumSynthesizer]:"Deuterium-Synthetisierer",[m.A.deuteriumTank]:"Deuteriumtank",[m.A.solarPlant]:"Solarkraftwerk",[m.A.fusionReactor]:"Fusionskraftwerk",[m.A.roboticsFactory]:"Roboterfabrik",[m.A.naniteFactory]:"Nanitenfabrik",[m.A.shipyard]:"Raumschiffswerft",[m.A.spaceDock]:"Raumdock",[m.A.missileSilo]:"Raketensilo",[m.A.researchLab]:"Forschungslabor",[m.A.allianceDepot]:"Allianzdepot",[m.A.terraformer]:"Terraformer",[m.A.lunarBase]:"Mondbasis",[m.A.sensorPhalanx]:"Sensorphalanx",[m.A.jumpGate]:"Sprungtor"};var p=r(3738);const f={[p.s.energyTechnology]:"Energietechnik",[p.s.laserTechnology]:"Lasertechnik",[p.s.ionTechnology]:"Ionentechnik",[p.s.hyperspaceTechnology]:"Hyperraumtechnik",[p.s.plasmaTechnology]:"Plasmatechnik",[p.s.espionageTechnology]:"Spionagetechnik",[p.s.computerTechnology]:"Computertechnik",[p.s.astrophysics]:"Astrophysik",[p.s.intergalacticResearchNetwork]:"Intergalaktisches Forschungsnetzwerk",[p.s.gravitonTechnology]:"Gravitonforschung",[p.s.combustionDrive]:"Verbrennungstriebwerk",[p.s.impulseDrive]:"Impulstriebwerk",[p.s.hyperspaceDrive]:"Hyperraumantrieb",[p.s.weaponsTechnology]:"Waffentechnik",[p.s.shieldingTechnology]:"Schildtechnik",[p.s.armorTechnology]:"Raumschiffpanzerung"};var h=r(3418);const b={[h.e5.none]:"Keine Lebensform",[h.e5.humans]:"Menschen",[h.e5.rocktal]:"Rock'tal",[h.e5.mechas]:"Mechas",[h.e5.kaelesh]:"Kaelesh"};var y=r(2816);const v={[y.EO.residentialSector]:"Wohnsektor",[y.EO.biosphereFarm]:"Biosphären-Farm",[y.EO.researchCentre]:"Forschungszentrum",[y.EO.academyOfSciences]:"Akademie der Wissenschaften",[y.EO.neuroCalibrationCentre]:"Neuro-Kalibrierungszentrum",[y.EO.highEnergySmelting]:"Hochenergie-Schmelze",[y.EO.foodSilo]:"Nahrungsspeicher",[y.EO.fusionPoweredProduction]:"Fusionsbetriebene Förderung",[y.EO.skyscraper]:"Skyscraper",[y.EO.biotechLab]:"Biotech-Labor",[y.EO.metropolis]:"Metropolis",[y.EO.planetaryShield]:"Planetar-Schild",[y.EO.meditationEnclave]:"Meditationsenklave",[y.EO.crystalFarm]:"Kristallzucht",[y.EO.runeTechnologium]:"Runentechnologikum",[y.EO.runeForge]:"Runenschmiede",[y.EO.oriktorium]:"Oriktorium",[y.EO.magmaForge]:"Magma-Schmelze",[y.EO.disruptionChamber]:"Disruptionskammer",[y.EO.megalith]:"Felsenmonument",[y.EO.crystalRefinery]:"Kristall-Raffinerie",[y.EO.deuteriumSynthesiser]:"Deuterium-Syntonisierer",[y.EO.mineralResearchCentre]:"Mineral-Forschungszentrum",[y.EO.advancedRecyclingPlant]:"Hochleistungs-Verwertungsanlage",[y.EO.assemblyLine]:"Fertigungsstraße",[y.EO.fusionCellFactory]:"Fusionszellen-Fabrik",[y.EO.roboticsResearchCentre]:"Robotik-Forschungszentrum",[y.EO.updateNetwork]:"Update-Netzwerk",[y.EO.quantumComputerCentre]:"Quanten-Computerzentrum",[y.EO.automatisedAssemblyCentre]:"Automatisiertes Montagezentrum",[y.EO.highPerformanceTransformer]:"Hochleistungs-Transformator",[y.EO.microchipAssemblyLine]:"Mikrochip-Fertigungsstraße",[y.EO.productionAssemblyHall]:"Fließband-Montagehalle",[y.EO.highPerformanceSynthesiser]:"Hochleistungs-Synthetisierer",[y.EO.chipMassProduction]:"Chip-Massenproduktion",[y.EO.nanoRepairBots]:"Nano-Reparaturbots",[y.EO.sanctuary]:"Refugium",[y.EO.antimatterCondenser]:"Antimaterie-Kondensator",[y.EO.vortexChamber]:"Vortexkammer",[y.EO.hallsOfRealisation]:"Hallen der Erkenntnis",[y.EO.forumOfTranscendence]:"Forum der Transzendenz",[y.EO.antimatterConvector]:"Antimaterie-Konvektor",[y.EO.cloningLaboratory]:"Klonlabor",[y.EO.chrysalisAccelerator]:"Chrysalis-Akzelerator",[y.EO.bioModifier]:"Bio-Modifikator",[y.EO.psionicModulator]:"Psionischer Modulator",[y.EO.shipManufacturingHall]:"Schiffs-Fabrikationshalle",[y.EO.supraRefractor]:"Supra-Refraktor"};var _=r(9681);const w={[_.Nw.intergalacticEnvoys]:"Intergalaktische Botschafter",[_.Nw.highPerformanceExtractors]:"Hochleistungs-Extraktoren",[_.Nw.fusionDrives]:"Fusionstriebwerke",[_.Nw.stealthFieldGenerator]:"Tarnfeld-Generator",[_.Nw.orbitalDen]:"Orbital-Versteck",[_.Nw.researchAI]:"Forschungs-KI",[_.Nw.highPerformanceTerraformer]:"Hochleistungs-Terraformer",[_.Nw.enhancedProductionTechnologies]:"Verbesserte Förderungstechnologien",[_.Nw.lightFighterMkII]:"Leichter Jäger Mk II",[_.Nw.cruiserMkII]:"Kreuzer Mk II",[_.Nw.improvedLabTechnology]:"Verbesserte Labortechnik",[_.Nw.plasmaTerraformer]:"Plasma-Terraformer",[_.Nw.lowTemperatureDrives]:"Niedrigtemperatur-Triebwerke",[_.Nw.bomberMkII]:"Bomber Mk II",[_.Nw.destroyerMkII]:"Zerstörer Mk II",[_.Nw.battlecruiserMkII]:"Schlachtkreuzer Mk II",[_.Nw.robotAssistants]:"Roboter-Assistenten",[_.Nw.supercomputer]:"Supercomputer",[_.Nw.volcanicBatteries]:"Vulkanische Batterien",[_.Nw.acousticScanning]:"Akustische Sondierung",[_.Nw.highEnergyPumpSystems]:"Hochenergie-Pumpsysteme",[_.Nw.cargoHoldExpansion_CivilianShips]:"Laderaum-Erweiterung (Zivile Schiffe)",[_.Nw.magmaPoweredProduction]:"Magmabetriebene Förderung",[_.Nw.geothermalPowerPlants]:"Geothermie-Kraftwerke",[_.Nw.depthSounding]:"Tiefensondierung",[_.Nw.ionCrystalEnhancement_heavyFighter]:"Ionenkristall-Verstärkung (Schwerer Jäger)",[_.Nw.improvedStellarator]:"Verbesserter Stellarator",[_.Nw.hardenedDiamondDrillHeads]:"Gehärtete Diamant-Bohrköpfe",[_.Nw.seismicMiningTechnology]:"Seismische Abbautechnologien",[_.Nw.magmaPoweredPumpSystems]:"Magmabetriebenes Pumpsystem",[_.Nw.ionCrystalModules]:"Ionenkristall-Module",[_.Nw.optimisedSiloConstructionMethod]:"Optimierte Silo-Bauweise",[_.Nw.diamondEnergyTransmitter]:"Diamant-Energietransmitter",[_.Nw.obsidianShieldReinforcement]:"Obsidian-Schildverstärkung",[_.Nw.runeShields]:"Runenschilde",[_.Nw.rocktalCollectorEnhancement]:"Rock`tal-Kollektorverstärkung",[_.Nw.catalyserTechnology]:"Katalysator-Technik",[_.Nw.plasmaDrive]:"Plasma-Antrieb",[_.Nw.efficiencyModule]:"Effizienz-Modul",[_.Nw.depotAI]:"Depot-KI",[_.Nw.generalOverhaul_lightFighter]:"Generalüberholung (Leichter Jäger)",[_.Nw.automatedTransportLines]:"Automatisierte Förderstraßen",[_.Nw.improvedDroneAI]:"Verbesserte Drohnen-KI",[_.Nw.experimentalRecyclingTechnology]:"Experimentelle Wiederaufbereitungstechnik",[_.Nw.generalOverhaul_cruiser]:"Generalüberholung (Kreuzer)",[_.Nw.slingshotAutopilot]:"Slingshot-Autopilot",[_.Nw.highTemperatureSuperconductors]:"Hochtemperatur-Supraleiter",[_.Nw.generalOverhaul_battleship]:"Generalüberholung (Schlachtschiff)",[_.Nw.artificialSwarmIntelligence]:"Künstliche Schwarmintelligenz",[_.Nw.generalOverhaul_battlecruiser]:"Generalüberholung (Schlachtkreuzer)",[_.Nw.generalOverhaul_bomber]:"Generalüberholung (Bomber)",[_.Nw.generalOverhaul_destroyer]:"Generalüberholung (Zerstörer)",[_.Nw.experimentalWeaponsTechnology]:"Experimentelle Waffentechnik",[_.Nw.mechanGeneralEnhancement]:"Mecha-Generalverstärkung",[_.Nw.heatRecovery]:"Wärme-Rückgewinnung",[_.Nw.sulphideProcess]:"Sulfid-Prozesstechnik",[_.Nw.psionicNetwork]:"Psionisches Netzwerk",[_.Nw.telekineticTractorBeam]:"Telekinese-Traktorstrahl",[_.Nw.enhancedSensorTechnology]:"Verbesserte Sensortechnik",[_.Nw.neuromodalCompressor]:"Neuromodaler Komprimator",[_.Nw.neuroInterface]:"Neuro-Interface",[_.Nw.interplanetaryAnalysisNetwork]:"Superglobales Analysenetzwerk",[_.Nw.overclocking_heavyFighter]:"Übertaktung (Schwerer Jäger)",[_.Nw.telekineticDrive]:"Telekinetisches Schubsystem",[_.Nw.sixthSense]:"Sechster Sinn",[_.Nw.psychoharmoniser]:"Psycho-Harmonisierer",[_.Nw.efficientSwarmIntelligence]:"Effiziente Schwarmintelligenz",[_.Nw.overclocking_largeCargo]:"Übertaktung (Großer Transporter)",[_.Nw.gravitationSensors]:"Gravitationssensoren",[_.Nw.overclocking_battleship]:"Übertaktung (Schlachtschiff)",[_.Nw.psionicShieldMatrix]:"Psionische Schutzmatrix",[_.Nw.kaeleshDiscovererEnhancement]:"Kaelesh-Entdeckerverstärkung"},S={darkMatter:"Dunkle Materie"},k={tabs:{dateRanges:"Datumsbereiche",colors:"Farben",common:"Allgemein",importExport:"Import/Export",expeditions:"Expeditionen",combats:"Kämpfe",debrisFields:"Trümmerfelder",resourceBalance:"Rohstoffbilanz",universeHistory:"Universumshistorie",dangerZone:"Gefahrenzone",accessbility:"Barrierefreiheit",linkAccounts:"Accounts verknüpfen",migrateOldData:"Altdaten migrieren"},dateRanges:{defaultNames:{today:"Heute",yesterday:"Gestern",currentWeek:"Aktuelle Woche",lastWeek:"Letzte Woche",currentMonth:"Aktueller Monat",newRange:"Neuer Bereich"},since:e=>`Seit ${e}`,firstDayTemplate:"<erster Tag>",headers:{label:"Benennung",type:"Typ",rangeStart:"Bereich startet vor",rangeContains:"Bereich enthält"},day:"Tag",days:"Tag",daysAgo:"Tagen",week:"Woche",weeks:"Wochen",weeksAgo:"Wochen",month:"Monat",months:"Monate",monthsAgo:"Monaten",year:"Jahr",years:"Jahre",yearsAgo:"Jahren"},colors:{combatResults:"Kampfergebnis",expeditionEvents:"Expeditionsereignisse",expeditionEventSizes:"Ereignisgrößen",expeditionDepletionLevels:"Systemauslastung",lifeformDiscoveries:"Entdeckungsmissionen",lifeforms:"Lebensformen",resources:"Rohstoffe",ships:"Schiffe"},common:{extensionLanguage:"UI-Sprache (im OGame Tracker)",extensionLanguageFallbackHint:"Sollten Texte nicht in der gewählten Sprache verfügbar sein, werden englische Texte angezeigt.",conversionRates:{title:"Umrechnungskurse",msuLong:"Umrechnung nach Metall",dsuLong:"Umrechnung nach Deuterium"},serverSettings:{title:"Serverdaten",lastUpdate:"Letzte Aktualisierung",forceUpdate:"Serverdaten aktualisieren"}},expeditions:{resourceUnitFactorsOfShipFoundOnExpeditions:"Faktoren der Rohstoffeinheiten auf Expeditionen gefundener Schiffe"},combats:{resourceUnitFactorsOfLostShips:"Faktoren der Rohstoffeinheiten in Kämpfen verlorener Schiffe",ignoreEspionageCombats:{title:"Spionagekämpfe ignorieren",label:"Spionage-Kampfberichte für das Tracking ignorieren"}},resourceBalance:{detailedResourceBalance:{header:"Detaillierte Rohstoffbilanz",checkboxLabel:"detaillierte Anzeige der Rohstoffbilanz"},includeShipsFoundOnExpeditions:{header:"Auf Expeditionen gefundene Schiffe",checkboxLabel:"Rohstoffeinheiten auf Expeditionen gefundener Schiffe in die Rohstoffbilanz einbeziehen"},includeShipsLostInCombats:{header:"In Kämpfen verlorene Schiffe",checkboxLabel:"Rohstoffeinheiten in Kämpfen verlorener Schiffe in die Rohstoffbilanz einbeziehen"},includeLostLootResources:{header:"In Kämpfen verlorene Rohstoffe",checkboxLabel:"in Kämpfen verlorene Rohstoffeinheiten in die Rohstoffbilanz einbeziehen"}},showConvertedUnitsInTables:{title:"MSE/DSE in Tabellen",label:"Umgerechnete MSE/DSE-Werte in Tabellen anzeigen",infoAmortization:"Amotisationszeit wird weiterhin anhand von Kosten und Produktion in MSE/DSE errechnet"},reset:"Einstellungen zurücksetzen",setDefaultRoute:"als Standardauswahl festlegen",setDefaultSubRoute:"als Standardauswahl für diesen Bereich auswählen",dangerZone:{doYouWantToContinue:"BIST DU SICHER, DASS DU FORTFAHREN WILLST?",deleteExpeditions:{button:e=>`Alle getrackten Expeditionen des aktuell gewählten Accounts (${e}) entfernen`,confirmationText:(e,a)=>`Nach dem Bestätigen dieser Aktion werden alle ${a} getrackten Expeditionen des aktuell gewählten Accounts (${e}) gelöscht.`},deleteCombats:{button:e=>`Alle getrackten Kämpfe des aktuell gewählten Accounts (${e}) entfernen`,confirmationText:(e,a)=>`Nach dem Bestätigen dieser Aktion werden alle ${a} getrackten Kämpfe des aktuell gewählten Accounts (${e}) gelöscht.`},deleteDebrisFieldReports:{button:e=>`Alle getrackten TF-Abbauberichte des aktuell gewählten Accounts (${e}) entfernen`,confirmationText:(e,a)=>`Nach dem Bestätigen dieser Aktion werden alle ${a} getrackten TF-Abbauberichte des aktuell gewählten Accounts (${e}) gelöscht.`},deleteAccount:{button:e=>`Alle Daten des aktuell gewählten Accounts (${e}) entfernen`,confirmationText:e=>`Nach dem Bestätigen dieser Aktion werden alle gespeicherten Daten des aktuell gewählten Accounts (${e}) gelöscht.\nDies beinhaltet die getrackte Universumshistorie dieses Servers sofern kein anderer Account für diesen Server getrackt ist.`},deleteUniverseHistory:{button:e=>`Universumshistorie des aktuell gewählten Universums (${e}) entfernen`,confirmationText:e=>`Nach dem Bestätigen dieser Aktion werden alle getrackten Daten zur Universumshistorie des aktuell gewählten Universums (${e}) gelöscht.`},deleteEverything:{button:"Alle Daten entfernen",confirmationText1:"Nach dem Bestätigen dieser Aktion werden alle Daten gelöscht.\nDas heißt, alle Daten inklusive getrackter Expeditionen, Kämpfe, TF-Abbauberichte, Universumshistorie und mehr, werden entfernt.",confirmationText2:"Bitte bestätige erneut, dass du alle Daten löschen möchtest."}},importExport:{export:{header:"Export",description:"Hier kannst du deine Daten exportieren. Der Export enthält alle relevanten Daten deiner getrackten Accounts und dazugehörigen Servern.",includeUniverseHistory:"auch Universumshistorie exportieren (kann die Dateigröße und Importzeit deutlich erhöhen!)",button:"Export starten",wait:"Bitte warte während deine Daten für den Export vorbereitet werden...",errors:{unexpectedError:"Ein unerwarteter Fehler ist während des Exports aufgetreten."}},import:{header:"Import",description:"Hier kannst du deine Daten aus einer Datei importieren. Bitte wähle die Importdatei.",button:"Import starten",wait:"Bitte warte während deine Daten importiert werden...",errors:{invalidFormat:"Das Dateiformat ist ungültig.",unexpectedError:"Ein unerwarteter Fehler ist während des Imports aufgetreten."}},importCallbacks:{importingSettings:"Einstellungen werden imporiert",importingBasicData:"Grundlegende Account- und Server-Informationen werden importiert",importingUniverseHistories:(e,a,r,t)=>{const s="Universumshistorien werden importiert";return`${s} (Server ${e+1}/${a}, Eintrag ${r+1}/${t})`},importingAccounts:(e,a,r,t,s)=>{const o="Accounts werden importiert",i=`${e+1}/${a}`;if("account"==r)return`${o} (${i})`;if("combat-reports"==r)return`${o} (${i}, Kampf ${t+1}/${s})`;if("expeditions"==r)return`${o} (${i}, Expedition ${t+1}/${s})`;if("debris-fields"==r)return`${o} (${i}, TF-Berícht ${t+1}/${s})`;if("lifeform-discoveries"==r)return`${o} (${i}, LF-Mission ${t+1}/${s})`;if("empire.data"==r)return`${o} (${i}, grundlegende Imperiumsdaten)`;if("empire.planets"==r)return`${o} (${i}, Planet ${t+1}/${s})`;if("empire.moons"==r)return`${o} (${i}, Mond ${t+1}/${s})`;if("universe-specific-settings"==r)return`${o} (${i}, universumsspezifische Einstellungen)`;throw new Error(`Invalid type '${r}'`)}}},accessibility:{showSimplifiedResults:{title:"Vereinfachte Ansicht",label:"Vereinfachte Ansicht, versteckt Originaltexte von Expeditionsergebnissen und TF-Abbauberichten, und zeigt Icons anstatt Texten in den Benachrichtigungen."}},debrisFields:{separateExpeditionDebrisFields:{title:"TFs von Position 16 separat anzeigen",label:"TFs von Position 16 separat anzeigen"}},linkAccounts:{header:e=>`Accounts mit dem aktuellen Account (${e}) verknüpfen`,descriptionHtml:e=>`Hier sollten nur Accounts miteinander verknüpft werden, wenn die Daten der gewählten Accounts als Daten des aktuellen Accounts (${e}) behandelt werden sollen.<br/>Dies ist zum Beispiel gewünscht, wenn ein Account aufgrund einer Fusion von einem Server auf einen anderen verschoben wurde und somit im Tracker als separater Account behandelt wird, aber bspw. die Expeditionen des ursprügnlichen Accounts weiterhin angezeigt werden sollen.<br/><br/>Beispiel: <br/><ol>\n                    <li>der Spieler "OGame Profi" spielt auf dem Server "DE Milchstraße"</li>\n                    <li>der Server "DE Milchstraße" wird nun Exodusuni bei einer Fusion</li>\n                    <li>der Spieler "OGame Profi" fusioniert also seinen Account nach "DE Wagenrad"</li>   \n                    <li>der OGame Tracker zeigt für den Account nach der Fusion keine Expeditionen mehr vom Ursprungsserver "DE Milchstraße"</li>\n                    <li>im OGame Tracker wird der Account "OGame Profi" vom Server "DE Milchstraße" mit dem Account vom Server "DE Wagenrad" verknüpft</li>\n                    <li>Expeditionen, die auf dem Ursprungsserver "DE Milchstraße" gesendet wurden, werden nun auch für den fusionierten Account auf dem Server "DE Wagenrad" angezeigt</li>\n                </ol>\n            `,linkAccount:"weiteren Account verknüpfen:",linkedAccounts:"Verknüpfte Accounts:"}};var x=r(7331);const T={[x._.metal]:"Metall",[x._.crystal]:"Kristall",[x._.deuterium]:"Deuterium",energy:"Energie"},E=T,B={averagePerDay:"⌀ pro Tag",chart:"Diagramm",table:"Tabelle",sum:"Summe",total:"gesamt",resourceUnits:"Rohstoffeinheiten",dsu:"DSE",msu:"MSE",date:"Datum",dateTime:"Datum & Zeit",madeWithLove1:"Mit",madeWithLove2:"von Wonkydonky entwickelt"};var C=r(776),A=r(5424);const D={pirates:"Piraten",aliens:"Aliens"};var P=r(1745);const I={header:"Expeditionen",tabHeaders:{overview:"Übersicht",foundResources:"Rohstofffunde",foundShips:"Flottenfunde",foundDarkMatter:S.darkMatter,foundItems:"Itemfunde",depletion:"Auslastung",info:{header:"Info",topFinds:"Top-Funde",possibleFinds:"Liste möglicher Funde"},subHeaders:{amount:"Menge",sizes:"Fundgrößen",resources:"Rohstoffeinheiten",count:"Anzahl",sizesByResource:"Fundgrößen nach Rohstoff"}},expeditionEvents:{[A.r.nothing]:"ohne Ereignis",[A.r.resources]:"Rohstofffund",[A.r.fleet]:"Flottenfund",[A.r.delay]:"Verspätung",[A.r.early]:"Verfrühung",[A.r.darkMatter]:S.darkMatter,[A.r.pirates]:D.pirates,[A.r.aliens]:D.aliens,[A.r.combat]:"Kampf",[A.r.item]:"Item",[A.r.trader]:"Händler",[A.r.lostFleet]:"Flottenverlust"},expeditionEventSizes:{[C.Mm.small]:"normaler Fund",[C.Mm.medium]:"großer Fund",[C.Mm.large]:"riesiger Fund","fled-death-star":"Gegner sind geflohen"},depletionLevels:{[P.q.none]:"Sehr Gering",[P.q.low]:"Gering",[P.q.medium]:"Mittel",[P.q.high]:"Hoch",unknown:"Unbekannt"},expeditions:"Expeditionen",finds:"Funde",shipsFound:"Schiffe gefunden",depletion:"Systemauslastung",topFinds:{title:e=>`Top-Funde (${e})`,shipUnits:"Schiffseinheiten",shipAmount:"Schiffsanzahl",size:"Größe",amount:"Menge",date:"Datum"},possibleFinds:{info:{playerClass:"Spieler-Klasse",economySpeed:"Ökonomie-Geschwindigkeit",resourceFindBonus:"Bonus Rohstofffunde",shipFindBonus:"Bonus Schiffsfunde",darkMatterFindBonus:"Bonus DM-Funde",discovererBonus:"Bonus Entdeckerklasse"},maximumFinds:"Maximalfunde",findsDarkMatter:"Bereiche der DM-Funde",listOfPossibleFinds:"Liste derzeit möglicher Funde (Rohstoffe, Schiffseinheiten)",findSizes:e=>`Fundmengen (${e})`,shipUnits:"Schiffseinheiten",shipMaxUnitsConverted:"Max. Schiffseinheiten"}};var N=r(3347);const F={header:"Kämpfe",tabHeaders:{overview:"Übersicht",loot:"Beute",lostShips:"Verlorenene Schiffe",subHeaders:{againstPlayers:"Gegen Spieler",onExpeditions:"Auf Expeditionen",amount:"Menge",resources:"Rohstoffeinheiten"}},combats:"Kämpfe",shipsLost:"verlorene Schiffe",combatResults:{[N.a.won]:"gewonnene Kämpfe",[N.a.lost]:"verlorene Kämpfe",[N.a.draw]:"Unentschieden"}},z={header:"Spenden",subHeader:"Spende, um die Entwicklung des OGame Trackers zu unterstützen",crypto:{header:"Crypto spenden"},kofi:{header:"Mit PayPal oder Kredit-/Debitkarte spenden",buttonText:"Auf Ko-Fi spenden",message:"Du brauchst keinen Account auf Ko-Fi, um dort zu spenden. Alle Spenden werden direkt an den Entwickler weitergeleitet."}},M={header:"Trümmerfelder",addDebrisFieldManually:{title:"Trümmerfeld manuell hinzufügen",buttonText:"Hinzufügen"},position:"Position"},R={header:"Rohstoffbilanz","combat-report":"aus Kämpfen","debris-field-report":"aus Trümmerfeldern",expedition:"aus Expeditionen"};var O=r(612),L=r(6105);const $={header:"Imperium",planet:"Planet",overview:{header:"Übersicht",supplyBuildings:"Versorgungsgebäude",facilityBuildings:"Anlagen"},production:{header:"Produktion",subHeaders:{resourceProduction:"Rohstoffproduktion",mineOverview:"Minenübersicht"},averagePerHour:"⌀ pro Stunde",totalPerHour:"gesamt pro Stunde",totalPerDay:"gesamt pro Tag",totalPerWeek:"gesamt pro Woche",activeProductionSettings:"aktive Produktionseinstellungen",messageProduction100:"Die angezeigten Werte beziehen sich auf einen Produktionsfaktor von 100% und berücksichtigen einen Energiemangel nicht.",mines:{crawlersAvailable:"verfügbar",crawlersToReachLimit:e=>`${e} Crawler für Maximalbonus`},items:"Aktive Items",breakdown:{basicIncome:"Grundproduktion",mineProduction:"Minenproduktion",consumption:"Verbrauch",lifeformBuildings:"Lebensform-Gebäude",crawlers:"Crawler",items:"Items",geologist:"Geologe",commandStaff:"Kommandostab",playerClass:"Spielerklasse",allianceClass:"Allianzklasse",lifeformTechnologies:"Lebensform-Technologien"},settings:{reset:"Zurücksetzen",header:"Produktionseinstellungen",applyAndClose:"Produktionseinstellungen anwenden und schließen"}},amortization:{header:"Amortisation",table:{cost:"Kosten",levels:"Stufen",productionPlus:"Produktionsplus",amortizationTime:"Amortisationszeit",groupSelectedItems:"Gewählte Elemente gruppieren",showOriginalItems:"All Elemente einzeln anzeigen",levelsOnPlanets:(e,a)=>`${e} ${1==e?"Stufe":"Stufen"} auf ${a} Planeten`},settings:{header:"Einstellungen",applyAndClose:"Einstellungen anwenden und schließen",includeSettings:{header:"Für Berechnung berücksichtigen",mines:"Minen",expeditions:"Expeditionen",expeditionsRequirement:"Hinweis: Benötigt Wahl von Lebensform-Expeditionsbonusforschungen, Lebensform-Forschungsbonusgebäuden, und/oder Astrophysik",lifeformProductionBonusBuildings:"Lebensform-Produktionsbonusgebäude",lifeformTechnologyBoostBuildings:"Lebensform-Forschungsbonusgebäude",lifeformProductionBonusTechnologies:"Lebensform-Produktionsbonusforschungen",lifeformExpeditionBonusTechnologies:"Lebensform-Expeditionsbonusforschungen",astrophysicsAndColony:"Astrophysik und neue Kolonien",astrophysicsPerformanceNote:"Hinweis: Rechenintensiv, hat starken Einfluss auf Berechnungsgeschwindigkeit"},playerSettings:{header:"Allgemeine Einstellungen",optimizeForResources:"Für gewählte Rohstoffe optimieren",officers:"Offiziere",playerClass:"Spielerklasse",allianceClass:"Allianzklasse",currentLevelOf:e=>`aktuelle Stufe ${e}`,lifeformLevels:"Lebenform-Levels",unusedRaidColonySlots:"Derzeit ungenutzte Raidkolo-Slots"},astrophysicsSettings:{header:e=>`Einstellungen zu ${e}`,newColony:"neue Kolonie"},planetSettings:{header:"Einstellungen der Planeten",global:{deselectItems:"Alle Items abwählen",ignoreInactiveLifeformTechnologySlots:"Inaktive Lebensform-Technologie-Slots für alle Planeten ignorieren",deselectAllPlanets:"Alle Planeten abwählen"},includeInResult:"für Berechnung berücksichtigen",position:"Position",maxTemperature:"Max. Temperatur",activeItems:"Aktive Items",crawlers:{title:"Crawler",percentage:"% Produktion",fixCount:"Feste Anzahl",maxCount:"Max. Anzahl"},mines:"Aktuelle Minenstufen",lifeform:"Lebensform",lifeformSettings:"Lebensform-Einstellungen",relevantLifeformBuildings:"Relevante Lebensform-Gebäude",lifeformTechnologies:"Lebensform-Technologien",ignoreEmptySlots:"Inaktive Slots ignorieren"},expeditionSettings:{header:"Expeditionseinstellungen",averageWavesPerDay:"⌀ Wellen pro Tag",items:"Slot-Items",averageExpeditionsPerDay:"⌀ Expeditionen pro Tag",shipUnitFactors:"Faktoren für Schiffseinheiten",topPlayerScore:"Punkte Platz 1"}},info:{generatingItems:"Berechne nächste Einträge",slowCalculation:"Die Amortisationsberechnung ist leider etwas langsam geworden, seitdem Lebensformen und deren Gebäude und Technologien berücksichtigt werden. Die Performance wird weiterhin untersucht und wird hoffentlich in der Zukunft verbessert.",ctrlClick:"Strg + Klick auf eine Checkbox, um alle Elemente bis zum gewählten Element an-/abzuwählen."},saveLoad:{saveButton:"Amortisationsergebnisse speichern",loadButton:e=>`Speicherstand laden (${e})`,loadedSave:(e,a)=>`Speicherstand wird angezeigt (${e}) - ${a} ausgeblendete Zeilen`,abandonedPlanet:"Aufgegebener Planet"},generateItems:e=>`${e} Einträge`},lifeforms:{header:"Lebensformen",subHeaders:{overview:"Übersicht",progress:"Fortschritt",discoveryMissions:"Missionen",discoveryResults:"Ergebnisse",experience:"Erfahrung",researchBonuses:"Globale Forschungsboni",planetBonuses:"Effektive Boni pro Planet"},planet:"Planet",lifeform:"Lebensform",buildings:"Lebensform-Gebäude",technologies:"Lebensform-Technologien",tier:"Tier",level:"Level",totalLifeformExperience:"Erfahrung (gesamt)",discoveryDateUnknown:"Unbekannt",notDiscoveredYet:"Noch nicht entdeckt",discoveryMissions:"Entdeckungsmissionen",eventTypes:{[L.y.nothing]:"Kein Fund",[L.y.lostShip]:"Schiff verloren",[L.y.newLifeformFound]:"Neue Lebensform",[L.y.knownLifeformFound]:"Lebensform-Erfahrung",[L.y.artifacts]:"Artefaktfund"},artifactFindingSizes:{[O.k.small]:"normaler Fund",[O.k.medium]:"großer Fund",[O.k.large]:"riesiger Fund",[O.k.storageFull]:"Speicher voll"},lifeformFound:"Lebensform gefunden",alwaysAvailable:"Immer verfügbar",artifacts:"Artefakte",experiencePoints:"Erfahrungspunkte",discoveredOn:"Lebensform entdeckt am",numberOfLifeformDiscoveries:"Anzahl Entdeckungen",globalResearchBonus:"Globaler Forschungsbonus",researchBonuses:{breakdown:{slot:"Slot",research:"Forschung",bonus:"Bonus",lifeformBuildingsBoost:"Lebensformgebäude-Boost",lifeformLevelBoost:(e,a)=>`Lebensform-Level-Boost (${e}: ${a})`,bugBoost:"durch Bugs verursachter Boost"},production:{header:"Rohstoffproduktion"},expeditionFinds:{header:"Expeditionsfunde",resources:"Rohstoffe",ships:"Schiffe",fleetLoss:"Flottenverluste"},expeditionSpeed:{header:"Geschwindigkeit zum Expeditionsort",bonus:"Geschwindigkeitsbonus"},ships:{header:"Schiffe",armor:"Panzerung",shield:"Schild",damage:"Schaden",cargo:"Laderaum",speed:"Geschwindigkeit"},defenses:{header:"Verteidigungsanlagen"},fuelConsumption:{header:"Treibstoffverbrauch"},fuelReturn:{header:"Treibstoffrückgewinn bei Rückruf",bonus:"Treibstoffrückgewinn"},buildingCostTime:{header:"Gebäude Kosten & Zeit",cost:"Kosten",time:"Zeit"},researchCostTime:{header:"Forschungen Kosten & Zeit",researches:"Forschungen",lifeformResearches:"Lebensform-Forschungen"},crawlers:{header:"Crawler",productionBonus:"Rohstoffproduktion",energyConsumption:"Energieverbrauch"},denCapacity:{header:"Versteckkapazität"},phalanxRange:{header:"Phalanx-Reichweite"},discoveryMissions:{header:"Geschwindigkeit Entdeckungsmissionen"},playerClasses:{header:"Spielerklassen",collector:{productionBonus:"Erhöhte Minenproduktion",energyProductionBonus:"Erhöhte Energieproduktion",transporterSpeedBonus:"Transporter-Geschwindigkeitsbonus",transporterCargoBonus:"Transporter-Laderaumbonus",crawlerProductionBonus:"Crawler-Produktionsbonus",geologistCrawlerAmountBonus:"Mehr verwendbare Crawler mit Geologe"},discoverer:{researchDuration:"Forschungszeit",increasedExpeditionFinds:"Erhöhter Ertrag bei Expeditionen",largerPlanets:"Größere Planeten bei Kolonisierung",additionalExpeditionSlots:"Zusätzliche Expeditionsslots",reducedExpeditionCombatChance:"Chance auf Expeditionsgegner",phalanxRange:"Erhöhte Phalanx-Reichweite"},general:{combatShipSpeed:"Kampfschiff-Geschwindigkeitsbonus",recyclerSpeed:"Recycler-Geschwindigkeitsbonus",fuelConsumption:"Treibstoffverbrauch für alle Schiffe",increasedCargoRecyclersPathfinders:"Erhöhter Laderaum für Recycler/Pathfinder",additionalCombatResearchLevels:"Zusätzliche Kampfforschungsstufen",additionalFleetSlots:"Zusätzliche Flottenslots",additionalMoonFields:"Zusätzliche Mondfelder"},classBonus:"Klassenbonus",bonus:"Bonus",baseValue:"Basiswert",valueWithBonuses:"Wert inkl. Boni"}},planetBonuses:{resourceProduction:{header:"Rohstoffproduktion"},lifeformResearchCostTime:{header:"Lebensformforschungen Kosten & Zeit"},wreckfield:{header:"Wrackfeld"}},topFinds:{topFinds:"Beste Funde",worstFinds:"Schlechteste Funde",size:"Größe",amount:"Menge",date:"Datum",artifacts:"Artefakte",experience:"XP"}}},q={title:"Account wählen, um Daten in neuem Tab anzusehen"},H={faqHelp:{header:"Hilfe",faq:{header:"F.A.Q.",fleetLostOnExpedition:{header:"Warum werden deine Schiffe nicht getrackt, die du auf Expeditionen verloren hast?",text:"Das Tracking verlorener Schiffe erfordert dauerhaftes Flottentracking, was nicht möglich ist."},syncBetweenDevices:{header:"Warum werden deine Daten nicht auf mehreren Geräten synchronisiert?",text:"Die Menge der vom Tracker erfassten Daten übersteigt die Größe der Daten, die über deinen Nutzeraccount (Google, Microsoft, o.ä.) synchronisiert werden können. Eine Synchronisierung über einen externen Server wird eventuell in der Zukunft möglich sein."},productionInResourceBalance:{header:"Warum wird deine Rohstoffproduktion nicht in der Rohstoffbilanz berücksichtigt?",text:"Die Rohstoffproduktion hängt von vielen Faktoren ab, deren Änderungen dauerhaft getrackt werden müssten. Dies ist zwar möglich, jedoch übersteigt die Komplexität dieses Features die des zusätzlichen Nutzens."},whatAreAverages:{header:"Was bedeutet '⌀ pro Tag'?",text:"Dies ist der Durchschnitt über alle Tage mit mindestens einem getrackten Ereignis."}},tips:{header:"Tipps",rightClickDefaultRoute:"Du kannst einen der linken Tabs im Hauptmenü sowie untergeordnete Menüs rechtsklicken, um dieses (Unter-)Menü als Standardmenü für die gewählte Route auszuwählen.",numbersKeyboardNavigation:"Die mit Ziffern versehenen Tabs können auch über die Tastatur geöffnet werden, indem man die passende Zifferntaste drückt.",amortizationTable:{part1:"Du möchtest wissen, was du als nächstes bauen oder forschen solltest, um deine Produktion möglichst effizient zu erhöhen? Probiere den ",name:"interaktiven Amortisationsrechner",part2:"."},inlineSettings:"Du kannst dazugehörige Einstellungen direkt ändern, indem du auf einer passenden Seite das kleine Zahnrad-Icon auf dem rechten Seite klickst.",switchAccountHtml:'Du kannst das Interface des OGame Trackers für einen anderen getrackten Accounts ansehen, indem du im Menü das Icon <span class="mdi mdi-account-multiple"></span> klickst und den passenden Account wählst.'},messageDiscord:{part1:"Du brauchst Hilfe, hast einen Bug gefunden, oder hast eine Feature-Anfrage? Tritt dem ",discordServer:"Discord-Server",part2:" bei und schreibe eine Nachricht im passenden Channel."}},info:{header:"Info",table:{currentAccount:{header:"Informationen über den ausgewählten Account",numberOfTrackedExpeditions:"Anzahl getrackter Expeditionen",numberOfTrackedCombatReports:"Anzahl getrackter Kämpfe",numberOfTrackedDebrisFieldReports:"Anzahl getrackter TF-Abbauberichte",numberOfTrackedLifeformDiscoveries:"Anzahl getrackter Entdeckungsmissionen",lastUpdateServerSettings:"Letzte Aktualisierung der Serverinformationen",numberOfUniverseHistoryEntries:"Anzahl Einträge in Universumshistorie"},global:{header:"Informationen über alle Daten im OGame Tracker",numberOfTrackedAccounts:"Anzahl getrackter Accounts",estimatedSize:"Größe aller gespeichtern Daten"}}}},G={header:"Universumshistorie",settings:{messages:{notEnabledHtml:"\n            <b>Highscore-Tracking des Universums ist deaktiviert.</b><br/>\n            Aktivieren dieses Features sorgt dafür, dass Highscoreveränderungen \n            für alle Spieler und Allianzen getrackt werden.\n            ",historyTrackingNotEnabledHtml:'\n            <b>Tracking der Universumshistorie ist deaktiviert.</b><br/>\n            Ist dieses Feature aktiviert, werden zusätzlich alle Änderungen von Spieler-\n            und Allianzinformationen getrackt.<br />\n            Dies beinhaltet Änderungen an Spieler- und Allianznamen und -Tags, Allianzmitgliedschaften,\n            Veränderungen an Spielerstatus, sowie Änderungen zu Planeten und Monden inklusive\n            Veränderungen der Namen und Koordinaten, und verlassene/zerstörte Planeten und Monde.<br/>\n\n            <i>Dies kann eine Menge Daten generieren! \n            Wird die Datenmenge zu groß, \n            kann das Feature <a href="#/settings/universe-history">in den Einstellungen</a> \n            wieder deaktiviert werden.</i>\n            ',trackingTimesHtml:"\n            Mindestens einmal täglich werden Highscores und Universumsinformationen (sofern aktiviert) aktualisiert.<br/>\n            Die Uhrzeiten für die Aktualisierungen können unten eingestellt werden.\n            Falls eine Aktualisierung zu einer Uhrzeit verpasst wurde, wird das Update so früh wie möglich nachgeholt.\n            "},enableHighscoreTrackingOnly:"Highscore-Tracking aktivieren",enableHistoryTracking:"Tracking der Universumshistorie aktivieren"},tabs:{players:"Spieler",alliances:"Allianzen",subtabs:{highscore:"Highscore",history:"Historie"}},playerSelection:{header:"Spielerauswahl",search:"Spieler suchen"},allianceSelection:{header:"Allianzauswahl",search:"Allianz suchen"},highscoreTabs:{total:"Gesamt",economy:"Ökonomie",research:"Forschung",military:"Militär",militaryBuilt:"Militär gebaut",militaryDestroyed:"Militär zerstört",militaryLost:"Militär verloren",honor:"Ehrenpunkte",numberOfShips:"Anzahl Schiffe",lifeform:"Lebensform",lifeformDiscoveries:"Lebensform-Entdeckungen",lifeformEconomy:"Lebensform-Ökonomie",lifeformTechnology:"Lebensform-Technologie"},historyTabs:{status:"Status",nicknames:"Nicknamen",alliances:"Allianzen",planetAndMoons:"Planeten & Monde",tags:"Tags",names:"Namen",members:"Mitglieder"},noAlliance:"keine Allianz",today:"heute",name:"Name",tag:"Tag",members:"Mitglieder",alliance:"Allianz",from:"Von",until:"Bis",status:{active:"Aktiv",vacation:"Urlaubsmodus",inactive:"Inaktiv (>= 7 Tage)",inactiveLong:"Inaktiv (>= 28 Tage)",banned:"Gesperrt",outlaw:"Vogelfrei",deleted:"Gelöscht",admin:"Admin"},loadingTakingLong:"Das Laden der Daten dauert länger als erwartet. Vermutlich wird die Datenbank gerade aktualisiert, bitte warte oder versuch es später erneut."},U={combatTracking:{title:e=>"1"==e?`${e} neuer Kampfbericht getrackt`:`${e} neue Kampfberichte getrackt`,message:e=>"1"==e?`Es wurde ${e} neuer Kampfbericht getrackt.`:`Es wurden ${e} neue Kampfberichte getrackt.`},debrisFieldReportTracking:{title:e=>"1"==e?`${e} neuer TF-Abbaubericht getrackt`:`${e} neue TF-Abbauberichte getrackt`,message:e=>"1"==e?`Es wurde ${e} neuer TF-Abbaubericht getrackt.`:`Es wurden ${e} neue TF-Abbauberichte getrackt.`},expeditionTracking:{fleetLost:{title:e=>"1"==e?`${e} Flottenverlust`:`${e} Flottenverluste`,message:e=>"1"==e?`${e} Flotte ist nicht von ihrer Expedition zurückgekehrt.`:`${e} Flotten sind nicht von ihrer Expedition zurückgekehrt.`},result:{title:e=>"1"==e?`${e} neue Expedition getrackt`:`${e} neue Expeditionen getrackt`,summary:"Zusammenfassung der Funde",events:"Expeditionsereignisse"}},lifeformDiscoveryTracking:{title:e=>"1"==e?`${e} neue LF-Entdeckungsmission getrackt`:`${e} neue LF-Entdeckungsmissionen getrackt`,message:e=>"1"==e?`${e} neue Lebensform-Entdeckungsmission wurde getrackt.`:`${e} neue Lebensform-Entdeckungsmissionen wurden getrackt.`},messageTrackingError:{title:e=>"1"==e?`Fehler beim Verarbeiten von ${e} Nachricht`:`Fehler beim Verarbeiten von ${e} Nachrichten`,message:e=>"1"==e?`${e} Nachricht hat einen Fehler verursacht und wurde nicht getrackt. Die fehlerhafte Nachricht wurden rot markiert. Bitte kontaktiere den Entwickler.`:`${e} Nachrichten haben einen Fehler verursacht und wurden nicht getrackt. Die fehlerhaften Nachrichten wurden rot markiert. Bitte kontaktiere den Entwickler.`}},K={signatureGenerator:{header:"Signatur-Generator",averagePerHour:"⌀/Stunde",totalPerHour:"pro Stunde",totalPerDay:"pro Tag",totalPerWeek:"pro Woche",production:"Produktion",expeditions:"Expeditionen",lifeformDiscoveries:"LF-Missionen",combats:"Kämpfe",debrisFieldReports:"Abgebaute TFs"},scrapyardMerchant:{header:"Schrotthändler",percentage:"% beim Schrotthändler",count:"Anzahl"}},V={header:"Excel-Export",chooseBelowMessage:"Wähle die zu exportierenden Daten:",groups:{expeditions:{header:"Expeditionen",rawData:"Rohdaten (jede einzelne getrackte Expedition)",dailyOverview:"Übersicht über Ergebnisse pro Tag",dailyDepletion:"Übersicht über Systemauslastung pro Tag",dailyResources:"Rohstofffunde pro Tag",dailyResourceSizes:"Größen der Rohstofffunde pro Tag",dailyShips:"Schiffsfunde pro Tag",dailyShipSizes:"Größen der Schiffsfunde pro Tag",dailyDarkMatter:"DM-Funde pro Tag",dailyDarkMatterSizes:"Größen der DM-Funde pro Tag"},combats:{header:"Kämpfe",rawData:"Rohdaten (jedes einzelne Kampfergebnis)",dailyResults:"Kampfergebnisse pro Tag",dailyLoot:"Beutebilanz pro Tag",dailyLostShips:"Verlorene Schiffe pro Tag"},debrisFields:{header:"Trümmerfelder",rawData:"Rohdaten (jeder einzelne getrackte TF-Abbaubericht)",dailyResources:"Abgebaute Rohstoffe pro Tag"},lifeformDiscoveries:{header:"Entdeckungsmissionen",rawData:"Rohdaten (jede einzelne getrackte Mission)",dailyExperience:"Gesammelte Erfahrung pro Tag"}},generateButton:"Excel-Export generieren",expeditions:{prefix:"EX",sheets:{rawData:"Rohdaten",dailyDepletion:"Tägl. Systemauslastung",dailyResults:"Tägl. Ergebnisse",dailyResources:"Tägl. Rohstoffe",dailyResourcesSize:"Tägl. Rohstoffe (Größen",dailyShips:"Tägl. Schiffe",dailyShipsSize:"Tägl. Schiffe (Größe)",dailyDarkMatter:"Tägl. DM",dailyDarkMatterSize:"Tägl. DM (Größe)"},eventType:"Typ",eventSize:"Größe",item:"Item"},combats:{prefix:"KB",sheets:{rawData:"Rohdaten",dailyResults:"Tägliche Ergebnisse",dailyLoot:"Tägliche Beute",dailyLostShips:"Täglich verlorene Schiffe"},result:"Kampfergebnis",coordinates:"Koordinaten",galaxy:"Galaxie",system:"System",position:"Position",targetType:"Zieltyp",combatType:"Kampftyp",expeditionCombatOpponent:"Expeditionskampfgegner",loot:"Beute",lostShips:"Verlorene Schiffe",debrisField:"Trümmerfeld",moon:"Mond",planet:"Planet",expeditionCombat:"Expeditionskampf",playerCombat:"Spielerkampf",pirates:"Piraten",aliens:"Aliens",againstPlayers:"Gegen Spieler",onExpeditions:"Auf Expeditionen"},debrisFields:{prefix:"TF",sheets:{rawData:"Rohdaten",dailyResources:"Tägliche Rohstoffe"}},lifeformDiscoveries:{prefix:"LF",sheets:{rawData:"Rohdaten",dailyExperience:"Tägliche Erfahrung"},result:"Fund",experience:"Erfahrung",lifeform:"Lebensform",artifacts:"Artefakte",artifactsSize:"Größe"}},j={collector:"Kollektor",discoverer:"Entdecker",general:"General",none:"keine"},W={ogame:{buildings:g,lifeforms:b,lifeformBuildings:v,lifeformTechnologies:w,premium:S,resources:E,research:f,ships:d,defenses:u},extension:{common:B,settings:k,resources:E,expeditions:I,combats:F,donate:z,debrisFields:M,resourceBalance:R,empire:$,switchAccounts:q,about:H,universeHistory:G,notifications:U,tools:K,excelExport:V,playerClasses:j}},Z={[l.g.lightFighter]:"Light Fighter",[l.g.heavyFighter]:"Heavy Fighter",[l.g.cruiser]:"Cruiser",[l.g.battleship]:"Battleship",[l.g.battlecruiser]:"Battlecruiser",[l.g.bomber]:"Bomber",[l.g.destroyer]:"Destroyer",[l.g.deathStar]:"Deathstar",[l.g.reaper]:"Reaper",[l.g.pathfinder]:"Pathfinder",[l.g.smallCargo]:"Small Cargo",[l.g.largeCargo]:"Large Cargo",[l.g.recycler]:"Recycler",[l.g.colonyShip]:"Colony Ship",[l.g.espionageProbe]:"Espionage Probe",[l.g.crawler]:"Crawler",[l.g.solarSatellite]:"Solar Satellite"},Y={[c.r.rocketLauncher]:"Rocket Launcher",[c.r.lightLaser]:"Light Laser",[c.r.heavyLaser]:"Heavy Laser",[c.r.gaussCannon]:"Gauss Cannon",[c.r.ionCannon]:"Ion Cannon",[c.r.plasmaTurret]:"Plasma Turret",[c.r.smallShieldDome]:"Small Shield Dome",[c.r.largeShieldDome]:"Large Shield Dome"},Q={[m.A.metalMine]:"Metal Mine",[m.A.metalStorage]:"Metal Storage",[m.A.crystalMine]:"Crystal Mine",[m.A.crystalStorage]:"Crystal Storage",[m.A.deuteriumSynthesizer]:"Deuterium Synthesizer",[m.A.deuteriumTank]:"Deuterium Tank",[m.A.solarPlant]:"Solar Plant",[m.A.fusionReactor]:"Fusion Reactor",[m.A.roboticsFactory]:"Robotics Factory",[m.A.naniteFactory]:"Nanite Factory",[m.A.shipyard]:"Shipyard",[m.A.spaceDock]:"Space Dock",[m.A.missileSilo]:"Missile Silo",[m.A.researchLab]:"Research Lab",[m.A.allianceDepot]:"Alliance Depot",[m.A.terraformer]:"Terraformer",[m.A.lunarBase]:"Lunar Base",[m.A.sensorPhalanx]:"Sensor Phalanx",[m.A.jumpGate]:"Jump Gate"},J={[p.s.energyTechnology]:"Energy Technology",[p.s.laserTechnology]:"Laser Technology",[p.s.ionTechnology]:"Ion Technology",[p.s.hyperspaceTechnology]:"Hyperspace Technology",[p.s.plasmaTechnology]:"Plasma Technology",[p.s.espionageTechnology]:"Espionage Technology",[p.s.computerTechnology]:"Computer Technology",[p.s.astrophysics]:"Astrophysics",[p.s.intergalacticResearchNetwork]:"Intergalactic Research Network",[p.s.gravitonTechnology]:"Graviton Technology",[p.s.combustionDrive]:"Combustion Drive",[p.s.impulseDrive]:"Impulse Drive",[p.s.hyperspaceDrive]:"Hyperspace Drive",[p.s.weaponsTechnology]:"Weapons Technology",[p.s.shieldingTechnology]:"Shielding Technology",[p.s.armorTechnology]:"Armour Technology"},X={[h.e5.none]:"No Lifeform",[h.e5.humans]:"Humans",[h.e5.rocktal]:"Rock'tal",[h.e5.mechas]:"Mechas",[h.e5.kaelesh]:"Kaelesh"},ee={[y.EO.residentialSector]:"Residential Sector",[y.EO.biosphereFarm]:"Biosphere Farm",[y.EO.researchCentre]:"Research Centre",[y.EO.academyOfSciences]:"Academy of Sciences",[y.EO.neuroCalibrationCentre]:"Neuro-Calibration Centre",[y.EO.highEnergySmelting]:"High Energy Smelting",[y.EO.foodSilo]:"Food Silo",[y.EO.fusionPoweredProduction]:"Fusion-Powered Production",[y.EO.skyscraper]:"Skyscraper",[y.EO.biotechLab]:"Biotech Lab",[y.EO.metropolis]:"Metropolis",[y.EO.planetaryShield]:"Planetary Shield",[y.EO.meditationEnclave]:"Meditation Enclave",[y.EO.crystalFarm]:"Crystal Farm",[y.EO.runeTechnologium]:"Rune Technologium",[y.EO.runeForge]:"Rune Forge",[y.EO.oriktorium]:"Oriktorium",[y.EO.magmaForge]:"Magma Forge",[y.EO.disruptionChamber]:"Disruption Chamber",[y.EO.megalith]:"Megalith",[y.EO.crystalRefinery]:"Crystal Refinery",[y.EO.deuteriumSynthesiser]:"Deuterium Synthesiser",[y.EO.mineralResearchCentre]:"Mineral Research Centre",[y.EO.advancedRecyclingPlant]:"Advanced Recycling Plant",[y.EO.assemblyLine]:"Assembly Line",[y.EO.fusionCellFactory]:"Fusion Cell Factory",[y.EO.roboticsResearchCentre]:"Robotics Research Centre",[y.EO.updateNetwork]:"Update Network",[y.EO.quantumComputerCentre]:"Quantum Computer Centre",[y.EO.automatisedAssemblyCentre]:"Automatised Assembly Centre",[y.EO.highPerformanceTransformer]:"High-Performance Transformer",[y.EO.microchipAssemblyLine]:"Microchip Assembly Line",[y.EO.productionAssemblyHall]:"Production Assembly Hall",[y.EO.highPerformanceSynthesiser]:"High-Performance Synthesiser",[y.EO.chipMassProduction]:"Chip Mass Production",[y.EO.nanoRepairBots]:"Nano Repair Bots",[y.EO.sanctuary]:"Sanctuary",[y.EO.antimatterCondenser]:"Antimatter Condenser",[y.EO.vortexChamber]:"Vortex Chamber",[y.EO.hallsOfRealisation]:"Halls of Realisation",[y.EO.forumOfTranscendence]:"Forum of Transcendence",[y.EO.antimatterConvector]:"Antimatter Convector",[y.EO.cloningLaboratory]:"Cloning Laboratory",[y.EO.chrysalisAccelerator]:"Chrysalis Accelerator",[y.EO.bioModifier]:"Bio Modifier",[y.EO.psionicModulator]:"Psionic Modulator",[y.EO.shipManufacturingHall]:"Ship Manufacturing Hall",[y.EO.supraRefractor]:"Supra Refractor"},ae={[_.Nw.intergalacticEnvoys]:"Intergalactic Envoys",[_.Nw.highPerformanceExtractors]:"High-Performance Extractors",[_.Nw.fusionDrives]:"Fusion Drives",[_.Nw.stealthFieldGenerator]:"Stealth Field Generator",[_.Nw.orbitalDen]:"Orbital Den",[_.Nw.researchAI]:"Research AI",[_.Nw.highPerformanceTerraformer]:"High-Performance Terraformer",[_.Nw.enhancedProductionTechnologies]:"Enhanced Production Technologies",[_.Nw.lightFighterMkII]:"Light Fighter Mk II",[_.Nw.cruiserMkII]:"Cruiser Mk II",[_.Nw.improvedLabTechnology]:"Improved Lab Technology",[_.Nw.plasmaTerraformer]:"Plasma Terraformer",[_.Nw.lowTemperatureDrives]:"Low-Temperature Drives",[_.Nw.bomberMkII]:"Bomber Mk II",[_.Nw.destroyerMkII]:"Destroyer Mk II",[_.Nw.battlecruiserMkII]:"Battlecruiser Mk II",[_.Nw.robotAssistants]:"Robot Assistants",[_.Nw.supercomputer]:"Supercomputer",[_.Nw.volcanicBatteries]:"Volcanic Batteries",[_.Nw.acousticScanning]:"Acoustic Scanning",[_.Nw.highEnergyPumpSystems]:"High Energy Pump Systems",[_.Nw.cargoHoldExpansion_CivilianShips]:"Cargo Hold Expansion (Civilian Ships)",[_.Nw.magmaPoweredProduction]:"Magma-Powered Production",[_.Nw.geothermalPowerPlants]:"Geothermal Power Plants",[_.Nw.depthSounding]:"Depth Sounding",[_.Nw.ionCrystalEnhancement_heavyFighter]:"Ion Crystal Enhancement (Heavy Fighter)",[_.Nw.improvedStellarator]:"Improved Stellarator",[_.Nw.hardenedDiamondDrillHeads]:"Hardened Diamond Drill Heads",[_.Nw.seismicMiningTechnology]:"Seismic Mining Technology",[_.Nw.magmaPoweredPumpSystems]:"Magma-Powered Pump Systems",[_.Nw.ionCrystalModules]:"Ion Crystal Modules",[_.Nw.optimisedSiloConstructionMethod]:"Optimised Silo Construction Method",[_.Nw.diamondEnergyTransmitter]:"Diamond Energy Transmitter",[_.Nw.obsidianShieldReinforcement]:"Obsidian Shield Reinforcement",[_.Nw.runeShields]:"Rune Shields",[_.Nw.rocktalCollectorEnhancement]:"Rock'tal Collector Enhancement",[_.Nw.catalyserTechnology]:"Catalyser Technology",[_.Nw.plasmaDrive]:"Plasma Drive",[_.Nw.efficiencyModule]:"Efficiency Module",[_.Nw.depotAI]:"Depot AI",[_.Nw.generalOverhaul_lightFighter]:"General Overhaul (Light Fighter)",[_.Nw.automatedTransportLines]:"Automated Transport Lines",[_.Nw.improvedDroneAI]:"Improved Drone AI",[_.Nw.experimentalRecyclingTechnology]:"Experimental Recycling Technology",[_.Nw.generalOverhaul_cruiser]:"General Overhaul (Cruiser)",[_.Nw.slingshotAutopilot]:"Slingshot Autopilot",[_.Nw.highTemperatureSuperconductors]:"High-Temperature Superconductors",[_.Nw.generalOverhaul_battleship]:"General Overhaul (Battleship)",[_.Nw.artificialSwarmIntelligence]:"Artificial Swarm Intelligence",[_.Nw.generalOverhaul_battlecruiser]:"General Overhaul (Battlecruiser)",[_.Nw.generalOverhaul_bomber]:"General Overhaul (Bomber)",[_.Nw.generalOverhaul_destroyer]:"General Overhaul (Destroyer)",[_.Nw.experimentalWeaponsTechnology]:"Experimental Weapons Technology",[_.Nw.mechanGeneralEnhancement]:"Mechan General Enhancement",[_.Nw.heatRecovery]:"Heat Recovery",[_.Nw.sulphideProcess]:"Sulphide Process",[_.Nw.psionicNetwork]:"Psionic Network",[_.Nw.telekineticTractorBeam]:"Telekinetic Tractor Beam",[_.Nw.enhancedSensorTechnology]:"Enhanced Sensor Technology",[_.Nw.neuromodalCompressor]:"Neuromodal Compressor",[_.Nw.neuroInterface]:"Neuro-Interface",[_.Nw.interplanetaryAnalysisNetwork]:"Interplanetary Analysis Network",[_.Nw.overclocking_heavyFighter]:"Overclocking (Heavy Fighter)",[_.Nw.telekineticDrive]:"Telekinetic Drive",[_.Nw.sixthSense]:"Sixth Sense",[_.Nw.psychoharmoniser]:"Psychoharmoniser",[_.Nw.efficientSwarmIntelligence]:"Efficient Swarm Intelligence",[_.Nw.overclocking_largeCargo]:"Overclocking (Large Cargo)",[_.Nw.gravitationSensors]:"Gravitation Sensors",[_.Nw.overclocking_battleship]:"Overclocking (Battleship)",[_.Nw.psionicShieldMatrix]:"Psionic Shield Matrix",[_.Nw.kaeleshDiscovererEnhancement]:"Kaelesh Discoverer Enhancement"},re={darkMatter:"Dark Matter"},te={tabs:{dateRanges:"Date Ranges",colors:"Colors",common:"Common",importExport:"Import/Export",expeditions:"Expeditions",combats:"Combats",debrisFields:"Debris Fields",resourceBalance:"Resource Balance",universeHistory:"Universe History",dangerZone:"Danger Zone",accessbility:"Accessibility",linkAccounts:"Link Accounts",migrateOldData:"Migrate old data"},dateRanges:{defaultNames:{today:"Today",yesterday:"Yesterday",currentWeek:"Current week",lastWeek:"Last week",currentMonth:"Current month",newRange:"new range"},since:e=>`Since ${e}`,firstDayTemplate:"<first day>",headers:{label:"Label",type:"Type",rangeStart:"Range starts",rangeContains:"Range contains"},day:"day",days:"days",daysAgo:"days ago",week:"week",weeks:"weeks",weeksAgo:"weeks ago",month:"month",months:"months",monthsAgo:"months ago",year:"year",years:"years",yearsAgo:"years ago"},colors:{combatResults:"Combat results",expeditionEvents:"Expedition events",expeditionEventSizes:"Expedition event sizes",expeditionDepletionLevels:"System depletion",lifeformDiscoveries:"Lifeform discoveries",lifeforms:"Lifeforms",resources:"Resources",ships:"Ships"},common:{conversionRates:{title:"Conversion rates",msuLong:"Convert to Metal",dsuLong:"Convert to Deuterium"},extensionLanguage:"UI language (within OGame Tracker)",extensionLanguageFallbackHint:"English texts will be shown if texts are not available in the selected language.",serverSettings:{title:"Server data",lastUpdate:"Last update",forceUpdate:"Update server data"}},expeditions:{resourceUnitFactorsOfShipFoundOnExpeditions:"Factors of resource units of ships found on expeditions"},combats:{resourceUnitFactorsOfLostShips:"Factor of resource units of ships lost in combat",ignoreEspionageCombats:{title:"Ignore espionage combats",label:"Ignore espionage combat reports for combat tracking"}},resourceBalance:{detailedResourceBalance:{header:"Detailed resource balance",checkboxLabel:"Show detailed resource balance"},includeShipsFoundOnExpeditions:{header:"Ships found in expeditions",checkboxLabel:"Include resources of ships found on expeditions in resource balance"},includeShipsLostInCombats:{header:"Ships lost in combats",checkboxLabel:"Include resources of ships lost in combats in resource balance"},includeLostLootResources:{header:"Resource lost in combats",checkboxLabel:"Include resources that were lost in combats in resource balance"}},showConvertedUnitsInTables:{title:"MSU/DSU in tables",label:"Show converted MSU/DSU values in tables",infoAmortization:"Amortization time will still be calculated using cost and production in MSU/DSU"},reset:"Reset settings",setDefaultRoute:"Set as default",setDefaultSubRoute:"Set as default for this area",dangerZone:{doYouWantToContinue:"ARE YOU SURE YOU WANT TO CONTINUE?",deleteExpeditions:{button:e=>`Delete all tracked expeditions for the currently selected account (${e})`,confirmationText:(e,a)=>`If you confirm, all ${a} tracked expeditions will be deleted for the currently selected account (${e}).`},deleteCombats:{button:e=>`Delete all tracked combats for the currently selected account (${e})`,confirmationText:(e,a)=>`If you confirm, all ${a} tracked combats will be deleted for the currently selected account (${e}).`},deleteDebrisFieldReports:{button:e=>`Delete all tracked debris field harvest reports for the currently selected account (${e})`,confirmationText:(e,a)=>`If you confirm, all ${a} tracked debris field harvest reports will be deleted for the currently selected account (${e}).`},deleteAccount:{button:e=>`Delete all data of the currently selected account (${e})`,confirmationText:e=>`If you confirm, all tracked data for the currently selected account (${e}) will be deleted.\nThis includes tracked universe history data if there is no other account tracked for this universe.`},deleteUniverseHistory:{button:e=>`Delete tracked universe history of currently selected universe (${e})`,confirmationText:e=>`If you confirm, all tracked universe history data for the currently selected universe (${e}) will be deleted.`},deleteEverything:{button:"Delete all data",confirmationText1:"If you confirm, all data will be deleted.\nThis includes tracked data of every account including tracked expeditions, combats, debris field reports, universe history data, and more.",confirmationText2:"Please confirm again that you want to delete all data."}},importExport:{export:{header:"Export",description:"Here you can export your data. This will include relevant data of all your tracked accounts and their servers.",includeUniverseHistory:"include universe history in export (this may greatly increase file size and import time!)",button:"Start export",wait:"Please wait while your data is being prepared for the export...",errors:{unexpectedError:"An unexpected error occured while exporting your data."}},import:{header:"Import",description:"Here you can import your data from a file. Please select your file.",button:"Start import",wait:"Please wait while your data is being imported...",errors:{invalidFormat:"The file format is invalid.",unexpectedError:"An unexpected error occured while importing your data."}},importCallbacks:{importingSettings:"Importing your settings",importingBasicData:"Importing basic account and server data",importingUniverseHistories:(e,a,r,t)=>{const s="Importing server universe history";return`${s} (server ${e+1}/${a}, entry ${r+1}/${t})`},importingAccounts:(e,a,r,t,s)=>{const o="Importing accounts",i=`${e+1}/${a}`;if("account"==r)return`${o} (${i})`;if("combat-reports"==r)return`${o} (${i}, combat ${t+1}/${s})`;if("expeditions"==r)return`${o} (${i}, expedition ${t+1}/${s})`;if("debris-fields"==r)return`${o} (${i}, debris field ${t+1}/${s})`;if("lifeform-discoveries"==r)return`${o} (${i}, lifeform mission ${t+1}/${s})`;if("empire.data"==r)return`${o} (${i}, basic empire data)`;if("empire.planets"==r)return`${o} (${i}, planet ${t+1}/${s})`;if("empire.moons"==r)return`${o} (${i}, moon ${t+1}/${s})`;if("universe-specific-settings"==r)return`${o} (${i}, universe specific settings)`;throw new Error(`Invalid type '${r}'`)}}},accessibility:{showSimplifiedResults:{title:"Simplified visualization",label:"Simplified visualization, hides original messages of expedition results and DF harvest reports, and shows icons instead of texts in notifications."}},debrisFields:{separateExpeditionDebrisFields:{title:"Separate position 16",label:"Separate debris fields harvested at position 16 from position 1-15"}},linkAccounts:{header:e=>`Link accounts with the current account (${e})`,descriptionHtml:e=>`You should only link accounts if you want the OGame Tracker to consider data of the linked accounts as data of the current account (${e}).<br/>This is often the case when an account has been merged to another server and is handled as a separate account in the OGame Tracker.<br/><br/>Example: <br/><ol>\n                    <li>the player "OGame Professional" is playing on the server "EN Milkyway"</li>\n                    <li>the server "EN Milkyway" becomes exodus universe during a merge</li>\n                    <li>the player "OGame Professional" merges their account to "EN Cartwheel"</li>   \n                    <li>after the merge, the OGame Tracker shows no expeditions from the original server "EN Milkyway" for the merged account</li>\n                    <li>in the OGame Tracker the old account "OGame Professional" on server "EN Milkyway" is linked to the new account "OGame Professional" on server "EN Cartwheel"</li>\n                    <li>expeditions that were sent on the old server "EN Milkyway" will now show up again for the merged account on "EN Cartwheel"</li>\n                </ol>\n            `,linkAccount:"link another account:",linkedAccounts:"Linked accounts:"}},se={[x._.metal]:"Metal",[x._.crystal]:"Crystal",[x._.deuterium]:"Deuterium",energy:"Energy"},oe=se,ie={averagePerDay:"⌀ per day",chart:"Chart",table:"Table",sum:"Sum",total:"total",resourceUnits:"Resource units",dsu:"DSU",msu:"MSU",date:"Date",dateTime:"Date & Time",madeWithLove1:"Made with",madeWithLove2:"by Wonkydonky"},ne={pirates:"Pirates",aliens:"Aliens"},le={header:"Expeditions",tabHeaders:{overview:"Overview",foundResources:"Resources",foundShips:"Ships",foundDarkMatter:re.darkMatter,foundItems:"Items",depletion:"Depletion",info:{header:"Info",topFinds:"Top Finds",possibleFinds:"List of Possible Finds"},subHeaders:{amount:"Amount",sizes:"Sizes",resources:"Resource Units",count:"Count",sizesByResource:"Sizes by Resource"}},expeditionEvents:{[A.r.nothing]:"No Event",[A.r.resources]:"Resources",[A.r.fleet]:"Ships",[A.r.delay]:"Delay",[A.r.early]:"Early",[A.r.darkMatter]:re.darkMatter,[A.r.pirates]:ne.pirates,[A.r.aliens]:ne.aliens,[A.r.combat]:"Combat",[A.r.item]:"Item",[A.r.trader]:"Trader",[A.r.lostFleet]:"Lost Fleet"},expeditionEventSizes:{[C.Mm.small]:"Common Find",[C.Mm.medium]:"Large Find",[C.Mm.large]:"Huge Find","fled-death-star":"Enemies fled"},depletionLevels:{[P.q.none]:"Very Low",[P.q.low]:"Low",[P.q.medium]:"Medium",[P.q.high]:"High",unknown:"Unknown"},expeditions:"Expeditions",finds:"Finds",shipsFound:"Ships found",depletion:"System depletion",topFinds:{title:e=>`Top finds (${e})`,shipUnits:"Ship units",shipAmount:"Ship amount",size:"Size",amount:"Amount",date:"Date"},possibleFinds:{info:{playerClass:"Player class",economySpeed:"Economy speed",resourceFindBonus:"Bonus resource finds",shipFindBonus:"Bonus ship finds",darkMatterFindBonus:"Bonus Dark Matter finds",discovererBonus:"Discoverer class bonus"},maximumFinds:"Maximum Finds",findsDarkMatter:"Ranges of DM finds",listOfPossibleFinds:"List of possible finds (resources, ship units)",findSizes:e=>`Possible find amounts (${e})`,shipUnits:"Ship units",shipMaxUnitsConverted:"Max. Ship units"}},de={header:"Combats",tabHeaders:{overview:"Overview",loot:"Loot",lostShips:"Lost Ships",subHeaders:{againstPlayers:"Against Players",onExpeditions:"On Expeditions",amount:"Amount",resources:"Resource Units"}},combats:"Combats",shipsLost:"Ships Lost",combatResults:{[N.a.won]:"Wins",[N.a.lost]:"Losses",[N.a.draw]:"Draws"}},ce={header:"Donate",subHeader:"Donate to support the development of the OGame Tracker",crypto:{header:"Donate crypto"},kofi:{header:"Donate with PayPal or debit/credit card",buttonText:"Donate on Ko-Fi",message:"You don't need to create an account on Ko-Fi to donate. All donations are forwarded directly to the developer."}},ue={header:"Debris Fields",addDebrisFieldManually:{title:"Add debris field manually",buttonText:"Add"},position:"Position"},me={header:"Resource Balance","combat-report":"from combats","debris-field-report":"from debris fields",expedition:"from expeditions"},ge={header:"Empire",planet:"Planet",overview:{header:"Overview",supplyBuildings:"Supply Buildings",facilityBuildings:"Facilities"},production:{header:"Production",subHeaders:{resourceProduction:"Resource Production",mineOverview:"Mine Overview"},averagePerHour:"⌀ per hour",totalPerHour:"total per hour",totalPerDay:"total per day",totalPerWeek:"total per week",activeProductionSettings:"Active Production Settings",messageProduction100:"The shown values refer to a production factor of 100% and do not take lack of energy into account.",mines:{crawlersAvailable:"available",crawlersToReachLimit:e=>`${e} crawlers for maximum bonus`},items:"Active items",breakdown:{basicIncome:"Basic Income",mineProduction:"Mine Production",consumption:"Consumption",lifeformBuildings:"Lifeform Buildings",crawlers:"Crawlers",items:"Items",geologist:"Geologist",commandStaff:"Command Staff",playerClass:"Player Class",allianceClass:"Alliance Class",lifeformTechnologies:"Lifeform Technologies"},settings:{reset:"Reset",header:"Production settings",applyAndClose:"Apply and close production settings"}},amortization:{header:"Amortization",table:{cost:"Cost",levels:"Levels",productionPlus:"Production Plus",amortizationTime:"Amortization Time",groupSelectedItems:"Group selected items",showOriginalItems:"Show all items individually",levelsOnPlanets:(e,a)=>`${e} ${1==e?"level":"levels"} on ${a} ${1==a?"planet":"planets"}`},settings:{header:"Settings",applyAndClose:"Apply settings and close",includeSettings:{header:"Include in calculation",mines:"Mines",expeditions:"Expeditions",expeditionsRequirement:"Note: Requires at least one of lifeform expedition bonus researches, lifeform research bonus buildings, and astrophysics to be selected",lifeformProductionBonusBuildings:"Lifeform production bonus buildings",lifeformTechnologyBoostBuildings:"Lifeform research bonus buildings",lifeformProductionBonusTechnologies:"Lifeform production bonus researches",lifeformExpeditionBonusTechnologies:"Lifeform expedition bonus researches",astrophysicsAndColony:"Astrophysics and new colonies",astrophysicsPerformanceNote:"Note: Computationally intensive, will greatly affect performance"},playerSettings:{header:"General Settings",optimizeForResources:"Optimize for selected resources",officers:"Officers",playerClass:"Player Class",allianceClass:"Alliance Class",currentLevelOf:e=>`Current Level of ${e}`,lifeformLevels:"Lifeform Levels",unusedRaidColonySlots:"Currently unused raid colony slots"},astrophysicsSettings:{header:e=>`${e} Settings`,newColony:"new Colony"},planetSettings:{header:"Planet Settings",global:{deselectItems:"Deselect all items",ignoreInactiveLifeformTechnologySlots:"Ignore inactive lifeform technology slots for all planets",deselectAllPlanets:"Deselect all planets"},includeInResult:"Include in calculation",position:"Position",maxTemperature:"Max. Temperature",activeItems:"Active Items",crawlers:{title:"Crawlers",percentage:"% Production",fixCount:"Fixed Count",maxCount:"Max. Count"},mines:"Current Mine Levels",lifeform:"Lifeform",lifeformSettings:"Lifeform settings",relevantLifeformBuildings:"Relevant Lifeform Buildings",lifeformTechnologies:"Lifeform Technologies",ignoreEmptySlots:"Ignore inactive slots"},expeditionSettings:{header:"Expedition Settings",averageWavesPerDay:"⌀ Waves per day",items:"Slot items",averageExpeditionsPerDay:"⌀ Expeditions per day",shipUnitFactors:"Ship resource unit factors",topPlayerScore:"Top player score"}},info:{generatingItems:"Calculating next best items",slowCalculation:"The amortization calculation became pretty slow now that it includes lifeform buildings and technologies. This will hopefully be improved in the future.",ctrlClick:"Ctrl + Click on a check to (de)select all items up to the selected one."},saveLoad:{saveButton:"Save calculated amortization results",loadButton:e=>`Load save (${e})`,loadedSave:(e,a)=>`Viewing saved results (${e}) - ${a} hidden rows`,abandonedPlanet:"Abandoned Planet"},generateItems:e=>`${e} entries`},lifeforms:{header:"Lifeforms",subHeaders:{overview:"Overview",progress:"Progress",discoveryMissions:"Missions",discoveryResults:"Results",experience:"Experience",researchBonuses:"Global Research Bonuses",planetBonuses:"Effective Planet Bonuses"},planet:"Planet",lifeform:"Lifeform",buildings:"Lifeform Buildings",technologies:"Lifeform Technologies",tier:"Tier",level:"Level",totalLifeformExperience:"Experience (total)",discoveryDateUnknown:"Unknown",notDiscoveredYet:"Not discovered yet",discoveryMissions:"Discovery Missions",eventTypes:{[L.y.nothing]:"No finding",[L.y.lostShip]:"Lost exploration ship",[L.y.newLifeformFound]:"New lifeform",[L.y.knownLifeformFound]:"Lifeform experience",[L.y.artifacts]:"Artifacts found"},artifactFindingSizes:{[O.k.small]:"Common Find",[O.k.medium]:"Large Find",[O.k.large]:"Huge Find",[O.k.storageFull]:"Storage Full"},lifeformFound:"Lifeform found",alwaysAvailable:"Always available",artifacts:"Artifacts",experiencePoints:"Experience Points",discoveredOn:"Lifeform discovered on",numberOfLifeformDiscoveries:"Number of discoveries",globalResearchBonus:"Global research bonus",researchBonuses:{breakdown:{slot:"Slot",research:"Research",bonus:"Bonus",lifeformBuildingsBoost:"Lifeform Building Boost",lifeformLevelBoost:(e,a)=>`Lifeform Level Boost (${e}: ${a})`,bugBoost:"Boost caused by bugs"},production:{header:"Resource Production"},expeditionFinds:{header:"Expedition Finds",resources:"Resources",ships:"Ships",fleetLoss:"Fleet losses"},expeditionSpeed:{header:"Expedition Arrival Speed",bonus:"Speed Bonus"},ships:{header:"Ships",armor:"Armor",shield:"Shield",damage:"Damage",cargo:"Cargo",speed:"Speed"},defenses:{header:"Defenses"},fuelConsumption:{header:"Fuel Consumption"},fuelReturn:{header:"Fuel Return on Recall",bonus:"Fuel Return"},buildingCostTime:{header:"Building Cost & Time",cost:"Cost",time:"Time"},researchCostTime:{header:"Research Cost & Time",researches:"Researches",lifeformResearches:"Lifeform Researches"},crawlers:{header:"Crawlers",productionBonus:"Resource Production",energyConsumption:"Energy Consumption"},denCapacity:{header:"Den Capacity"},phalanxRange:{header:"Phalanx Range"},discoveryMissions:{header:"Discovery Mission Speed"},playerClasses:{header:"Player Classes",collector:{productionBonus:"Increased mine production",energyProductionBonus:"Increased energy production",transporterSpeedBonus:"Transporter speed bonus",transporterCargoBonus:"Transporter cargo bonus",crawlerProductionBonus:"Crawler production bonus",geologistCrawlerAmountBonus:"More usable crawlers with Geologist"},discoverer:{researchDuration:"Research time",increasedExpeditionFinds:"Increased gain on expeditions",largerPlanets:"Larger planets on colonization",additionalExpeditionSlots:"Additional expedition slots",reducedExpeditionCombatChance:"Chance of expedition combats",phalanxRange:"Increased phalanx range"},general:{combatShipSpeed:"Combat ship speed bonus",recyclerSpeed:"recycler speed bonus",fuelConsumption:"Fuel consumption for all ships",increasedCargoRecyclersPathfinders:"Increased cargo for Recyclers/Pathfinders",additionalCombatResearchLevels:"Additional combat research levels",additionalFleetSlots:"Additional fleet slots",additionalMoonFields:"Additional moon fields"},classBonus:"Class Bonus",bonus:"Bonus",baseValue:"Base Value",valueWithBonuses:"Value with Bonuses"}},planetBonuses:{resourceProduction:{header:"Resource Production"},lifeformResearchCostTime:{header:"Lifeform Research Cost & Time"},wreckfield:{header:"Wreckfield"}},topFinds:{topFinds:"Best Finds",worstFinds:"Worst Finds",size:"Size",amount:"Amount",date:"Date",artifacts:"Artifacts",experience:"XP"}}},pe={title:"Select account to view in a new tab"},fe={faqHelp:{header:"Help",faq:{header:"F.A.Q.",fleetLostOnExpedition:{header:"Why are the ships not tracked that I lost on expeditions?",text:"Tracking lost ships on expeditions requires permanent fleet tracking which is not feasible."},syncBetweenDevices:{header:"Why is there no synchronization of my data between multiple devices?",text:"The tracker saves a lot more data than can be synchronized using your user account (Google, Microsoft, etc). A synchronization with an external server might be possible in the future."},productionInResourceBalance:{header:"Why does the resource balance not include my resource production?",text:"Your resource production depends on various factors, and their changes would have to be tracked permanently. While this is possible, an implementation of this feature would be much more complex than it would be of use for its users."},whatAreAverages:{header:"What does the '⌀ per day' mean?",text:"This is the average over all days with at least one tracked event."}},tips:{header:"Tips",rightClickDefaultRoute:"You can right-click a main tab on the left side or any of its sub-menu items to set this menu as standard for the selected route.",numbersKeyboardNavigation:"You can open the pages of the tabs with a digit by pressing the respective digit key on your keyboard.",amortizationTable:{part1:"Want to know what to build or research next to improve your resource production the most efficient way? Try the ",name:"interactive amortization calculator",part2:"."},inlineSettings:"You can change related settings immediately by pressing the small gear icon on the right side.",switchAccountHtml:'You can open the OGame Tracker interface for another tracked account by clicking the <span class="mdi mdi-account-multiple"></span> icon and selecting the account.'},messageDiscord:{part1:"Need help, found a bug, or have a feature request? Join the ",discordServer:"Discord server",part2:" and write a message in the related channel."}},info:{header:"Info",table:{currentAccount:{header:"Information about the selected account",numberOfTrackedExpeditions:"Number of tracked expeditions",numberOfTrackedCombatReports:"Number of tracked combat reports",numberOfTrackedDebrisFieldReports:"Number of tracked harvest reports",numberOfTrackedLifeformDiscoveries:"Number of tracked discovery missiongs",lastUpdateServerSettings:"Latest server settings update",numberOfUniverseHistoryEntries:"Number of entries in universe history"},global:{header:"Information about all data in the OGame Tracker",numberOfTrackedAccounts:"Number of tracked accounts",estimatedSize:"Size of all saved data on disk"}}}},he={header:"Universe History",settings:{messages:{notEnabledHtml:"\n            <b>Universe highscore tracking is not enabled.</b><br/>\n            Enabling this feature will track highscore changes for players and alliances.\n            ",historyTrackingNotEnabledHtml:'\n            <b>Universe history tracking is not enabled.</b><br/>\n            Enabling this feature will additionally track all changes for players and alliances.<br/>\n            This includes player and alliance name and tag changes, alliance membership changes, \n            player status changes, and changes regarding planets and moons \n            including names, coordinates, and abandoned/destroyed planets and moons.<br />\n            <i>This can generate a lot of data!\n            You can deactivate this feature <a href="#/settings/universe-history">in the settings menu</a> \n            again.</i>\n            ',trackingTimesHtml:"\n            At least once every day the highscores and universe data (if enabled) will be updated.<br/>\n            You can set the update times below.\n            If an update was missed then it will update as soon as possible afterwards.\n            "},enableHighscoreTrackingOnly:"Enable universe highscore tracking",enableHistoryTracking:"Enable universe history tracking"},tabs:{players:"Players",alliances:"Alliances",subtabs:{highscore:"Highscore",history:"History"}},playerSelection:{header:"Player selection",search:"search for player"},allianceSelection:{header:"Alliance selection",search:"search for alliance"},highscoreTabs:{total:"Total",economy:"Economy",research:"Research",military:"Military",militaryBuilt:"Military built",militaryDestroyed:"Military destroyed",militaryLost:"Military lost",honor:"Honor",numberOfShips:"Number of ships",lifeform:"Lifeform",lifeformDiscoveries:"Lifeform discoveries",lifeformEconomy:"Lifeform economy",lifeformTechnology:"Lifeform technology"},historyTabs:{status:"Status",nicknames:"Nicknames",alliances:"Alliances",planetAndMoons:"Planets & Moons",tags:"Tags",names:"Names",members:"Members"},noAlliance:"no alliance",today:"today",name:"Name",tag:"Tag",members:"Members",alliance:"Alliance",from:"From",until:"Until",status:{active:"Active",vacation:"Vacation Mode",inactive:"Inactive (>= 7 days)",inactiveLong:"Inactive (>= 28 days)",banned:"Banned",outlaw:"Outlaw",deleted:"Deleted",admin:"Admin"},loadingTakingLong:"Loading the data is taking longer than expected. The database is probably updating right now, so please be patient or try again later."},be={combatTracking:{title:e=>"1"==e?`${e} new combat report tracked`:`${e} new combat reports tracked`,message:e=>"1"==e?`${e} new combat report has been tracked.`:`${e} new combat reports have been tracked.`},debrisFieldReportTracking:{title:e=>"1"==e?`${e} new debris field report tracked`:`${e} new debris field reports tracked`,message:e=>"1"==e?`${e} new debris field report has been tracked.`:`${e} new debris field reports have been tracked.`},expeditionTracking:{fleetLost:{title:e=>`${e} lost fleet`,message:e=>"1"==e?`${e} fleet did not return from its expedition.`:`${e} fleets did not return from their expeditions.`},result:{title:e=>"1"==e?`${e} new expedition tracked`:`${e} new expeditions tracked`,summary:"Summary of findings",events:"Expedition events"}},lifeformDiscoveryTracking:{title:e=>"1"==e?`${e} new lifeform discovery mission tracked`:`${e} new lifeform discovery missions tracked`,message:e=>"1"==e?`${e} new lifeform discovery mission has been tracked.`:`${e} new lifeform discovery missions have been tracked.`},messageTrackingError:{title:e=>"1"==e?`Failed to process ${e} message`:`Failed to process ${e} messages`,message:e=>"1"==e?`${e} message caused an error and has not been tracked. The causing message has been marked in red. Please contact the developer.`:`${e} messages caused an error and have not been tracked. The causing messages have been marked in red. Please contact the developer.`}},ye={signatureGenerator:{header:"Signature Generator",averagePerHour:"⌀/hour",totalPerHour:"per hour",totalPerDay:"per day",totalPerWeek:"per week",production:"Production",expeditions:"Expeditions",lifeformDiscoveries:"LF Missions",combats:"Combats",debrisFieldReports:"Harvested DFs"},scrapyardMerchant:{header:"Scrapyard Merchant",percentage:"% at the scrapyard merchant",count:"Count"}},ve={header:"Excel Export",chooseBelowMessage:"Choose below which data you want to include in the export:",groups:{expeditions:{header:"Expeditions",rawData:"Raw data (every single tracked expedition)",dailyOverview:"Overview of results per day",dailyDepletion:"Overview of system depletion per day",dailyResources:"Resource findings per day",dailyResourceSizes:"Sizes of resource findings per day",dailyShips:"Ship findings per day",dailyShipSizes:"Sizes of ship findings per day",dailyDarkMatter:"Dark matter findings per day",dailyDarkMatterSizes:"Sizes of dark matter findings per day"},combats:{header:"Combats",rawData:"Raw data (every single tracked combat result)",dailyResults:"Combat results per day",dailyLoot:"Loot balance per day",dailyLostShips:"Lost ships per day"},debrisFields:{header:"Debris Fields",rawData:"Raw data (every single tracked harvest report)",dailyResources:"Harvested resources per day"},lifeformDiscoveries:{header:"Discovery Missions",rawData:"Raw data (every single tracked discovery mission)",dailyExperience:"Gained experience per day"}},generateButton:"Generate Excel export",expeditions:{prefix:"EX",sheets:{rawData:"Raw Data",dailyDepletion:"Daily System Depletion",dailyResults:"Daily Results",dailyResources:"Daily Resources",dailyResourcesSize:"Daily Resources (Size)",dailyShips:"Daily Ships",dailyShipsSize:"Daily Ships (Size)",dailyDarkMatter:"Daily Dark Matter",dailyDarkMatterSize:"Daily Dark Matter (Size)"},eventType:"Type",eventSize:"Size",item:"Item"},combats:{prefix:"CR",sheets:{rawData:"Raw Data",dailyResults:"Daily Results",dailyLoot:"Daily Loot",dailyLostShips:"Daily Lost Ships"},result:"Combat Result",coordinates:"Coordinates",galaxy:"Galaxy",system:"System",position:"Position",targetType:"Target Type",combatType:"Combat Type",expeditionCombatOpponent:"Expedition Combat Opponent",loot:"Loot",lostShips:"Lost Ships",debrisField:"Debris Field",moon:"Moon",planet:"Planet",expeditionCombat:"Expedition Combat",playerCombat:"Player Combat",pirates:"Pirates",aliens:"Aliens",againstPlayers:"Against Players",onExpeditions:"On Expeditions"},debrisFields:{prefix:"DF",sheets:{rawData:"Raw Data",dailyResources:"Daily Resources"}},lifeformDiscoveries:{prefix:"LF",sheets:{rawData:"Raw Data",dailyExperience:"Daily Experience"},result:"Finding",experience:"Experience",lifeform:"Lifeform",artifacts:"Artifacts",artifactsSize:"Size"}},_e={collector:"Collector",discoverer:"Discoverer",general:"General",none:"none"},we={ogame:{buildings:Q,lifeforms:X,lifeformBuildings:ee,lifeformTechnologies:ae,premium:re,resources:oe,research:J,ships:Z,defenses:Y},extension:{common:ie,settings:te,resources:oe,expeditions:le,combats:de,donate:ce,debrisFields:ue,resourceBalance:me,empire:ge,switchAccounts:pe,about:fe,universeHistory:he,notifications:be,tools:ye,excelExport:ve,playerClasses:_e}},Se={[l.g.lightFighter]:"Caça Ligeiro",[l.g.heavyFighter]:"Caça Pesado",[l.g.cruiser]:"Cruzador",[l.g.battleship]:"Nave de Batalha",[l.g.battlecruiser]:"Interceptor",[l.g.bomber]:"Bombardeiro",[l.g.destroyer]:"Destruidor",[l.g.deathStar]:"Estrela da Morte",[l.g.reaper]:"Ceifeira",[l.g.pathfinder]:"Exploradora",[l.g.smallCargo]:"Cargueiro Pequeno",[l.g.largeCargo]:"Cargueiro Grande",[l.g.colonyShip]:"Nave de Colonização",[l.g.recycler]:"Reciclador",[l.g.espionageProbe]:"Sonda de Espionagem",[l.g.solarSatellite]:"Satélite Solar",[l.g.crawler]:"Rastejador"},ke={[c.r.rocketLauncher]:"Lançador de Misséis",[c.r.lightLaser]:"Laser Ligeiro",[c.r.heavyLaser]:"Laser Pesado",[c.r.gaussCannon]:"Canhão de Gauss",[c.r.ionCannon]:"Canhão de Iões",[c.r.plasmaTurret]:"Canhão de Plasma",[c.r.smallShieldDome]:"Pequeno Escudo Planetário",[c.r.largeShieldDome]:"Grande Escudo Planetário"},xe={[m.A.metalMine]:"Mina de Metal",[m.A.crystalMine]:"Mina de Cristal",[m.A.deuteriumSynthesizer]:"Sintetizador de Deutério",[m.A.metalStorage]:"Armazém de Metal",[m.A.crystalStorage]:"Armazém de Cristal",[m.A.deuteriumTank]:"Tanque de Deutério",[m.A.solarPlant]:"Planta de Energia Solar",[m.A.fusionReactor]:"Planta de Fusão",[m.A.roboticsFactory]:"Fábrica de Robots",[m.A.shipyard]:"Hangar",[m.A.researchLab]:"Laboratório de Pesquisas",[m.A.allianceDepot]:"Depósito da Aliança",[m.A.missileSilo]:"Silo de Mísseis",[m.A.naniteFactory]:"Fábrica de Nanites",[m.A.terraformer]:"Terra-Formador",[m.A.spaceDock]:"Estaleiro Espacial",[m.A.lunarBase]:"Base Lunar",[m.A.sensorPhalanx]:"Sensor Phalanx",[m.A.jumpGate]:"Portal de Salto Quântico"},Te={[p.s.energyTechnology]:"Tecnologia de Energia",[p.s.laserTechnology]:"Tecnologia Laser",[p.s.ionTechnology]:"Tecnologia de Iões",[p.s.hyperspaceTechnology]:"Tecnologia de Hiperespaço",[p.s.plasmaTechnology]:"Tecnologia de Plasma",[p.s.espionageTechnology]:"Tecnologia de Espionagem",[p.s.computerTechnology]:"Tecnologia de Computadores",[p.s.astrophysics]:"Astrofísica",[p.s.intergalacticResearchNetwork]:"Rede Intergaláctica de Pesquisas",[p.s.gravitonTechnology]:"Tecnologia de Gravitação",[p.s.combustionDrive]:"Motor de Combustão",[p.s.impulseDrive]:"Motor de Impulsão",[p.s.hyperspaceDrive]:"Motor Propulsor de Hiperespaço",[p.s.weaponsTechnology]:"Tecnologia de Armas",[p.s.shieldingTechnology]:"Tecnologia de Escudo",[p.s.armorTechnology]:"Tecnologia de Blindagem"},Ee={[h.e5.none]:"Nenhuma forma de vida",[h.e5.humans]:"Humanos",[h.e5.rocktal]:"Rock'tal",[h.e5.mechas]:"Mechas",[h.e5.kaelesh]:"Kaelesh"},Be={[y.EO.residentialSector]:"Setor Residencial",[y.EO.biosphereFarm]:"Quinta de Biosfera",[y.EO.researchCentre]:"Centro de Pesquisa",[y.EO.academyOfSciences]:"Academia de Ciências",[y.EO.neuroCalibrationCentre]:"Centro de Neurocalibragem",[y.EO.highEnergySmelting]:"Fundição de Alta Energia",[y.EO.foodSilo]:"Silo de Comida",[y.EO.fusionPoweredProduction]:"Produção com Recurso a Fusão",[y.EO.skyscraper]:"Arranha-céus",[y.EO.biotechLab]:"Laboratório de Biotecnologia",[y.EO.metropolis]:"Metrópole",[y.EO.planetaryShield]:"Escudo Planetário",[y.EO.meditationEnclave]:"Enclave de Meditação",[y.EO.crystalFarm]:"Quinta de Cristal",[y.EO.runeTechnologium]:"Tecnologium Rúnico",[y.EO.runeForge]:"Forja Rúnica",[y.EO.oriktorium]:"Oriktorium",[y.EO.magmaForge]:"Forja de Magma",[y.EO.disruptionChamber]:"Câmara de Disrupção",[y.EO.megalith]:"Megálito",[y.EO.crystalRefinery]:"Refinaria de Cristal",[y.EO.deuteriumSynthesiser]:"Sintetizador de Deutério",[y.EO.mineralResearchCentre]:"Centro de Pesquisa de Minerais",[y.EO.advancedRecyclingPlant]:"Centro de Reciclagem Avançada",[y.EO.assemblyLine]:"Linha de Montagem",[y.EO.fusionCellFactory]:"Fábrica de Células de Fusão",[y.EO.roboticsResearchCentre]:"Centro de Pesquisa Robótica",[y.EO.updateNetwork]:"Rede de Atualização",[y.EO.quantumComputerCentre]:"Centro de Computação Quântica",[y.EO.automatisedAssemblyCentre]:"Centro de Montagem Automatizado",[y.EO.highPerformanceTransformer]:"Transformador de Alto Desempenho",[y.EO.microchipAssemblyLine]:"Linha de Montagem de Microchips",[y.EO.productionAssemblyHall]:"Sala de Montagem da Linha de Produção",[y.EO.highPerformanceSynthesiser]:"Sintetizador de Alto Desempenho",[y.EO.chipMassProduction]:"Produção Massiva de Chips",[y.EO.nanoRepairBots]:"Nanorobôs de Reparação",[y.EO.sanctuary]:"Santuário",[y.EO.antimatterCondenser]:"Condensador de Antimatéria",[y.EO.vortexChamber]:"Câmara do Vórtice",[y.EO.hallsOfRealisation]:"Salões do Conhecimento",[y.EO.forumOfTranscendence]:"Fórum da Transcendência",[y.EO.antimatterConvector]:"Convetor de Antimatéria",[y.EO.cloningLaboratory]:"Laboratório de Clonagem",[y.EO.chrysalisAccelerator]:"Acelerador de Crisálidas",[y.EO.bioModifier]:"Biomodificador",[y.EO.psionicModulator]:"Modulador Psiónico",[y.EO.shipManufacturingHall]:"Sala de Produção de Naves",[y.EO.supraRefractor]:"Super-refrator"},Ce={[_.Nw.intergalacticEnvoys]:"Emissários Intergalácticos",[_.Nw.highPerformanceExtractors]:"Extratores de Alto Desempenho",[_.Nw.fusionDrives]:"Motores de Fusão",[_.Nw.stealthFieldGenerator]:"Geradores de Campo Furtivo",[_.Nw.orbitalDen]:"Esconderijo Orbital",[_.Nw.researchAI]:"IA de Pesquisa",[_.Nw.highPerformanceTerraformer]:"Terra-Formador de Alto Desempenho",[_.Nw.enhancedProductionTechnologies]:"Tecnologias de Produção Melhoradas",[_.Nw.lightFighterMkII]:"Caça Ligeiro V2",[_.Nw.cruiserMkII]:"Cruzador V2",[_.Nw.improvedLabTechnology]:"Tecnologias de Laboratório Melhoradas",[_.Nw.plasmaTerraformer]:"Terra-Formador a Plasma",[_.Nw.lowTemperatureDrives]:"Motores de Baixa Temperatura",[_.Nw.bomberMkII]:"Bombardeiro V2",[_.Nw.destroyerMkII]:"Destruidor V2",[_.Nw.battlecruiserMkII]:"Interceptor V2",[_.Nw.robotAssistants]:"Assistentes Robóticos",[_.Nw.supercomputer]:"Supercomputador",[_.Nw.volcanicBatteries]:"Baterias Vulcânicas",[_.Nw.acousticScanning]:"Varrimento Acústico",[_.Nw.highEnergyPumpSystems]:"Sistemas de Bomba de Alto Desempenho",[_.Nw.cargoHoldExpansion_CivilianShips]:"Expansão da Baía de Carga (Naves Civis)",[_.Nw.magmaPoweredProduction]:"Produção com Recurso a Magma",[_.Nw.geothermalPowerPlants]:"Centrais de Energia Geotérmica",[_.Nw.depthSounding]:"Sonda de Profundidade",[_.Nw.ionCrystalEnhancement_heavyFighter]:"Melhoramento de Cristal de Iões (Caça Pesado)",[_.Nw.improvedStellarator]:"Gerador Estelar Melhorado",[_.Nw.hardenedDiamondDrillHeads]:"Cabeças de Broca de Diamante Endurecido",[_.Nw.seismicMiningTechnology]:"Tecnologia de Extração Sísmica",[_.Nw.magmaPoweredPumpSystems]:"Sistemas de Bomba com Recurso a Magma",[_.Nw.ionCrystalModules]:"Módulos de Cristais de Iões",[_.Nw.optimisedSiloConstructionMethod]:"Método Otimizado de Construção de Silos",[_.Nw.diamondEnergyTransmitter]:"Transmissor de Energia de Diamante",[_.Nw.obsidianShieldReinforcement]:"Escudo Reforçado com Obsidiana",[_.Nw.runeShields]:"Escudos Rúnicos",[_.Nw.rocktalCollectorEnhancement]:"Melhoramento de Colecionador dos Rock’tal",[_.Nw.catalyserTechnology]:"Tecnologia de Catalisador",[_.Nw.plasmaDrive]:"Motor de Plasma",[_.Nw.efficiencyModule]:"Módulo de Eficiência",[_.Nw.depotAI]:"IA de Depósito",[_.Nw.generalOverhaul_lightFighter]:"Remodelação Geral (Caça Ligeiro)",[_.Nw.automatedTransportLines]:"Linhas de Transporte Automatizadas",[_.Nw.improvedDroneAI]:"IA de Drones Melhorada",[_.Nw.experimentalRecyclingTechnology]:"Tecnologia de Reciclagem Experimental",[_.Nw.generalOverhaul_cruiser]:"Remodelação Geral (Cruzador)",[_.Nw.slingshotAutopilot]:"Piloto Automático Gravítico",[_.Nw.highTemperatureSuperconductors]:"Supercondutores de Alta Temperatura",[_.Nw.generalOverhaul_battleship]:"Remodelação Geral (Nave de Batalha)",[_.Nw.artificialSwarmIntelligence]:"Inteligência Artificial de Enxame",[_.Nw.generalOverhaul_battlecruiser]:"Remodelação Geral (Interceptor)",[_.Nw.generalOverhaul_bomber]:"Remodelação Geral (Bombardeiro)",[_.Nw.generalOverhaul_destroyer]:"Remodelação Geral (Destruidor)",[_.Nw.experimentalWeaponsTechnology]:"Tecnologia de Armas Experimental",[_.Nw.mechanGeneralEnhancement]:"Melhoramento de General dos Mechas",[_.Nw.heatRecovery]:"Recuperação de Calor",[_.Nw.sulphideProcess]:"Processamento de Sulfuretos",[_.Nw.psionicNetwork]:"Rede Psiónica",[_.Nw.telekineticTractorBeam]:"Feixe de Captura Telecinético",[_.Nw.enhancedSensorTechnology]:"Tecnologias de Sensores Melhoradas",[_.Nw.neuromodalCompressor]:"Compressor Neuromodular",[_.Nw.neuroInterface]:"Neurointerface",[_.Nw.interplanetaryAnalysisNetwork]:"Rede de Análise Interplanetária",[_.Nw.overclocking_heavyFighter]:"Overclocking (Caça Pesado)",[_.Nw.telekineticDrive]:"Motor Telecinético",[_.Nw.sixthSense]:"Sexto Sentido",[_.Nw.psychoharmoniser]:"Harmonizador Psíquico",[_.Nw.efficientSwarmIntelligence]:"Inteligência de Enxame Eficiente",[_.Nw.overclocking_largeCargo]:"Overclocking (Cargueiro Grande)",[_.Nw.gravitationSensors]:"Sensores de Gravitação",[_.Nw.overclocking_battleship]:"Overclocking (Nave de Batalha)",[_.Nw.psionicShieldMatrix]:"Matriz de Escudo Psiónico",[_.Nw.kaeleshDiscovererEnhancement]:"Melhoramento de Descobridor dos Kaelesh"},Ae={darkMatter:"Matéria Negra"},De={tabs:{dateRanges:"Intervalo de datas",colors:"Cores",common:"Comum",importExport:"Importar/Exportar",expeditions:"Expedições",combats:"Combates",debrisFields:"Campos de Destroços",resourceBalance:"Resumo de Recursos",universeHistory:"Histórico do Universo",dangerZone:"Zona de Perigo",accessbility:"Acessibilidade",linkAccounts:"Linkar Contas",migrateOldData:"Migrar dados antigos"},dateRanges:{defaultNames:{today:"Hoje",yesterday:"Ontem",currentWeek:"Esta semana",lastWeek:"Semana passada",currentMonth:"Este mês",newRange:"novo intervalo"},since:e=>`Desde ${e}`,firstDayTemplate:"<primeiro dia>",headers:{label:"Label",type:"Tipo",rangeStart:"Início do intervalo",rangeContains:"Intervalo contem"},day:"dia",days:"dias",daysAgo:"dias atrás",week:"semana",weeks:"semanas",weeksAgo:"semanas atrás",month:"mês",months:"meses",monthsAgo:"meses atrás",year:"ano",years:"anos",yearsAgo:"anos atrás"},colors:{combatResults:"Resultados do combate",expeditionEvents:"Eventos de Expedição",expeditionEventSizes:"Tamanhos dos eventos de Expedição",expeditionDepletionLevels:"Desgaste do Sistema",lifeformDiscoveries:"Descobertas de Formas de Vida",lifeforms:"Formas de Vida",resources:"Recursos",ships:"Naves"},common:{conversionRates:{title:"Taxas de conversão",msuLong:"Converter para Metal",dsuLong:"Converter para Deutério"},extensionLanguage:"Idioma (dentro do OGame Tracker)",extensionLanguageFallbackHint:"Textos serão mostrados em Inglês se não existir tradução para o idioma selecionado.",serverSettings:{title:"Dados do Servidor",lastUpdate:"Última Actualização",forceUpdate:"Actualizar dados do servidor"}},expeditions:{resourceUnitFactorsOfShipFoundOnExpeditions:"Factores de unidades de recursos das naves encontradas em expedições"},combats:{resourceUnitFactorsOfLostShips:"Factor de unidades de recurso das naves perdidas em combate",ignoreEspionageCombats:{title:"Ignorar combates de espionagem",label:"Ignorar combates de espionagem para a monitorização dos combates"}},resourceBalance:{detailedResourceBalance:{header:"Resumo detalhado dos Recursos",checkboxLabel:"Mostrar resumo detalhado dos recursos"},includeShipsFoundOnExpeditions:{header:"Naves encontradas em expedições",checkboxLabel:"Incluir os recursos das naves encontradas em expedições no Resumo dos Recursos"},includeShipsLostInCombats:{header:"Naves destruidas em combates",checkboxLabel:"Incluir os recursos das naves perdidas em combate no Resumo dos Recursos"},includeLostLootResources:{header:"Recursos perdidos em combates",checkboxLabel:"Incluir os recursos perdidos em combate no Resumo dos Recursos"}},showConvertedUnitsInTables:{title:"MSU/DSU em tabelas",label:"Mostrar valores MSU/DSU convertidos nas tabelas",infoAmortization:"Tempo de amortização, ainda assim, será calculado cusando o custo e produção em MSU/DSU"},reset:"Restaurar definições",setDefaultRoute:"Marcar como default",setDefaultSubRoute:"Marcar como default para esta área",dangerZone:{doYouWantToContinue:"TENS A CERTEZA QUE QUERES CONTINUAR?",deleteExpeditions:{button:e=>`Apagar todas as expedições monitorizadas na conta actualmente selecionada (${e})`,confirmationText:(e,a)=>`Se confirmares, todas as ${a} expedições monitorizadas serão apagadas da conta actualmente selecionada (${e}).`},deleteCombats:{button:e=>`Apagar todos os combates monitorizados na conta actualmente selecionada (${e})`,confirmationText:(e,a)=>`Se confirmares, todos os ${a} combates monitorizados serão apagados da conta actualmente selecionda (${e}).`},deleteDebrisFieldReports:{button:e=>`Apagar todos os relatórios de reciclagem de campos de destroços monitorizados na conta actualmente selecionada (${e})`,confirmationText:(e,a)=>`Se confirmares, todos os ${a} relatórios de reciclagem de campos de destroços serão apagados da conta actualmente selecionada (${e}).`},deleteAccount:{button:e=>`Apagar toda a informação da conta actualmente selecionada (${e})`,confirmationText:e=>`Se confirmares, todos os dados da conta actualmente selecionada (${e}) serão apagados.\nIsto inclui o histórico do universo se não existir outra conta monitorizada nesse universo.`},deleteUniverseHistory:{button:e=>`Apagar o histórico do universo da conta actualmente selecionada (${e})`,confirmationText:e=>`Se confirmares, todo o histórico do universo da conta actualmente selecionada (${e}) será apagado.`},deleteEverything:{button:"Apagar todos os dados",confirmationText1:"Se confirmares, todos os dados serão apagados.\nIsto inclui to todos de todas as contas incluindo expedições, combates, reciclagem de campos de destroços, historico dos universos e mais.",confirmationText2:"Confirma novamente que é para apagar todos os dados."}},importExport:{export:{header:"Exportar",description:"Aqui podes exportar os teus dados. Irá incluir dados relevantes de todas as tuas contas monitorizadas e os seus servidores.",includeUniverseHistory:"incluir o historico do universo no export (isto vai aumentar significativamente o tamanho do ficheiro assim como do tempo de importação!)",button:"Iniciar exportação",wait:"Aguarda enquanto os dados são preparados para a exportação...",errors:{unexpectedError:"Ocorreu um erro inesperado durante a exportação dos teus dados."}},import:{header:"Importar",description:"Aqui poderás importar os teus dados a partir de um ficheiro. Seleciona o ficheiro.",button:"Iniciar importação",wait:"Aguarda enquanto os teus dados são importados...",errors:{invalidFormat:"O formato do ficheiro é inválido.",unexpectedError:"Ocorreu um erro inesperado durante a importação dos teus dados."}},importCallbacks:{importingSettings:"A importar as tuas definições",importingBasicData:"A importar a conta default e os dados do servidor",importingUniverseHistories:(e,a,r,t)=>{const s="A importar historico dos universos";return`${s} (servidor ${e+1}/${a}, entrada ${r+1}/${t})`},importingAccounts:(e,a,r,t,s)=>{const o="A importar contas",i=`${e+1}/${a}`;if("account"==r)return`${o} (${i})`;if("combat-reports"==r)return`${o} (${i}, combate ${t+1}/${s})`;if("expeditions"==r)return`${o} (${i}, expedição ${t+1}/${s})`;if("debris-fields"==r)return`${o} (${i}, campo de detritos ${t+1}/${s})`;if("lifeform-discoveries"==r)return`${o} (${i}, missão de descoberta de formas de vida ${t+1}/${s})`;if("empire.data"==r)return`${o} (${i}, dados básicos do império)`;if("empire.planets"==r)return`${o} (${i}, planeta ${t+1}/${s})`;if("empire.moons"==r)return`${o} (${i}, lua ${t+1}/${s})`;if("universe-specific-settings"==r)return`${o} (${i}, definições específicas do universo)`;throw new Error(`Invalid type '${r}'`)}}},accessibility:{showSimplifiedResults:{title:"Vista simplificada",label:"Vista simplificada, esconde as mensagens originais dos resultados das expedições e dos relatórios de reciclagem dos campos de destroços e mostra icons nas notificações."}},debrisFields:{separateExpeditionDebrisFields:{title:"Posição 16 separada",label:"Separar as reciclagem dos campos de destroços da posição 16 das outras (1-15)"}},linkAccounts:{header:e=>`Linkar contas com a conta actualmente selecionada (${e})`,descriptionHtml:e=>`Só deverás linkar contas se quiseres que o Ogame Tracker consider os dados das contas a link como dados da conta actualmente selecionada (${e}).<br/>Isto é comum acontecer quando existe uma fusão de universos e as contas passam a ser consideradas outras pelo OGame Tracker.<br/><br/>Examplo: <br/><ol>\n                    <li>O jogador "OGame Professional" está a jogar no servidor "EN Milkyway"</li>\n                    <li>O servidor "EN Milkyway" é tornado exodus durante a fusão</li>\n                    <li>O jogador "OGame Professional" faz merge da sua conta para o servidor "EN Cartwheel"</li>   \n                    <li>Depois do merge, o OGame Tracker não mostra quais quer dados do servidor original "EN Milkyway" para a nova conta que foi merged</li>\n                    <li>No OGame Tracker a conta antigo "OGame Professional" no servidor "EN Milkyway" é linkada para nova conta "OGame Professional" no servidor "EN Cartwheel"</li>\n                    <li>Os dados que foram enviados e guardados do antigo servidor "EN Milkyway" serão agora mostrados na nova conta no servidor "EN Cartwheel"</li>\n                </ol>\n            `,linkAccount:"Linkar outra conta:",linkedAccounts:"Contas linkadas:"}},Pe={[x._.metal]:"Metal",[x._.crystal]:"Cristal",[x._.deuterium]:"Deutério",energy:"Energia"},Ie=Pe,Ne={averagePerDay:"⌀ por dia",chart:"Gráfico",table:"Tabela",sum:"Soma",total:"total",resourceUnits:"Unidades de Recursos",dsu:"DSU",msu:"MSU",date:"Data",dateTime:"Data & Hora",madeWithLove1:"Feito com",madeWithLove2:"por Wonkydonky"},Fe={pirates:"Piratas",aliens:"Aliens"},ze={header:"Expedições",tabHeaders:{overview:"Resumo",foundResources:"Recursos",foundShips:"Naves",foundDarkMatter:Ae.darkMatter,foundItems:"Items",depletion:"Desgaste",info:{header:"Info",topFinds:"Melhores Descobertas",possibleFinds:"Lista de possíveis descobertas"},subHeaders:{amount:"Quantidade",sizes:"Tamanhos",resources:"Unidades de recurso",count:"Contagem",sizesByResource:"Tamanhos por recursos"}},expeditionEvents:{[A.r.nothing]:"Sem evento",[A.r.resources]:"Recursos",[A.r.fleet]:"Naves",[A.r.delay]:"Atraso",[A.r.early]:"Cedo",[A.r.darkMatter]:Ae.darkMatter,[A.r.pirates]:Fe.pirates,[A.r.aliens]:Fe.aliens,[A.r.combat]:"Combate",[A.r.item]:"Item",[A.r.trader]:"Mercador",[A.r.lostFleet]:"Frota Perdida"},expeditionEventSizes:{[C.Mm.small]:"Descoberta Comum",[C.Mm.medium]:"Descoberta Grande",[C.Mm.large]:"Descoberta Enorme","fled-death-star":"Inimigos fugiram"},depletionLevels:{[P.q.none]:"Muito baixo",[P.q.low]:"Baixo",[P.q.medium]:"Médio",[P.q.high]:"Alto",unknown:"Desconhecido"},expeditions:"Expedições",finds:"Descobertas",shipsFound:"Naves encontradas",depletion:"Desgate do sistema",topFinds:{title:e=>`Melhores descobertas (${e})`,shipUnits:"Unidades de naves",size:"Tamanho",amount:"Quantidade",date:"Data"},possibleFinds:{info:{playerClass:"Classe do Jogador",economySpeed:"Velocidade da Economia",resourceFindBonus:"Bónus de descobertas de recursos",shipFindBonus:"Bónus de decobertas de naves",darkMatterFindBonus:"Bónus de descobertas de Matéria Negra",discovererBonus:"Bónus de Classe de Descobridor"},maximumFinds:"Máximo de Descobertas",findsDarkMatter:"Limites das descobertas de MN",listOfPossibleFinds:"Lista de possíveis descobertas (recursos, naves)",findSizes:e=>`Possíveis quantidades de descobertas (${e})`,shipUnits:"Unidades de naves"}},Me={header:"Combates",tabHeaders:{overview:"Resumo",loot:"Pilhagem",lostShips:"Naves Perdidas",subHeaders:{againstPlayers:"Contra Jogadoress",onExpeditions:"Em Expedições",amount:"Quantidade",resources:"Unidades de Recursos"}},combats:"Combates",shipsLost:"Naves Perdidas",combatResults:{[N.a.won]:"Vitórias",[N.a.lost]:"Derrotas",[N.a.draw]:"Empates"}},Re={header:"Doação",subHeader:"Doar para ajudar o desenvolvimento do OGame Tracker",crypto:{header:"Doar criptomoedas"},kofi:{header:"Doar através do PayPal ou cartão de crédito/débito",buttonText:"Doar através do Ko-Fi",message:"Não é necessário criar uma conta para doar através do Ko-fi. Todas as doações vão directamente para o programador."}},Oe={header:"Campo de Destroços",addDebrisFieldManually:{title:"Adicionar campo de destroços manualmente",buttonText:"Adicionar"},position:"Posição"},Le={header:"Estimativa de Recursos","combat-report":"de combates","debris-field-report":"de campos de destroços",expedition:"de expedições"},$e={header:"Império",planet:"Planeta",production:{header:"Produção",subHeaders:{resourceProduction:"Produção de Recursos",mineOverview:"Resumo das Minas"},averagePerHour:"⌀ por hora",totalPerHour:"total por hora",totalPerDay:"total por dia",totalPerWeek:"total por semana",activeProductionSettings:"Definições de Produção Activas",messageProduction100:"Os valores apresentados são com base no factor de produção de 100% e não tem em conta a falta de energia.",mines:{crawlersAvailable:"disponivel",crawlersToReachLimit:e=>`${e} rastejadores para bonús máximo`},items:"Items Activos",breakdown:{basicIncome:"Produção Básica",mineProduction:"Produção da Mina",consumption:"Consumo",lifeformBuildings:"Edifícios de Forma de Vida",crawlers:"Rastejadores",items:"Items",geologist:"Geólogo",commandStaff:"Equipa de Comando",playerClass:"Classe do Jogador",allianceClass:"Classe da Aliança",lifeformTechnologies:"Tecnologias de Forma de Vida"},settings:{reset:"Reset",header:"Definições de Produção",applyAndClose:"Aplicar e fechar definições de produção"}},amortization:{header:"Amortização",table:{cost:"Custo",levels:"Níveis",productionPlus:"Diferença de Produção",amortizationTime:"Tempo de Amortização",groupSelectedItems:"Agrupar items selecionados",showOriginalItems:"Mostrar todos os items individualmente",levelsOnPlanets:(e,a)=>`${e} ${1==e?"nível":"níveis"} ${1==a?"no":"nos"} ${a} ${1==a?"planeta":"planetas"}`},settings:{header:"Definições",applyAndClose:"Aplicar definições e fechar",includeSettings:{header:"Incluído no cálculo",mines:"Minas",expeditions:"Expedições",astrophysicsPerformanceNote:"Nota: Requer bastante processamento, irá afectar muito o desempenho"},playerSettings:{header:"Definições Gerais",optimizeForResources:"Optimizar para recursos selecionados",officers:"Oficiais",playerClass:"Classe do Jogador",allianceClass:"Classe da Aliança",currentLevelOf:e=>`Nível Actual de ${e}`,lifeformLevels:"Níveis de Forma de Vida",unusedRaidColonySlots:"Slots de colónias não usados actualmente"},astrophysicsSettings:{header:e=>`${e} definições`,newColony:"nova Colónia"},planetSettings:{header:"Definições do Planeta",global:{deselectItems:"Desmarcar todos os items",ignoreInactiveLifeformTechnologySlots:"Ignorar slots de tecnologias inactivas de forma de vida para todos os planetas"},includeInResult:"Incluir no cálculo",position:"Posição",maxTemperature:"Temp. Max.",activeItems:"Items Activos",crawlers:{title:"Rastejadores",percentage:"% Produção",fixCount:"Contagem Fixa",maxCount:"Contagem Max."},mines:"Nível Actual das Minas",lifeform:"Forma de Vida",lifeformSettings:"Definições de Forma de Vida",relevantLifeformBuildings:"Edíficios Relevantes de Forma de Vida",lifeformTechnologies:"Tecnologias de Forma de Vida",ignoreEmptySlots:"Ignorar slots inactivos"},expeditionSettings:{header:"Definições de Expedições",averageWavesPerDay:"⌀ Vagas por dia",items:"Slots de item",averageExpeditionsPerDay:"⌀ Expedições por dia",shipUnitFactors:"Factor de recurso de naves",topPlayerScore:"Pontuação do Top player"}},info:{generatingItems:"A calcular os próximos melhores items",slowCalculation:"O cálculo da amortização ficará bastante mais lento agora que os edifícios e tecnologias das formas de vida foram incluídas. Isto será, provavelmente, optimizado no futuro.",ctrlClick:"Ctrl + Click numa checkbox para (des)selecionar todos os item até ao selecionado."},saveLoad:{saveButton:"Gravar resultados do cálculo da amortização",loadButton:e=>`Carregar gravação (${e})`,loadedSave:(e,a)=>`A ver os resultados guardados (${e}) - ${a} entradas escondidas`,abandonedPlanet:"Planeta Destruído"},generateItems:e=>`${e} registos`},lifeforms:{header:"Formas de Vida",subHeaders:{overview:"Resumo",progress:"Progresso",discoveryMissions:"Missões",discoveryResults:"Resultados",experience:"Experiência",researchBonuses:"Bonus de Pesquisas",planetBonuses:"Bónus efectivo nos planetas"},planet:"Planeta",lifeform:"Forma de Vida",buildings:"Edifícios de Forma de Vida",technologies:"Tecnologias de Forma de Vida",tier:"Escalão",level:"Nível",totalLifeformExperience:"Experiência (total)",discoveryDateUnknown:"Desconhecido",notDiscoveredYet:"Ainda não descoberto",discoveryMissions:"Missões de Descoberta",eventTypes:{[L.y.nothing]:"Nada encontrado",[L.y.lostShip]:"Frota de exploração perdida",[L.y.newLifeformFound]:"Nova Forma de Vida",[L.y.knownLifeformFound]:"Experiência de Forma de Vida",[L.y.artifacts]:"Artefactos encontrados"},artifactFindingSizes:{[O.k.small]:"Descoberta Comum",[O.k.medium]:"Descoberta Grande",[O.k.large]:"Descoberta Enorme",[O.k.storageFull]:"Armazenamento Cheio"},lifeformFound:"Forma de Vida encontrada",alwaysAvailable:"Sempre disponível",artifacts:"Artefactos",experiencePoints:"Pontos de Experiência",discoveredOn:"Forma de Vida descoberta em",numberOfLifeformDiscoveries:"Número de descobertas",researchBonuses:{breakdown:{slot:"Slot",research:"Pesquisa",bonus:"Bónus",lifeformBuildingsBoost:"Boost de Edifícios de Forma de Vida",lifeformLevelBoost:(e,a)=>`Boost de Nível de Forma de Vida (${e}: ${a})`,bugBoost:"Boost causado por bugs"},production:{header:"Produção de Recursos"},expeditionFinds:{header:"Descobertas das Expedições",resources:"Recursos",ships:"Naves",fleetLoss:"Frotas Perdidas"},expeditionSpeed:{header:"Média da elocidade de chegada das Expedições",bonus:"Bónus de Velocidade"},ships:{header:"Naves",armor:"Blindagem",shield:"Escudo",damage:"Dano",cargo:"Capacidade",speed:"Velocidade"},defenses:{header:"Defesas"},fuelConsumption:{header:"Consumo de Deutério"},fuelReturn:{header:"Deutério recuperado ao voltar para trás",bonus:"Deutério recuperado"},buildingCostTime:{header:"Custo&Tempo dos Edifícios",cost:"Custo",time:"Tempo"},researchCostTime:{header:"Custo&Tempo das Pesquisas",researches:"Pesquisas",lifeformResearches:"Pesquisas de Formas de Vida"},crawlers:{header:"Rastejadores",productionBonus:"Produção de Recursos",energyConsumption:"Consumo de Energia"},denCapacity:{header:"Capacidade do Den"},phalanxRange:{header:"Alcance do Phalanx"},discoveryMissions:{header:"Velocidade de Missões de Descoberta"},playerClasses:{header:"Classes de Jogador",collector:{productionBonus:"Aumenta a produção das minas",energyProductionBonus:"Aumenta a produção de Energia",transporterSpeedBonus:"Bónus de velocidade dos cargueiros",transporterCargoBonus:"Bónus de capacidade dos cargueiros",crawlerProductionBonus:"Bónus na produção dos Rastejadores",geologistCrawlerAmountBonus:"Mais capacidade para Rastejadores com o Geólogo"},discoverer:{researchDuration:"Reduz tempo de pesquisa",increasedExpeditionFinds:"Aumenta ganhos com expedições",largerPlanets:"Maiores planetas ao colonizar",additionalExpeditionSlots:"Slots adicionais para expedições",reducedExpeditionCombatChance:"Reduz probabilidade de inimigos na expedição",phalanxRange:"Maior alcance do Phalax"},general:{combatShipSpeed:"Bónus de velocidade em naves de combate",recyclerSpeed:"Bónus de velocidade nos recicladores",fuelConsumption:"Reduz o consumo de deutério em todas as naves",increasedCargoRecyclersPathfinders:"Aumenta a capacidade dos recicladores e exploradoras",additionalCombatResearchLevels:"Níveis adicionais nas pesquisas de combate",additionalFleetSlots:"Slots adicionais para frota",additionalMoonFields:"Campos adicionais nas luas"},classBonus:"Bónus da Classe",bonus:"Bónus",baseValue:"Valor Base",valueWithBonuses:"Valor com Bónus"}},planetBonuses:{resourceProduction:{header:"Produção de recursos"},lifeformResearchCostTime:{header:"Tempo e Custo de Pesquisas de Forma de Vida"},wreckfield:{header:"Campo de Destroços"}},topFinds:{topFinds:"Melhores Descobertas",worstFinds:"Piores Descobertas",size:"Tamanho",amount:"Quantidade",date:"Data",artifacts:"Artifactos",experience:"XP"}}},qe={title:"Seleciona uma conta para abrir numa nova tab"},He={faqHelp:{header:"Ajuda",faq:{header:"F.A.Q.",fleetLostOnExpedition:{header:"Porque que é que as naves perdidas em expedições não são contabilizadas?",text:"Contabilizar as naves perdidas em expedições requer fazer monitorização permanente a todas as frotas, o que não é possível."},syncBetweenDevices:{header:"Porque é que não existe sincronização dos meus dados entre vários dispositivos?",text:"O Ogame Tracker guarda mais informação do que aquela que pode ser sincronizada usando a tua conta (Google, Microsoft, etc). A sincronização com um servidor externos poderá ser uma possibilidade no futuro."},productionInResourceBalance:{header:"Porque é que a estimativa de recursos não inclui a minha produção de recursos?",text:"A tua produção de recursos depende de vários factores e seria necessário uma monitorização permanente. É possível mas a implementação desta funcionalidade é muito mais complexa do que a utilizade real para o jogador."},whatAreAverages:{header:"O que significa '⌀ por dia'?",text:"Significa a média global de dias com pelo menos um evento."}},tips:{header:"Dicas",rightClickDefaultRoute:"Podes usar o botão direito do ratona tab principal do lado esquerdo ou em qualquer sub-menu para o tornar como standard para a rota selecionada.",numbersKeyboardNavigation:"Podes abrir as tab carregando no respectivo digito no teclado.",amortizationTable:{part1:"Queres saber o que construir ou pesquisar para aumentar a tua produção de recursos da maneira mais eficiente? Tenta a ",name:"calculadora de amortização interactiva",part2:"."},inlineSettings:"Poderás altera as definições relacionadas clicando no ícone da roda dentada no lado direito.",switchAccountHtml:'Poderás abrir o OGame Tracker para uma outra conta clicando no ícone <span class="mdi mdi-account-multiple"></span> e selecionando a respectiva conta.'},messageDiscord:{part1:"Precisas de ajuda, encontraste um bug ou tens alguma funcionalidade que queiras ver implementada? Entra no ",discordServer:"Discord",part2:" e escreve uma mensagem no canal adequado."}},info:{header:"Info",table:{currentAccount:{header:"Informação acerca da conta selecionada",numberOfTrackedExpeditions:"Número de expedições monitorizadas",numberOfTrackedCombatReports:"Número de relatórios de combate monitorizados ",numberOfTrackedDebrisFieldReports:"Número de relatórios de reciclagem monitorizados",numberOfTrackedLifeformDiscoveries:"Número de explorações monitorizadas",lastUpdateServerSettings:"Última actualização das definições do servidor",numberOfUniverseHistoryEntries:"Número de registos no historico do universo"},global:{header:"Informação acerca de todos os dados no OGame Tracker",numberOfTrackedAccounts:"Número de contas monitorizadas",estimatedSize:"Tamanho dos dados guardados em disco"}}}},Ge={header:"Histórico do Universo",settings:{messages:{notEnabledHtml:"\n            <b>Monitorização do histórico das tabelas de pontuação não está activo.</b><br/>\n            Activar esta funcionalidade fará com que as pontuações dos jogadores e alianças sejam monitorizados.",historyTrackingNotEnabledHtml:'\n            <b>Monitorização do histórico do universo não está activado.</b><br/>\n            Activar esta funcionalidade fará com que todas as alterações a jogadores ou alianças seja monitorizada.<br/>\n            Isto incluíra nomes de jogadores e alianças, tags de alianças, entradas e saídas de membros de alianças, \n            estados dos jogadores e alterações relativas a planetas e luas \n            incluindo nomes, coordenadas e abandonos/destruição de planetas e tuas .<br />\n            <i>Isto irá gerar uma grande quantidade de dados!\n            Poderás desactivar esta funcionalidade <a href="#/settings/universe-history">neste menu de definições</a>.</i>\n            ',trackingTimesHtml:"\n            Pelo menos uma vez por dia as pontuações e os dados do universo serão actualizados (se a funcionalidade estiver activa).<br/>\n            Poderás ver o momento do update abaixo.\n            Se uma actualização for perdida por algum motivo será feita novamente assim que possível."},enableHighscoreTrackingOnly:"Activar monitorização das pontuações do universo",enableHistoryTracking:"Activar a monitorização do historico do universo"},tabs:{players:"Jogadores",alliances:"Alianças",subtabs:{highscore:"Pontuações",history:"Histórico"}},playerSelection:{header:"Seleção de jogadores",search:"procurar jogador"},allianceSelection:{header:"Seleção de alianças",search:"procurar aliança"},highscoreTabs:{total:"Total",economy:"Economia",research:"Pesquisas",military:"Militar",militaryBuilt:"Militar construído",militaryDestroyed:"Militar destruído",militaryLost:"Militar perdido",honor:"Honra",numberOfShips:"Número de naves",lifeform:"Formas de Vida",lifeformDiscoveries:"Descobertas de Formas de Vida",lifeformEconomy:"Economia de Formas de Vida",lifeformTechnology:"Tecnologia de Formas de Vida"},historyTabs:{status:"Estado",nicknames:"Nicks",alliances:"Alianças",planetAndMoons:"Planetas e Luas",tags:"Tags",names:"Nomes",members:"Membros"},noAlliance:"Sem Aliança",today:"hoje",name:"Nome",tag:"Tag",members:"Membros",alliance:"Aliança",from:"De",until:"Até",status:{active:"Activo",vacation:"Modo de Férias",inactive:"Inactivo (>= 7 dias)",inactiveLong:"Ianctivo (>= 28 dias)",banned:"Banido",outlaw:"Fora da Lei",deleted:"Apagado",admin:"Administrado"},loadingTakingLong:"Carregar os dados está a demorar mais do que era esperado. A base de dados poderá está a ser actualizada neste momento. Espera um pouco mais ou tenta mais tarde."},Ue={combatTracking:{title:e=>"1"==e?`${e} novo relatorio de combate monitorizado`:`${e} novos relatórios de combate monitorizados`,message:e=>"1"==e?`${e} novo relatorio de combate foi gravado.`:`${e} novos relatórios de combate foram gravados.`},debrisFieldReportTracking:{title:e=>"1"==e?`${e} novo campo de destroços monitorizado`:`${e} novos campos de destroços monitorizados`,message:e=>"1"==e?`${e} novo campo de destroços foi gravado.`:`${e} novos campos de destroços foram gravados.`},expeditionTracking:{fleetLost:{title:e=>"1"==e?`${e} frota perdida`:`${e} frotas perdidas`,message:e=>"1"==e?`${e} frota não retornou da expedição.`:`${e} frotas nao retornaram das expedições.`},result:{title:e=>"1"==e?`${e} nova expedição monitorizada`:`${e} novas expedições monitorizadas`,summary:"Resumo das descobertas",events:"Eventos de Expedições"}},lifeformDiscoveryTracking:{title:e=>"1"==e?`${e} nova descoberta de forma de vida monitorizada`:`${e} novas descobertas de forma de vida monitorizadas`,message:e=>"1"==e?`${e} nova descoberta de forma de vida guardada.`:`${e} novas descobertas de forma de vida guardadas.`},messageTrackingError:{title:e=>"1"==e?`Falhou o processamento de ${e} mensagem`:`Falhou o processamento de ${e} mensagens`,message:e=>"1"==e?`${e} mensagem causou um erro e não foi monitorizada. A mensagem em causa foi marcada a vermelho. Contacta o developer via Discord.`:`${e} mensagens causaram um erro e não foram monitorizadas. As mensagens em causa doram marcadas a vermelho. Contacata o developer via Discord.`}},Ke={signatureGenerator:{header:"Gerador de Assinatura",averagePerHour:"⌀/hora",totalPerHour:"por hora",totalPerDay:"por dia",totalPerWeek:"por semana",production:"Produção",expeditions:"Expedições",lifeformDiscoveries:"Missões FV",combats:"Combates",debrisFieldReports:"Destroços reciclados"},scrapyardMerchant:{header:"Mercador de Sucata",percentage:"% no Mercador de Sucata",count:"Contagem"}},Ve={header:"Exportar para Excel",chooseBelowMessage:"Escolhe que dados queres incluir na exportação:",groups:{expeditions:{header:"Expedições",rawData:"Dados em bruto (todos os registos guardados)",dailyOverview:"Resumo dos resultados por dia",dailyDepletion:"Resumo do desgaste do sistema por dia",dailyResources:"Descobertas de recursos por dia",dailyResourceSizes:"Tamanho das descobertas de recursos por dia",dailyShips:"Descobertas de naves por dia",dailyShipSizes:"Tamanho das descobertas de naves por dia",dailyDarkMatter:"Descobertas de Matéria Negra por dia",dailyDarkMatterSizes:"Tamanho das descobertas de Matéria Negra por dia"},combats:{header:"Combates",rawData:"Dados em bruto (todos os registos guardados)",dailyResults:"Resultados dos comabtes por dia",dailyLoot:"Montante de pilhagem por dia",dailyLostShips:"Naves perdidas por dia"},debrisFields:{header:"Campos de Destroços",rawData:"Dados em bruto (todos os registos guardados)",dailyResources:"Recursos reciclados por dia"},lifeformDiscoveries:{header:"Missões de Descoberta",rawData:"Dados em bruto (todos os registos guardados)",dailyExperience:"Experiencia ganha por dia"}},generateButton:"Gerar ficheiro de Excel",expeditions:{prefix:"EX",sheets:{rawData:"Dados em bruto",dailyDepletion:"Desgaste diário do sistema",dailyResults:"Resultados - diário",dailyResources:"Recursos - diário",dailyResourcesSize:"Recursos - diário (tamanhos)",dailyShips:"Naves - diário",dailyShipsSize:"Naves - diário (tamanho)",dailyDarkMatter:"Matéria Negra - diário",dailyDarkMatterSize:"Matéria Negra - diário (tamanho)"},eventType:"Tipo",eventSize:"Tamanho",item:"Item"},combats:{prefix:"CR",sheets:{rawData:"Dados em bruto",dailyResults:"Resultados - diário",dailyLoot:"Pilhagem - diário",dailyLostShips:"Naves perdidas - diário"},result:"Resultado do combate",coordinates:"Coordenadas",galaxy:"Galáxia",system:"Sistema",position:"Posição",targetType:"Tipo de alvo",combatType:"Tipo de combate",expeditionCombatOpponent:"Adversário de combate de expedição",loot:"Pilhagem",lostShips:"Naves Perdidas",debrisField:"Campo de Destroços",moon:"Lua",planet:"Planeta",expeditionCombat:"Combate de Expedição",playerCombat:"Combate de Jogador",pirates:"Piratas",aliens:"Aliens",againstPlayers:"Contra jogadores",onExpeditions:"Em expedições"},debrisFields:{prefix:"DF",sheets:{rawData:"Dados em bruto",dailyResources:"Recursos - diário"}},lifeformDiscoveries:{prefix:"LF",sheets:{rawData:"Dados em bruto",dailyExperience:"Experiência - diário"},result:"Descobertas",experience:"Experiência",lifeform:"Forma de Vida",artifacts:"Artefactos",artifactsSize:"Tamanho"}},je={collector:"Colecionador",discoverer:"Descobridor",general:"General",none:"Nenhuma"},We={ogame:{buildings:xe,lifeforms:Ee,lifeformBuildings:Be,lifeformTechnologies:Ce,premium:Ae,resources:Ie,research:Te,ships:Se,defenses:ke},extension:{common:Ne,settings:De,resources:Ie,expeditions:ze,combats:Me,donate:Re,debrisFields:Oe,resourceBalance:Le,empire:$e,switchAccounts:qe,about:He,universeHistory:Ge,notifications:Ue,tools:Ke,excelExport:Ve,playerClasses:je}},Ze={[l.g.lightFighter]:"Chasseur léger",[l.g.heavyFighter]:"Chasseur lourd",[l.g.cruiser]:"Croiseur",[l.g.battleship]:"Vaisseau de bataille",[l.g.battlecruiser]:"Traqueur",[l.g.bomber]:"Bombardier",[l.g.destroyer]:"Destructeur",[l.g.deathStar]:"Étoile de la mort",[l.g.reaper]:"Faucheur",[l.g.pathfinder]:"Éclaireur",[l.g.smallCargo]:"Petit transporteur",[l.g.largeCargo]:"Grand transporteur",[l.g.colonyShip]:"Vaisseau de colonisation",[l.g.recycler]:"Recycleur",[l.g.espionageProbe]:"Sonde d`espionnage",[l.g.solarSatellite]:"Satellite solaire",[l.g.crawler]:"Foreuse"},Ye={[c.r.rocketLauncher]:"Lanceur de missiles",[c.r.lightLaser]:"Artillerie laser légère",[c.r.heavyLaser]:"Artillerie laser lourde",[c.r.gaussCannon]:"Canon de Gauss",[c.r.ionCannon]:"Artillerie à ions",[c.r.plasmaTurret]:"Lanceur de plasma",[c.r.smallShieldDome]:"Petit bouclier",[c.r.largeShieldDome]:"Grand bouclier"},Qe={[m.A.metalMine]:"Mine de métal",[m.A.metalStorage]:"Hangar de métal",[m.A.crystalMine]:"Mine de cristal",[m.A.crystalStorage]:"Hangar de cristal",[m.A.deuteriumSynthesizer]:"Synthétiseur de deutérium",[m.A.deuteriumTank]:"Réservoir de deutérium",[m.A.solarPlant]:"Centrale électrique solaire",[m.A.fusionReactor]:"Centrale électrique de fusion",[m.A.roboticsFactory]:"Usine de robots",[m.A.naniteFactory]:"Usine de nanites",[m.A.shipyard]:"Chantier spatial",[m.A.spaceDock]:"Dock spatial",[m.A.missileSilo]:"Silo de missiles",[m.A.researchLab]:"Laboratoire de recherche",[m.A.allianceDepot]:"Dépôt de ravitaillement",[m.A.terraformer]:"Terraformeur",[m.A.lunarBase]:"Base lunaire",[m.A.sensorPhalanx]:"Phalange de capteur",[m.A.jumpGate]:"Porte de saut spatial"},Je={[p.s.energyTechnology]:"Technologie énergétique",[p.s.laserTechnology]:"Technologie Laser",[p.s.ionTechnology]:"Technologie à ions",[p.s.hyperspaceTechnology]:"Technologie hyperespace",[p.s.plasmaTechnology]:"Technologie Plasma",[p.s.espionageTechnology]:"Technologie Espionnage",[p.s.computerTechnology]:"Technologie Ordinateur",[p.s.astrophysics]:"Astrophysique",[p.s.intergalacticResearchNetwork]:"Réseau de recherche intergalactique",[p.s.gravitonTechnology]:"Technologie Graviton",[p.s.combustionDrive]:"Réacteur à combustion",[p.s.impulseDrive]:"Réacteur à impulsion",[p.s.hyperspaceDrive]:"Propulsion hyperespace",[p.s.weaponsTechnology]:"Technologie Armes",[p.s.shieldingTechnology]:"Technologie Bouclier",[p.s.armorTechnology]:"Technologie Protection des vaisseaux spatiaux"},Xe={[h.e5.none]:"Aucune forme de vie",[h.e5.humans]:"Les Humains",[h.e5.rocktal]:"Roctas",[h.e5.mechas]:"Mécas",[h.e5.kaelesh]:"Kaeleshs"},ea={[y.EO.residentialSector]:"Secteur résidentiel",[y.EO.biosphereFarm]:"Ferme biosphérique",[y.EO.researchCentre]:"Centre de recherche",[y.EO.academyOfSciences]:"Académie des sciences",[y.EO.neuroCalibrationCentre]:"Centre de neurocalibrage",[y.EO.highEnergySmelting]:"Fusion à haute énergie",[y.EO.foodSilo]:"Réserve alimentaire",[y.EO.fusionPoweredProduction]:"Extraction par fusion",[y.EO.skyscraper]:"Tour d`habitation",[y.EO.biotechLab]:"Laboratoire de biotechnologie",[y.EO.metropolis]:"Métropolis",[y.EO.planetaryShield]:"Bouclier planétaire",[y.EO.meditationEnclave]:"Enclave stoïque",[y.EO.crystalFarm]:"Culture du cristal",[y.EO.runeTechnologium]:"Centre technologique runique",[y.EO.runeForge]:"Forge runique",[y.EO.oriktorium]:"Orictorium",[y.EO.magmaForge]:"Fusion magmatique",[y.EO.disruptionChamber]:"Chambre de disruption",[y.EO.megalith]:"Monument rocheux",[y.EO.crystalRefinery]:"Raffinerie de cristaux",[y.EO.deuteriumSynthesiser]:"Syntoniseur de deutérium",[y.EO.mineralResearchCentre]:"Centre de recherche sur les minéraux",[y.EO.advancedRecyclingPlant]:"Usine de traitement à haut rendement",[y.EO.assemblyLine]:"Chaîne de production",[y.EO.fusionCellFactory]:"Usine de fusion de cellules",[y.EO.roboticsResearchCentre]:"Centre de recherche en robotique",[y.EO.updateNetwork]:"Réseau d`actualisation",[y.EO.quantumComputerCentre]:"Centre d`informatique quantique",[y.EO.automatisedAssemblyCentre]:"Centre d`assemblage automatisé",[y.EO.highPerformanceTransformer]:"Transformateur hyperpuissant",[y.EO.microchipAssemblyLine]:"Chaîne de production de micropuces",[y.EO.productionAssemblyHall]:"Atelier de montage",[y.EO.highPerformanceSynthesiser]:"Synthétiseur à haut rendement",[y.EO.chipMassProduction]:"Production de masse de puces",[y.EO.nanoRepairBots]:"Nanorobots réparateurs",[y.EO.sanctuary]:"Refugium",[y.EO.antimatterCondenser]:"Condensateur d`antimatière",[y.EO.vortexChamber]:"Salle à vortex",[y.EO.hallsOfRealisation]:"Maison du savoir",[y.EO.forumOfTranscendence]:"Forum de la transcendance",[y.EO.antimatterConvector]:"Convecteur d`antimatière",[y.EO.cloningLaboratory]:"Laboratoire de clonage",[y.EO.chrysalisAccelerator]:"Accélérateur par chrysalide",[y.EO.bioModifier]:"Biomodificateur",[y.EO.psionicModulator]:"Modulateur psionique",[y.EO.shipManufacturingHall]:"Hangar de construction de vaisseau",[y.EO.supraRefractor]:"Supraréfracteur"},aa={[_.Nw.intergalacticEnvoys]:"Ambassadeurs intergalactiques",[_.Nw.highPerformanceExtractors]:"Extracteurs à haute performance",[_.Nw.fusionDrives]:"Moteurs à fusion",[_.Nw.stealthFieldGenerator]:"Générateur de champ de camouflage",[_.Nw.orbitalDen]:"Planque orbitale",[_.Nw.researchAI]:"IA de recherche",[_.Nw.highPerformanceTerraformer]:"Terraformeur à haute performance",[_.Nw.enhancedProductionTechnologies]:"Technologies d`extraction améliorées",[_.Nw.lightFighterMkII]:"Chasseur léger Mk II",[_.Nw.cruiserMkII]:"Croiseur Mk II",[_.Nw.improvedLabTechnology]:"Technologie de laboratoire améliorée",[_.Nw.plasmaTerraformer]:"Terraformeur à plasma",[_.Nw.lowTemperatureDrives]:"Propulseurs à faible température",[_.Nw.bomberMkII]:"Bombardier Mk II",[_.Nw.destroyerMkII]:"Destructeur Mk II",[_.Nw.battlecruiserMkII]:"Traqueur Mk II",[_.Nw.robotAssistants]:"Assistants robotiques",[_.Nw.supercomputer]:"Superordinateur",[_.Nw.volcanicBatteries]:"Batteries volcaniques",[_.Nw.acousticScanning]:"Sondage acoustique",[_.Nw.highEnergyPumpSystems]:"Système de pompage à haute énergie",[_.Nw.cargoHoldExpansion_CivilianShips]:"Extension d`espace fret (vaisseaux civils)",[_.Nw.magmaPoweredProduction]:"Extraction magmatique",[_.Nw.geothermalPowerPlants]:"Centrales géothermiques",[_.Nw.depthSounding]:"Sondage en profondeur",[_.Nw.ionCrystalEnhancement_heavyFighter]:"Renforcement à cristaux ioniques (chasseurs lourds)",[_.Nw.improvedStellarator]:"Stellarator amélioré",[_.Nw.hardenedDiamondDrillHeads]:"Têtes de forage en diamant renforcées",[_.Nw.seismicMiningTechnology]:"Technologies d`extraction sismique",[_.Nw.magmaPoweredPumpSystems]:"Pompes au magma",[_.Nw.ionCrystalModules]:"Module à cristaux ioniques",[_.Nw.optimisedSiloConstructionMethod]:"Construction optimisée de silos",[_.Nw.diamondEnergyTransmitter]:"Émetteur d`énergie à diamants",[_.Nw.obsidianShieldReinforcement]:"Intensification du bouclier à l`obsidienne",[_.Nw.runeShields]:"Boucliers runiques",[_.Nw.rocktalCollectorEnhancement]:"Renfort du collecteur rocta",[_.Nw.catalyserTechnology]:"Technique de catalyse",[_.Nw.plasmaDrive]:"Moteur à plasma",[_.Nw.efficiencyModule]:"Module d`optimisation",[_.Nw.depotAI]:"IA du dépôt",[_.Nw.generalOverhaul_lightFighter]:"Révision complète (chasseur léger)",[_.Nw.automatedTransportLines]:"Chaîne de production automatisée",[_.Nw.improvedDroneAI]:"IA de drone améliorée",[_.Nw.experimentalRecyclingTechnology]:"Technique de recyclage expérimental",[_.Nw.generalOverhaul_cruiser]:"Révision complète (croiseur)",[_.Nw.slingshotAutopilot]:"Pilote automatique Slingshot",[_.Nw.highTemperatureSuperconductors]:"Supraconducteurs à haute température",[_.Nw.generalOverhaul_battleship]:"Révision complète (vaisseau de bataille)",[_.Nw.artificialSwarmIntelligence]:"Intelligence artificielle collective",[_.Nw.generalOverhaul_battlecruiser]:"Révision complète (traqueur)",[_.Nw.generalOverhaul_bomber]:"Révision complète (bombardier)",[_.Nw.generalOverhaul_destroyer]:"Révision complète (destructeur)",[_.Nw.experimentalWeaponsTechnology]:"Technique d`armement expérimentale",[_.Nw.mechanGeneralEnhancement]:"Renforcement du général des Mécas",[_.Nw.heatRecovery]:"Récupération de chaleur",[_.Nw.sulphideProcess]:"Traitement au sulfure",[_.Nw.psionicNetwork]:"Réseau psionique",[_.Nw.telekineticTractorBeam]:"Faisceau de traction télékinésique",[_.Nw.enhancedSensorTechnology]:"Technologie de détection améliorée",[_.Nw.neuromodalCompressor]:"Compresseur neuromodal",[_.Nw.neuroInterface]:"Neuro-interface",[_.Nw.interplanetaryAnalysisNetwork]:"Réseau d`analyse superglobal",[_.Nw.overclocking_heavyFighter]:"Surcadençage (chasseur lourd)",[_.Nw.telekineticDrive]:"Système de propulsion télékinétique",[_.Nw.sixthSense]:"Sixième sens",[_.Nw.psychoharmoniser]:"Harmonisateur psychique",[_.Nw.efficientSwarmIntelligence]:"Intelligence collective optimisée",[_.Nw.overclocking_largeCargo]:"Surcadençage (grand transporteur)",[_.Nw.gravitationSensors]:"Capteurs gravitationnels",[_.Nw.overclocking_battleship]:"Surcadençage (vaisseau de bataille)",[_.Nw.psionicShieldMatrix]:"Matrice de protection psionique",[_.Nw.kaeleshDiscovererEnhancement]:"Renforcement d`explorateur kaelesh"},ra={darkMatter:"Antimatière (AM)"},ta={tabs:{dateRanges:"Plages de dates",colors:"Couleurs",common:"Commun",importExport:"Importation/Exportation",expeditions:"Expéditions",combats:"Combats",debrisFields:"Champs de débris",resourceBalance:"Balance des ressources",universeHistory:"Historique de l'univers",dangerZone:"Zone dangereuse",accessbility:"Accessibilité",linkAccounts:"Lier les comptes",migrateOldData:"Migrer les anciennes données"},dateRanges:{defaultNames:{today:"Aujourd'hui",yesterday:"Hier",currentWeek:"Semaine en cours",lastWeek:"Semaine dernière",currentMonth:"Mois en cours",newRange:"nouvelle plage"},since:e=>`Depuis le ${e}`,firstDayTemplate:"<premier jour>",headers:{label:"Étiquette",type:"Type",rangeStart:"Début de la plage",rangeContains:"La plage contient"},day:"jour",days:"jours",daysAgo:"jours auparavant",week:"semaine",weeks:"semaines",weeksAgo:"semaines auparavant",month:"mois",months:"mois",monthsAgo:"mois auparavant",year:"année",years:"années",yearsAgo:"années auparavant"},colors:{combatResults:"Résultats des combats",expeditionEvents:"Événements d'expédition",expeditionEventSizes:"Tailles d'événements d'expédition",expeditionDepletionLevels:"Épuisement du système",lifeformDiscoveries:"Découvertes de formes de vie",lifeforms:"Formes de vie",resources:"Ressources",ships:"Vaisseaux"},common:{conversionRates:{title:"Taux de conversion",msuLong:"Convertir en Métal (USM)",dsuLong:"Convertir en Deutérium (USD)"},extensionLanguage:"Langue de l'interface utilisateur (dans OGame Tracker)",extensionLanguageFallbackHint:"Les textes en anglais seront affichés si les textes ne sont pas disponibles dans la langue sélectionnée.",serverSettings:{title:"Données du serveur",lastUpdate:"Dernière mise à jour",forceUpdate:"Mettre à jour les données du serveur"}},expeditions:{resourceUnitFactorsOfShipFoundOnExpeditions:"Pondération de la valeur en ressources des vaisseaux trouvés lors des expéditions"},combats:{resourceUnitFactorsOfLostShips:"Pondération de la valeur en ressources des vaisseaux perdus en combat",ignoreEspionageCombats:{title:"Ignorer les combats d'espionnage",label:"Ignorer les rapports de combat d'espionnage pour le suivi des combats"}},resourceBalance:{detailedResourceBalance:{header:"Bilan détaillé des ressources",checkboxLabel:"Afficher le bilan détaillé des ressources"},includeShipsFoundOnExpeditions:{header:"Vaisseaux trouvés lors des expéditions",checkboxLabel:"Inclure les ressources des vaisseaux trouvés lors des expéditions dans le bilan des ressources"},includeShipsLostInCombats:{header:"Vaisseaux perdus en combats",checkboxLabel:"Inclure les ressources des vaisseaux perdus en combats dans le bilan des ressources"},includeLostLootResources:{header:"Ressources perdues en combats",checkboxLabel:"Inclure les ressources perdues en combats dans le bilan des ressources"}},showConvertedUnitsInTables:{title:"USM/USD dans les tables",label:"Afficher les valeurs converties USM/USD dans les tables",infoAmortization:"Le temps d'amortissement sera toujours calculé en utilisant le coût et la production en USM/USD"},reset:"Réinitialiser les paramètres",setDefaultRoute:"Définir comme par défaut",setDefaultSubRoute:"Définir comme par défaut pour cette zone",dangerZone:{doYouWantToContinue:"ÊTES-VOUS SÛR DE VOULOIR CONTINUER ?",deleteExpeditions:{button:e=>`Supprimer toutes les expéditions suivies pour le compte actuellement sélectionné (${e})`,confirmationText:(e,a)=>`Si vous confirmez, toutes les ${a} expéditions suivies seront supprimées pour le compte actuellement sélectionné (${e}).`},deleteCombats:{button:e=>`Supprimer tous les combats suivis pour le compte actuellement sélectionné (${e})`,confirmationText:(e,a)=>`Si vous confirmez, tous les ${a} combats suivis seront supprimés pour le compte actuellement sélectionné (${e}).`},deleteDebrisFieldReports:{button:e=>`Supprimer tous les rapports de récolte de champs de débris suivis pour le compte actuellement sélectionné (${e})`,confirmationText:(e,a)=>`Si vous confirmez, tous les ${a} rapports de récolte de champs de débris suivis seront supprimés pour le compte actuellement sélectionné (${e}).`},deleteAccount:{button:e=>`Supprimer toutes les données du compte actuellement sélectionné (${e})`,confirmationText:e=>`Si vous confirmez, toutes les données suivies pour le compte actuellement sélectionné (${e}) seront supprimées.\nCela inclut les données suivies de l'historique de l'univers s'il n'y a pas d'autre compte suivi pour cet univers.`},deleteUniverseHistory:{button:e=>`Supprimer l'historique de l'univers suivi du serveur actuellement sélectionné (${e})`,confirmationText:e=>`Si vous confirmez, toutes les données d'historique de l'univers suivies pour le serveur actuellement sélectionné (${e}) seront supprimées.`},deleteEverything:{button:"Supprimer toutes les données",confirmationText1:"Si vous confirmez, toutes les données seront supprimées.\nCela inclut les données suivies de chaque compte, y compris les expéditions suivies, les combats suivis, les rapports de récolte de champs de débris suivis, les données d'historique de l'univers et plus encore.",confirmationText2:"Veuillez confirmer à nouveau que vous voulez supprimer toutes les données."}},importExport:{export:{header:"Exporter",description:"Ici, vous pouvez exporter vos données. Cela inclura les données pertinentes de tous vos comptes suivis et de leurs serveurs.",includeUniverseHistory:"inclure l'historique de l'univers dans l'exportation (cela peut considérablement augmenter la taille du fichier et le temps d'importation !)",button:"Commencer l'exportation",wait:"Veuillez patienter pendant que vos données sont préparées pour l'exportation...",errors:{unexpectedError:"Une erreur inattendue s'est produite lors de l'exportation de vos données."}},import:{header:"Importer",description:"Ici, vous pouvez importer vos données à partir d'un fichier. Veuillez sélectionner votre fichier.",button:"Commencer l'importation",wait:"Veuillez patienter pendant que vos données sont importées...",errors:{invalidFormat:"Le format du fichier est invalide.",unexpectedError:"Une erreur inattendue s'est produite lors de l'importation de vos données."}},importCallbacks:{importingSettings:"Importation de vos paramètres",importingBasicData:"Importation des données de base du compte et du serveur",importingUniverseHistories:(e,a,r,t)=>{const s="Importation de l'historique de l'univers du serveur";return`${s} (serveur ${e+1}/${a}, entrée ${r+1}/${t})`},importingAccounts:(e,a,r,t,s)=>{const o="Importation des comptes",i=`${e+1}/${a}`;if("account"==r)return`${o} (${i})`;if("combat-reports"==r)return`${o} (${i}, combat ${t+1}/${s})`;if("expeditions"==r)return`${o} (${i}, expédition ${t+1}/${s})`;if("debris-fields"==r)return`${o} (${i}, champ de débris ${t+1}/${s})`;if("lifeform-discoveries"==r)return`${o} (${i}, mission de découverte ${t+1}/${s})`;if("empire.data"==r)return`${o} (${i}, données de base de l'empire)`;if("empire.planets"==r)return`${o} (${i}, planète ${t+1}/${s})`;if("empire.moons"==r)return`${o} (${i}, lune ${t+1}/${s})`;if("universe-specific-settings"==r)return`${o} (${i}, paramètres spécifiques à l'univers)`;throw new Error(`Invalid type '${r}'`)}}},accessibility:{showSimplifiedResults:{title:"Visualisation simplifiée",label:"Visualisation simplifiée, masque les messages originaux des résultats d'expédition et des rapports de récolte de champs de débris, et affiche des icônes au lieu de textes dans les notifications."}},debrisFields:{separateExpeditionDebrisFields:{title:"Séparer la position 16",label:"Séparer les champs de débris récoltés en position 16 des positions 1 à 15"}},linkAccounts:{header:e=>`Lier des comptes avec le compte actuel (${e})`,descriptionHtml:e=>`Vous ne devriez lier des comptes que si vous voulez que l'OGame Tracker considère les données des comptes liés comme des données du compte actuel (${e}).<br/>C'est souvent le cas lorsque qu'un compte a été fusionné avec un autre serveur et est traité comme un compte distinct dans l'OGame Tracker.<br/><br/>Exemple: <br/><ol>\n                    <li>le joueur "OGame Professional" joue sur le serveur "FR Voie Lactée"</li>\n                    <li>le serveur "FR Voie Lactée" devient un univers exode lors d'une fusion</li>\n                    <li>le joueur "OGame Professional" fusionne son compte avec "FR Trèfle"</li>\n                    <li>après la fusion, l'OGame Tracker ne montre aucune expédition de l'ancien serveur "FR Voie Lactée" pour le compte fusionné</li>\n                    <li>dans l'OGame Tracker, l'ancien compte "OGame Professional" sur le serveur "FR Voie Lactée" est lié au nouveau compte "OGame Professional" sur le serveur "FR Trèfle"</li>\n                    <li>les expéditions qui ont été envoyées sur l'ancien serveur "FR Voie Lactée" apparaîtront maintenant à nouveau pour le compte fusionné sur "FR Trèfle"</li>\n                </ol>\n            `,linkAccount:"lier un autre compte :",linkedAccounts:"Comptes liés :"}},sa={[x._.metal]:"Métal",[x._.crystal]:"Cristal",[x._.deuterium]:"Deutérium",energy:"Énergie"},oa=sa,ia={averagePerDay:"⌀ par jour",chart:"Graphique",table:"Tableau",sum:"Somme",total:"Total",resourceUnits:"Unités des ressources",dsu:"USD",msu:"USM",date:"Date",dateTime:"Date et heure",madeWithLove1:"Créé avec",madeWithLove2:"par Wonkydonky"},na={pirates:"Pirates",aliens:"Aliens"},la={header:"Expéditions",tabHeaders:{overview:"Vue d'ensemble",foundResources:"Ressources",foundShips:"Vaisseaux",foundDarkMatter:ra.darkMatter,foundItems:"Objets",depletion:"Épuisement",info:{header:"Info",topFinds:"Meilleures découvertes",possibleFinds:"Liste des découvertes possibles"},subHeaders:{amount:"Quantité",sizes:"Tailles",resources:"Unités de ressources",count:"Nombre",sizesByResource:"Tailles par ressource"}},expeditionEvents:{[A.r.nothing]:"Aucun événement",[A.r.resources]:"Ressources",[A.r.fleet]:"Vaisseaux",[A.r.delay]:"Retard",[A.r.early]:"Avance",[A.r.darkMatter]:ra.darkMatter,[A.r.pirates]:na.pirates,[A.r.aliens]:na.aliens,[A.r.combat]:"Combat",[A.r.item]:"Objet",[A.r.trader]:"Marchand",[A.r.lostFleet]:"Flotte perdue"},expeditionEventSizes:{[C.Mm.small]:"Découverte commune",[C.Mm.medium]:"Découverte importante",[C.Mm.large]:"Découverte exceptionnelle","fled-death-star":"Ennemis ont fui"},depletionLevels:{[P.q.none]:"Très bas",[P.q.low]:"Bas",[P.q.medium]:"Moyen",[P.q.high]:"Élevé",unknown:"Inconnu"},expeditions:"Expéditions",finds:"Découvertes",shipsFound:"Vaisseaux trouvés",depletion:"Épuisement du système",topFinds:{title:e=>`Meilleures découvertes (${e})`,shipUnits:"Unités de vaisseaux",size:"Taille",amount:"Quantité",date:"Date"},possibleFinds:{info:{playerClass:"Classe du joueur",economySpeed:"Vitesse économique",resourceFindBonus:"Bonus de découvertes de ressources",shipFindBonus:"Bonus de découvertes de vaisseaux",darkMatterFindBonus:"Bonus de découvertes d'Antimatière",discovererBonus:"Bonus de classe Explorateur"},maximumFinds:"Découvertes maximales",findsDarkMatter:"Plages de découvertes d'Antimatière",listOfPossibleFinds:"Liste des découvertes possibles (ressources, unités de vaisseaux)",findSizes:e=>`Quantités possibles (${e})`,shipUnits:"Unités de vaisseaux"}},da={header:"Combats",tabHeaders:{overview:"Vue d'ensemble",loot:"Butin",lostShips:"Vaisseaux perdus",subHeaders:{againstPlayers:"Contre les joueurs",onExpeditions:"En expéditions",amount:"Quantité",resources:"Unités de ressources"}},combats:"Combats",shipsLost:"Vaisseaux perdus",combatResults:{[N.a.won]:"Victoires",[N.a.lost]:"Défaites",[N.a.draw]:"Matchs nuls"}},ca={header:"Faire un don",subHeader:"Faire un don pour soutenir le développement d'OGame Tracker",crypto:{header:"Faire un don en cryptomonnaie"},kofi:{header:"Faire un don avec PayPal ou carte de débit/crédit",buttonText:"Faire un don sur Ko-Fi",message:"Vous n'avez pas besoin de créer un compte sur Ko-Fi pour faire un don. Tous les dons sont directement transmis au développeur."}},ua={header:"Champs de débris",addDebrisFieldManually:{title:"Ajouter manuellement un champ de débris",buttonText:"Ajouter"},position:"Position"},ma={header:"Bilan des ressources","combat-report":"des combats","debris-field-report":"des champs de débris",expedition:"des expéditions"},ga={header:"Empire",planet:"Planète",production:{header:"Production",subHeaders:{resourceProduction:"Production de ressources",mineOverview:"Vue d'ensemble des mines"},averagePerHour:"⌀ par heure",totalPerHour:"total par heure",totalPerDay:"total par jour",totalPerWeek:"total par semaine",activeProductionSettings:"Paramètres de production actifs",messageProduction100:"Les valeurs affichées se réfèrent à un facteur de production de 100% et ne tiennent pas compte du manque d'énergie.",mines:{crawlersAvailable:"disponibles",crawlersToReachLimit:e=>`${e} foreuses pour le bonus maximum`},items:"Objets actifs",breakdown:{basicIncome:"Revenu de base",mineProduction:"Production de mine",consumption:"Consommation",lifeformBuildings:"Bâtiments formes de vie",crawlers:"Foreuses",items:"Objets",geologist:"Géologue",commandStaff:"Conseil d'officiers",playerClass:"Classe de joueur",allianceClass:"Classe d'alliance",lifeformTechnologies:"Technologies formes de vie"},settings:{reset:"Réinitialiser",header:"Paramètres de production",applyAndClose:"Appliquer et fermer les paramètres de production"}},amortization:{header:"Amortissement",table:{cost:"Coût",levels:"Niveaux",productionPlus:"Production en plus",amortizationTime:"Temps d'amortissement",groupSelectedItems:"Regrouper les objets sélectionnés",showOriginalItems:"Afficher tous les objets individuellement",levelsOnPlanets:(e,a)=>`${e} ${1==e?"niveau":"niveaux"} sur ${a} ${1==a?"planète":"planètes"}`},settings:{header:"Paramètres",applyAndClose:"Appliquer les paramètres et fermer",includeSettings:{header:"Inclure dans le calcul",mines:"Mines",expeditions:"Expéditions",expeditionsRequirement:'Remarque : Nécessite "Recherche des formes de vie" et/ou "Astrophysique" activée',astrophysicsAndColony:"Astrophysique et nouvelles colonies",astrophysicsPerformanceNote:"Remarque : Intensif en calcul, affectera considérablement les performances"},playerSettings:{header:"Paramètres généraux",optimizeForResources:"Optimiser pour les ressources sélectionnées",officers:"Officiers",playerClass:"Classe de joueur",allianceClass:"Classe d'alliance",currentLevelOf:e=>`Niveau actuel de ${e}`,lifeformLevels:"Niveaux de la forme de vie",unusedRaidColonySlots:'Emplacements de colonie à réserver pour le raid ("volante")'},astrophysicsSettings:{header:e=>`Paramètres ${e}`,newColony:"Nouvelle colonie"},planetSettings:{header:"Paramètres de la planète",global:{deselectItems:"Désélectionner tous les éléments",ignoreInactiveLifeformTechnologySlots:"Ignorer les emplacements inactifs des technologies forme de vie pour toutes les planètes",deselectAllPlanets:"Désélectionner toutes les planètes"},includeInResult:"Inclure dans le calcul",position:"Position",maxTemperature:"Température max",activeItems:"Objets actifs",crawlers:{title:"Foreuses",percentage:"% Production",fixCount:"Compte fixe",maxCount:"Compte max"},mines:"Niveaux actuels des mines",lifeform:"Forme de vie",lifeformSettings:"Paramètres de la forme de vie",relevantLifeformBuildings:"Bâtiments pertinents de la forme de vie",lifeformTechnologies:"Technologies de la forme de vie",ignoreEmptySlots:"Ignorer les emplacements inactifs"},expeditionSettings:{header:"Paramètres d'expédition",averageWavesPerDay:"⌀ Vagues par jour",items:"Objets d'expédition",averageExpeditionsPerDay:"⌀ Expéditions par jour",shipUnitFactors:"Facteurs d'unité de ressources des vaisseaux",topPlayerScore:"Score du meilleur joueur"}},info:{generatingItems:"Calcul des prochains meilleurs investissements",slowCalculation:"Le calcul d'amortissement est devenu assez lent maintenant qu'il inclut les bâtiments et technologies formes de vie. Cela devrait être amélioré à l'avenir.",ctrlClick:"Ctrl + Clic sur une case pour (dé)sélectionner tous les éléments jusqu'à celui sélectionné."},saveLoad:{saveButton:"Enregistrer les résultats d'amortissement calculés",loadButton:e=>`Charger la sauvegarde (${e})`,loadedSave:(e,a)=>`Affichage des résultats sauvegardés (${e}) - ${a} lignes masquées`,abandonedPlanet:"Planète abandonnée"},generateItems:e=>`${e} entrées`},lifeforms:{header:"Formes de vie",subHeaders:{overview:"Vue d'ensemble",progress:"Progression",discoveryMissions:"Missions de découverte",discoveryResults:"Résultats",experience:"Expérience",researchBonuses:"Bonus de recherche globaux",planetBonuses:"Bonus de planète effectifs"},planet:"Planète",lifeform:"Forme de vie",buildings:"Bâtiments forme de vie",technologies:"Technologies forme de vie",tier:"Tier",level:"Niveau",totalLifeformExperience:"Expérience totale de la forme de vie",discoveryDateUnknown:"Inconnue",notDiscoveredYet:"Pas encore découverte",discoveryMissions:"Missions de découverte",eventTypes:{[L.y.nothing]:"Aucune découverte",[L.y.lostShip]:"Vaisseau d'exploration perdu",[L.y.newLifeformFound]:"Nouvelle forme de vie",[L.y.knownLifeformFound]:"Expérience de la forme de vie",[L.y.artifacts]:"Artéfacts trouvés"},artifactFindingSizes:{[O.k.small]:"Découverte commune",[O.k.medium]:"Découverte importante",[O.k.large]:"Découverte énorme",[O.k.storageFull]:"Stockage plein"},lifeformFound:"Forme de vie trouvée",alwaysAvailable:"Toujours disponible",artifacts:"Artéfacts",experiencePoints:"Points d'expérience",discoveredOn:"Forme de vie découverte le",numberOfLifeformDiscoveries:"Nombre de découvertes de formes de vie",globalResearchBonus:"Bonus de recherche global",researchBonuses:{breakdown:{slot:"Emplacement",research:"Recherche",bonus:"Bonus",lifeformBuildingsBoost:"Amélioration des bâtiments de la forme de vie",lifeformLevelBoost:(e,a)=>`Amélioration du niveau de la forme de vie (${e} : ${a})`,bugBoost:"Bonus causé par des bugs"},production:{header:"Production de ressources"},expeditionFinds:{header:"Découvertes d'expédition",resources:"Ressources",ships:"Vaisseaux",fleetLoss:"Pertes de flotte"},expeditionSpeed:{header:"Vitesse d'arrivée en expédition",bonus:"Bonus de vitesse"},ships:{header:"Vaisseaux",armor:"Armure",shield:"Bouclier",damage:"Dégâts",cargo:"Fret",speed:"Vitesse"},defenses:{header:"Défenses"},fuelConsumption:{header:"Consommation de carburant"},fuelReturn:{header:"Retour de carburant lors du rappel",bonus:"Retour de carburant"},buildingCostTime:{header:"Coût et temps de construction",cost:"Coût",time:"Temps"},researchCostTime:{header:"Coût et temps de recherche",researches:"Recherches",lifeformResearches:"Recherches forme de vie"},crawlers:{header:"Foreuses",productionBonus:"Production de ressources",energyConsumption:"Consommation d'énergie"},denCapacity:{header:"Capacité de la cachette"},phalanxRange:{header:"Portée de la phalange"},discoveryMissions:{header:"Vitesse des missions de découverte"},playerClasses:{header:"Classes de joueur",collector:{productionBonus:"Augmentation de la production des mines",energyProductionBonus:"Augmentation de la production d'énergie",transporterSpeedBonus:"Bonus de vitesse pour les transporteurs",transporterCargoBonus:"Bonus de cargo pour les transporteurs",crawlerProductionBonus:"Bonus de production des foreuses",geologistCrawlerAmountBonus:"Bonus de foreuses utilisables avec le géologue"},discoverer:{researchDuration:"Durée des recherches",increasedExpeditionFinds:"Gain accru lors des expéditions",largerPlanets:"Planètes plus grandes lors de la colonisation",additionalExpeditionSlots:"Slot d'expédition supplémentaires",reducedExpeditionCombatChance:"Réduction du risque de combats lors des expéditions",phalanxRange:"Augmentation de la portée de la phalange"},general:{combatShipSpeed:"Bonus de vitesse des vaisseaux de combat",recyclerSpeed:"Bonus de vitesse des recycleurs",fuelConsumption:"Consommation de carburant pour tous les vaisseaux",increasedCargoRecyclersPathfinders:"Augmentation de la capacité de charge des recycleurs/éclaireurs",additionalCombatResearchLevels:"Niveaux des recherches de combat supplémentaires",additionalFleetSlots:"Flottes supplémentaires",additionalMoonFields:"Champs de lune supplémentaires"},classBonus:"Bonus de classe",bonus:"Bonus",baseValue:"Valeur de base",valueWithBonuses:"Valeur avec bonus"}},planetBonuses:{resourceProduction:{header:"Production de ressources"},lifeformResearchCostTime:{header:"Coût et temps de recherche des formes de vie"},wreckfield:{header:"Champ de débris"}},topFinds:{topFinds:"Meilleures découvertes",worstFinds:"Pires découvertes",size:"Taille",amount:"Quantité",date:"Date",artifacts:"Artéfacts",experience:"Expérience"}}},pa={title:"Sélectionner le compte à afficher dans un nouvel onglet"},fa={faqHelp:{header:"Aide",faq:{header:"F.A.Q.",fleetLostOnExpedition:{header:"Pourquoi les vaisseaux que j'ai perdus en expédition ne sont-ils pas suivis?",text:"Le suivi des vaisseaux perdus en expédition nécessite un suivi permanent de la flotte, ce qui n'est pas réalisable."},syncBetweenDevices:{header:"Pourquoi n'y a-t-il pas de synchronisation de mes données entre plusieurs appareils?",text:"Le tracker enregistre beaucoup plus de données que ce qui peut être synchronisé avec votre compte utilisateur (Google, Microsoft, etc.). Une synchronisation avec un serveur externe pourrait être possible à l'avenir."},productionInResourceBalance:{header:"Pourquoi la balance des ressources n'inclut-elle pas ma production de ressources?",text:"Votre production de ressources dépend de divers facteurs, et leurs changements devraient être suivis en permanence. Bien que cela soit possible, une mise en œuvre de cette fonctionnalité serait beaucoup plus complexe qu'elle ne serait utile pour ses utilisateurs."},whatAreAverages:{header:"Que signifie la mention '⌀ par jour'?",text:"Il s'agit de la moyenne sur tous les jours avec au moins un événement suivi."}},tips:{header:"Conseils",rightClickDefaultRoute:"Vous pouvez faire un clic droit sur un onglet principal du côté gauche ou sur l'un de ses sous-menu pour définir comme par défaut.",numbersKeyboardNavigation:"Vous pouvez ouvrir les pages des onglets avec un chiffre en appuyant sur la touche de chiffre respective de votre clavier.",amortizationTable:{part1:"Vous voulez savoir quoi construire ou rechercher ensuite pour améliorer votre production de ressources de la manière la plus efficace? Essayez le ",name:"calculateur d'amortissement interactif",part2:"."},inlineSettings:"Vous pouvez changer les paramètres liés immédiatement en appuyant sur la petite icône d'engrenage sur le côté droit.",switchAccountHtml:"Vous pouvez ouvrir l'interface OGame Tracker pour un autre compte suivi en cliquant sur l'icône <span class=\"mdi mdi-account-multiple\"></span> et en sélectionnant le compte."},messageDiscord:{part1:"Besoin d'aide ? avez-vous trouvé un bug ou avez-vous une demande de fonctionnalité ? Rejoignez le ",discordServer:"serveur Discord",part2:" et écrivez un message dans le canal correspondant."}},info:{header:"Info",table:{currentAccount:{header:"Informations sur le compte sélectionné",numberOfTrackedExpeditions:"Nombre d'expéditions suivies",numberOfTrackedCombatReports:"Nombre de rapports de combat suivis",numberOfTrackedDebrisFieldReports:"Nombre de rapports de récolte CDR suivis",numberOfTrackedLifeformDiscoveries:"Nombre de missions de découverte de formes de vie suivies",lastUpdateServerSettings:"Dernière mise à jour des paramètres du serveur",numberOfUniverseHistoryEntries:"Nombre d'entrées dans l'historique de l'univers"},global:{header:"Informations sur l'ensemble des données dans OGame Tracker",numberOfTrackedAccounts:"Nombre de comptes suivis",estimatedSize:"Taille de toutes les données enregistrées sur le disque"}}}},ha={header:"Historique de l`'univers",settings:{messages:{notEnabledHtml:"\n                <b>Le suivi du classement de l'univers n'est pas activé.</b><br/>\n                Activer cette fonctionnalité permettra de suivre les changements de classement pour les joueurs et les alliances.\n            ",historyTrackingNotEnabledHtml:"\n                <b>Le suivi de l'historique de l'univers n'est pas activé.</b><br/>\n                Activer cette fonctionnalité permettra de suivre également tous les changements pour les joueurs et les alliances.<br/>\n                Cela inclut les changements de nom et de tag des joueurs et des alliances, les changements de membres d'alliance,\n                les changements d'état des joueurs et les changements concernant les planètes et les lunes, y compris les noms, les coordonnées,\n                et les planètes et lunes abandonnées/détruites.<br />\n                <i>Cela peut générer beaucoup de données !\n                Vous pouvez désactiver cette fonctionnalité <a href=\"#/settings/universe-history\">dans le menu des paramètres</a>\n                à nouveau.</i>\n            ",trackingTimesHtml:"\n                Au moins une fois par jour, les classements et les données de l'univers (si activés) seront mis à jour.<br/>\n                Vous pouvez définir les heures de mise à jour ci-dessous.\n                Si une mise à jour est manquée, elle sera effectuée dès que possible par la suite.\n            "},enableHighscoreTrackingOnly:"Activer uniquement le suivi du classement de l'univers",enableHistoryTracking:"Activer le suivi de l'historique de l'univers"},tabs:{players:"Joueurs",alliances:"Alliances",subtabs:{highscore:"Classement",history:"Historique"}},playerSelection:{header:"Sélection du joueur",search:"Rechercher un joueur"},allianceSelection:{header:"Sélection de l'alliance",search:"Rechercher une alliance"},highscoreTabs:{total:"Total",economy:"Économie",research:"Recherche",military:"Militaire",militaryBuilt:"Militaire construit",militaryDestroyed:"Militaire détruit",militaryLost:"Militaire perdu",honor:"Honneur",numberOfShips:"Nombre de vaisseaux",lifeform:"Forme de vie",lifeformDiscoveries:"Découvertes des formes de vie",lifeformEconomy:"Économie des formes de vie",lifeformTechnology:"Technologie des formes de vie"},historyTabs:{status:"Statut",nicknames:"Alias",alliances:"Alliances",planetAndMoons:"Planètes et Lunes",tags:"Balises",names:"Noms",members:"Membres"},noAlliance:"pas d'alliance",today:"aujourd'hui",name:"Nom",tag:"Balise",members:"Membres",alliance:"Alliance",from:"De",until:"Jusqu'à",status:{active:"Actif",vacation:"Mode vacances",inactive:"Inactif (>= 7 jours)",inactiveLong:"Inactif (>= 28 jours)",banned:"Banni",outlaw:"Hors-la-loi",deleted:"Supprimé",admin:"Admin"},loadingTakingLong:"Le chargement des données prend plus de temps que prévu. La base de données est probablement en train de se mettre à jour, veuillez patienter ou réessayer plus tard."},ba={combatTracking:{title:e=>"1"==e?`${e} nouveau rapport de combat suivi`:`${e} nouveaux rapports de combat suivis`,message:e=>"1"==e?`${e} nouveau rapport de combat a été suivi.`:`${e} nouveaux rapports de combat ont été suivis.`},debrisFieldReportTracking:{title:e=>"1"==e?`${e} nouveau rapport d'exploitation de champ de débris suivi`:`${e} nouveaux rapports d'exploitation de champ de débris suivis`,message:e=>"1"==e?`${e} nouveau rapport d'exploitation de champ de débris a été suivi.`:`${e} nouveaux rapports d'exploitation de champ de débris ont été suivis.`},expeditionTracking:{fleetLost:{title:e=>"1"==e?`${e} flotte perdue`:`${e} flottes perdues`,message:e=>"1"==e?`${e} flotte n'est pas revenue de son expédition.`:`${e} flottes ne sont pas revenues de leurs expéditions.`},result:{title:e=>"1"==e?`${e} nouvelle expédition suivie`:`${e} nouvelles expéditions suivies`,summary:"Résumé des découvertes",events:"Événements d'expédition"}},lifeformDiscoveryTracking:{title:e=>"1"==e?`${e} nouvelle mission de découverte de forme de vie suivie`:`${e} nouvelles missions de découverte de forme de vie suivies`,message:e=>"1"==e?`${e} nouvelle mission de découverte de forme de vie a été suivie.`:`${e} nouvelles missions de découverte de forme de vie ont été suivies.`},messageTrackingError:{title:e=>"1"==e?`Échec du traitement de ${e} message`:`Échec du traitement de ${e} messages`,message:e=>"1"==e?`${e} message a provoqué une erreur et n'a pas été suivi. Le message responsable a été marqué en rouge. Veuillez contacter le développeur.`:`${e} messages ont provoqué une erreur et n'ont pas été suivis. Les messages responsables ont été marqués en rouge. Veuillez contacter le développeur.`}},ya={signatureGenerator:{header:"Générateur de signature",averagePerHour:"⌀/heure",totalPerHour:"par heure",totalPerDay:"par jour",totalPerWeek:"par semaine",production:"Production",expeditions:"Expéditions",lifeformDiscoveries:"Découvertes FdV",combats:"Combats",debrisFieldReports:"Rapports de champs de débris"},scrapyardMerchant:{header:"Ferrailleur",percentage:"% au ferrailleur",count:"Compte"}},va={header:"Export Excel",chooseBelowMessage:"Choisissez ci-dessous les données que vous souhaitez inclure dans l'exportation :",groups:{expeditions:{header:"Expéditions",rawData:"Données brutes (chaque expédition suivie)",dailyOverview:"Vue d'ensemble des résultats par jour",dailyDepletion:"Vue d'ensemble de l'épuisement du système par jour",dailyResources:"Découvertes de ressources par jour",dailyResourceSizes:"Tailles des découvertes de ressources par jour",dailyShips:"Découvertes de vaisseaux par jour",dailyShipSizes:"Tailles des découvertes de vaisseaux par jour",dailyDarkMatter:"Découvertes d'Antimatière par jour",dailyDarkMatterSizes:"Tailles des découvertes de d'Antimatière par jour"},combats:{header:"Combats",rawData:"Données brutes (chaque résultat de combat suivi)",dailyResults:"Résultats de combat par jour",dailyLoot:"Bilan du butin par jour",dailyLostShips:"Vaisseaux perdus par jour"},debrisFields:{header:"Champs de débris",rawData:"Données brutes (chaque rapport de récolte suivi)",dailyResources:"Ressources récoltées par jour"},lifeformDiscoveries:{header:"Missions de découverte",rawData:"Données brutes (chaque mission de découverte suivie)",dailyExperience:"Expérience gagnée par jour"}},generateButton:"Générer l'export Excel",expeditions:{prefix:"EX",sheets:{rawData:"Données brutes",dailyDepletion:"Épuisement quotidien du système",dailyResults:"Résultats quotidiens",dailyResources:"Ressources quotidiennes",dailyResourcesSize:"Ressources quotidiennes (Taille)",dailyShips:"Vaisseaux quotidiens",dailyShipsSize:"Vaisseaux quotidiens (Taille)",dailyDarkMatter:"Antimatière quotidienne",dailyDarkMatterSize:"Antimatière quotidienne (Taille)"},eventType:"Type",eventSize:"Taille",item:"Objet"},combats:{prefix:"CR",sheets:{rawData:"Données brutes",dailyResults:"Résultats quotidiens",dailyLoot:"Butin quotidien",dailyLostShips:"Vaisseaux perdus quotidiens"},result:"Résultat du combat",coordinates:"Coordonnées",galaxy:"Galaxie",system:"Système",position:"Position",targetType:"Type de cible",combatType:"Type de combat",expeditionCombatOpponent:"Opposant de combat en expédition",loot:"Butin",lostShips:"Vaisseaux perdus",debrisField:"Champ de débris",moon:"Lune",planet:"Planète",expeditionCombat:"Combat en expédition",playerCombat:"Combat de joueur",pirates:"Pirates",aliens:"Aliens",againstPlayers:"Contre les joueurs",onExpeditions:"En expéditions"},debrisFields:{prefix:"DF",sheets:{rawData:"Données brutes",dailyResources:"Ressources quotidiennes"}},lifeformDiscoveries:{prefix:"LF",sheets:{rawData:"Données brutes",dailyExperience:"Expérience quotidienne"},result:"Découverte",experience:"Expérience",lifeform:"Forme de vie",artifacts:"Artéfacts",artifactsSize:"Taille"}},_a={collector:"Collecteur",discoverer:"Explorateur",general:"Général",none:"Aucune"},wa={ogame:{buildings:Qe,lifeforms:Xe,lifeformBuildings:ea,lifeformTechnologies:aa,premium:ra,resources:oa,research:Je,ships:Ze,defenses:Ye},extension:{common:ia,settings:ta,resources:oa,expeditions:la,combats:da,donate:ca,debrisFields:ua,resourceBalance:ma,empire:ga,switchAccounts:pa,about:fa,universeHistory:ha,notifications:ba,tools:ya,excelExport:va,playerClasses:_a}},Sa={de:W,en:we,"pt-pt":We,fr:wa},ka=Sa;class xa{#e;#a={};constructor(e,a){this.#e=e,this.#r(a)}#r(e){const a=Object.keys(n.I);a.forEach((a=>{this.#t(this,e[a]??{},a,"")}))}#t(e,a,r,t){Object.keys(a).forEach((s=>{const o=a[s],i=`$${s}`,n=e[i]??={},l=""==t?"":`${t}.`,d=`${l}${s}`;if(o instanceof Object&&"object"===typeof o&&Object.getPrototypeOf(o)===Object.prototype)this.#t(n,o,r,d),Object.getOwnPropertyNames(e).includes(s)||Object.defineProperty(e,s,{get:()=>{this.#e.throwOnDisabled();const a=e;return a[i]}});else{n[r]=o;const a=this.#a[r]??={};a[d]=o,Object.getOwnPropertyNames(e).includes(s)||Object.defineProperty(e,s,{get:()=>(this.#e.throwOnDisabled(),this.#s(d))})}}))}#s(e){let a=this.#a[this.#e.locale]?.[e];if(null!=a)return a;let r=this.#e.locale;for(const t of this.#e.fallbackLocales){if(a=this.#a[t]?.[e],null!=a)return a;r=t}(0,s.A)(`$i18n: did not find key '${e}' for any locale`)}}let Ta=class extends i.w3{enabled=!0;locale=n.I.de;localeRegion=null;_proxy=null;fallbackLocales=[n.I.en];$t=null;dateTimeFormats=null;init(e){return this._proxy=new xa(this,e.messages),this.$t=this._proxy,this.dateTimeFormats=new xa(this,e.dateTimeFormats),this.locale=e.locale,this.localeRegion=e.localeRegion??null,this.fallbackLocales=e.fallbackLocales,this}throwOnDisabled(){if(!this.enabled)throw new Error("I18n object is disabled")}get fullLocaleIdentifier(){return null==this.localeRegion?this.locale:`${this.locale}-${this.localeRegion}`}$d(e,a){this.throwOnDisabled();const r=this.dateTimeFormats[a]??(0,s.A)(`unknown datetime format key "${a}"`);return"string"===typeof r?(0,o.Z)(e,r):new Intl.DateTimeFormat(this.fullLocaleIdentifier,r).format(e)}$n(e,a){this.throwOnDisabled();const r=new Intl.NumberFormat(this.fullLocaleIdentifier,a);return r.format(e)}$timespan(e){let a=BigInt(Math.ceil(e));const r=a%60n;a=(a-r)/60n;const t=a%60n;a=(a-t)/60n;const s=a%24n;a=(a-s)/24n;const o=`${s.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}`;if(0n==a)return o;const i=a%7n;a=(a-i)/7n;const n=`${i}d `+o;if(0n==a)return n;const l=a;return`${this.$n(Number(l))}w `+n}};Ta=(0,t.gn)([(0,i.wA)({})],Ta);const Ea=(new Ta).init({messages:ka,dateTimeFormats:{de:{date:{year:"numeric",month:"2-digit",day:"2-digit"},datetime:{year:"numeric",month:"2-digit",day:"2-digit",hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"},time:{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"},time_hm:{hour12:!1,hour:"2-digit",minute:"2-digit"}},en:{date:{year:"numeric",month:"2-digit",day:"2-digit"},datetime:{year:"numeric",month:"2-digit",day:"2-digit",hour12:!0,hour:"2-digit",minute:"2-digit",second:"2-digit"},time:{hour12:!0,hour:"2-digit",minute:"2-digit",second:"2-digit"},time_hm:{hour12:!0,hour:"2-digit",minute:"2-digit"}}},locale:n.I.en,fallbackLocales:[n.I.en,n.I.de]})},1936:(e,a,r)=>{var t;r.d(a,{C:()=>t}),function(e){e["StayAlive"]="internal/stay-alive",e["DropDatabaseConnections"]="internal/drop-db-connections",e["Notification"]="notification",e["TrackExpedition"]="expedition/track-expedition",e["Expedition"]="expedition/single",e["NewExpedition"]="expedition/new",e["DebrisFieldReport"]="debris-fields/single",e["NewDebrisFieldReport"]="debris-fields/new",e["TrackDebrisFieldReport"]="debris-fields/track",e["TrackManualDebrisFieldReport"]="debris-fields/track-manually",e["CombatReport"]="combat-reports/single",e["NewCombatReport"]="combat-reports/new",e["TrackCombatReport"]="combat-reports/track",e["RequestSingleCombatReport"]="combat-reports/request-single-report",e["CombatReportUnknown"]="combat-reports/is-unknown",e["WillNotBeTracked"]="message-tracking/no-tracking",e["TrackingError"]="message-tracking/error",e["UpdatePlanetData"]="empire/update-planet-data",e["UpdatePlanetActiveItems"]="empire/update-active-items",e["UpdatePlanetBuildingLevels"]="empire/update-buildings-levels",e["UpdateResearchLevels"]="empire/update-research-levels",e["UpdatePlanetShipCounts"]="empire/update-planet-ships",e["UpdatePlanetDefenseCounts"]="empire/update-planet-defenses",e["UpdatePlanetMissileCounts"]="empire/update-planet-missiles",e["UpdateActiveOfficers"]="empire/update-active-officers",e["UpdatePlayerClass"]="empire/update-player-class",e["UpdateAllianceClass"]="empire/update-alliance-class",e["UpdatePlanetProductionSettings"]="empire/update-planet-production-settings",e["UpdateFleets"]="empire/fleets",e["NotifyEmpireDataUpdate"]="empire/notify-update",e["RequestSettings"]="settings/request-data",e["Settings"]="settings/data",e["NotifySettingsUpdate"]="settings/notify-update",e["NotifyUniverseHistoryUpdate"]="universe-history/notify-update",e["NotifyServerSettingsUpdate"]="server-settings/notify-update",e["ForceUpdateServerSettings"]="server-settings/force-update",e["UpdatePlayerName"]="accounts/update-player-name",e["UpdateUniverseName"]="universes/update-universe-name",e["NotifyUniverseSpecificSettingsUpdate"]="universe-specific-settings/notify-update",e["UpdateLifeformExperience"]="lifeforms/update-lifeform-experience",e["UpdateSelectedLifeform"]="lifeforms/update-selected-lifeform",e["UpdatePlanetActiveLifeformBuildingLevels"]="lifeforms/update-active-building-levels",e["UpdatePlanetLifeformBuildingLevels"]="lifeforms/update-all-building-levels",e["UpdatePlanetActiveLifeformTechnologyLevels"]="lifeforms/update-active-technology-levels",e["UpdatePlanetLifeformTechnologyLevels"]="lifeforms/update-all-technology-levels",e["TrackLifeformDiscovery"]="lifeforms/track-discovery",e["LifeformDiscovery"]="lifeforms/discovery",e["NewLifeformDiscovery"]="lifeforms/new-discovery"}(t||(t={}))},3347:(e,a,r)=>{var t;r.d(a,{a:()=>t,F:()=>s}),function(e){e["won"]="won",e["lost"]="lost",e["draw"]="draw"}(t||(t={}));const s=[t.won,t.draw,t.lost]},1745:(e,a,r)=>{var t;r.d(a,{q:()=>t,R:()=>s}),function(e){e["none"]="none",e["low"]="low",e["medium"]="medium",e["high"]="high"}(t||(t={}));const s=[t.none,t.low,t.medium,t.high]},776:(e,a,r)=>{var t;r.d(a,{Mm:()=>t,Fg:()=>s}),function(e){e["small"]="small",e["medium"]="medium",e["large"]="large"}(t||(t={}));const s=[t.small,t.medium,t.large]},5424:(e,a,r)=>{var t;r.d(a,{r:()=>t,A:()=>s}),function(e){e["nothing"]="nothing",e["resources"]="resources",e["fleet"]="fleet",e["delay"]="delay",e["early"]="early",e["darkMatter"]="darkMatter",e["pirates"]="pirates",e["aliens"]="aliens",e["combat"]="combat",e["item"]="item",e["trader"]="trader",e["lostFleet"]="lostFleet"}(t||(t={}));const s=[t.nothing,t.resources,t.fleet,t.delay,t.early,t.darkMatter,t.pirates,t.aliens,t.combat,t.item,t.trader,t.lostFleet]},612:(e,a,r)=>{var t;r.d(a,{k:()=>t,b:()=>s}),function(e){e["storageFull"]="full",e["small"]="normal",e["medium"]="big",e["large"]="huge"}(t||(t={}));const s=[t.small,t.medium,t.large,t.storageFull]},6105:(e,a,r)=>{var t;r.d(a,{y:()=>t,I:()=>s}),function(e){e["nothing"]="nothing",e["lostShip"]="lostShip",e["newLifeformFound"]="newLifeformFound",e["knownLifeformFound"]="knownLifeformFound",e["artifacts"]="artifacts"}(t||(t={}));const s=[t.nothing,t.lostShip,t.newLifeformFound,t.knownLifeformFound,t.artifacts]},4296:(e,a,r)=>{r.d(a,{N:()=>t});class t{}},6864:(e,a,r)=>{var t;r.d(a,{A:()=>t}),function(e){e[e["metalMine"]=1]="metalMine",e[e["crystalMine"]=2]="crystalMine",e[e["deuteriumSynthesizer"]=3]="deuteriumSynthesizer",e[e["metalStorage"]=22]="metalStorage",e[e["crystalStorage"]=23]="crystalStorage",e[e["deuteriumTank"]=24]="deuteriumTank",e[e["solarPlant"]=4]="solarPlant",e[e["fusionReactor"]=12]="fusionReactor",e[e["roboticsFactory"]=14]="roboticsFactory",e[e["shipyard"]=21]="shipyard",e[e["researchLab"]=31]="researchLab",e[e["allianceDepot"]=34]="allianceDepot",e[e["missileSilo"]=44]="missileSilo",e[e["naniteFactory"]=15]="naniteFactory",e[e["terraformer"]=33]="terraformer",e[e["spaceDock"]=36]="spaceDock",e[e["lunarBase"]=41]="lunarBase",e[e["sensorPhalanx"]=42]="sensorPhalanx",e[e["jumpGate"]=43]="jumpGate"}(t||(t={}))},1913:(e,a,r)=>{r.d(a,{a7:()=>L,xo:()=>U,RP:()=>G,Ne:()=>$,qi:()=>H,uP:()=>q});var t=r(6864),s=r(4296);class o extends s.N{get type(){return t.A.allianceDepot}getCost(e){return{metal:1e4*2**e,crystal:2e4*2**e,deuterium:0,energy:0}}}const i=new o;var n=r(6682);class l extends s.N{}class d extends l{get type(){return t.A.crystalStorage}getStorage(e){return 5e3*Math.floor(2.5*Math.E**(20*e/33))}getDenPercentage(e){return Math.min(.1,.01*e)}getCost(e){return{metal:500*2**e,crystal:250*2**e,deuterium:0,energy:0}}}const c=new d;var u=r(3987);class m extends l{get type(){return t.A.deuteriumTank}getStorage(e){return 5e3*Math.floor(2.5*Math.E**(20*e/33))}getDenPercentage(e){return Math.min(.1,.01*e)}getCost(e){return{metal:500*2**e,crystal:500*2**e,deuterium:0,energy:0}}}const g=new m;var p=r(7069);class f extends s.N{get type(){return t.A.jumpGate}getCost(e){return{metal:1e6*2**e,crystal:2e6*2**e,deuterium:1e6*2**e,energy:0}}}const h=new f;class b extends s.N{get type(){return t.A.lunarBase}getCost(e){return{metal:1e4*2**e,crystal:2e4*2**e,deuterium:1e4*2**e,energy:0}}}const y=new b;var v=r(6532);class _ extends l{get type(){return t.A.metalStorage}getStorage(e){return 5e3*Math.floor(2.5*Math.E**(20*e/33))}getDenPercentage(e){return Math.min(.1,.01*e)}getCost(e){return{metal:500*2**e,crystal:0,deuterium:0,energy:0}}}const w=new _;class S extends s.N{get type(){return t.A.missileSilo}getCost(e){return{metal:1e4*2**e,crystal:1e4*2**e,deuterium:500*2**e,energy:0}}}const k=new S;class x extends s.N{get type(){return t.A.naniteFactory}getCost(e){return{metal:5e5*2**e,crystal:25e4*2**e,deuterium:5e4*2**e,energy:0}}}const T=new x;class E extends s.N{get type(){return t.A.researchLab}getCost(e){return{metal:100*2**e,crystal:200*2**e,deuterium:100*2**e,energy:0}}}const B=new E;class C extends s.N{get type(){return t.A.roboticsFactory}getCost(e){return{metal:200*2**e,crystal:60*2**e,deuterium:100*2**e,energy:0}}}const A=new C;var D=r(130);class P extends s.N{get type(){return t.A.shipyard}getCost(e){return{metal:200*2**e,crystal:100*2**e,deuterium:50*2**e,energy:0}}}const I=new P;var N=r(4170);class F extends N.H{get type(){return t.A.solarPlant}getProduction(e,a){throw new Error("not implemented")}getConsumption(e,a){return{metal:0,crystal:0,deuterium:0,energy:0}}getCost(e){return{metal:Math.floor(50*1.5**e),crystal:Math.floor(20*1.5**e),deuterium:0,energy:0}}}const z=new F;var M=r(4431);class R extends s.N{get type(){return t.A.terraformer}getCost(e){return{metal:0,crystal:25e3*2**e,deuterium:5e4*2**e,energy:500*2**e}}}const O=new R,L=[t.A.metalMine,t.A.crystalMine,t.A.deuteriumSynthesizer,t.A.metalStorage,t.A.crystalStorage,t.A.deuteriumTank,t.A.solarPlant,t.A.fusionReactor,t.A.roboticsFactory,t.A.shipyard,t.A.researchLab,t.A.allianceDepot,t.A.missileSilo,t.A.naniteFactory,t.A.terraformer,t.A.spaceDock,t.A.lunarBase,t.A.sensorPhalanx,t.A.jumpGate],$=[t.A.metalMine,t.A.crystalMine,t.A.deuteriumSynthesizer,t.A.metalStorage,t.A.crystalStorage,t.A.deuteriumTank,t.A.solarPlant,t.A.fusionReactor,t.A.roboticsFactory,t.A.shipyard,t.A.researchLab,t.A.allianceDepot,t.A.missileSilo,t.A.naniteFactory,t.A.terraformer,t.A.spaceDock],q=[t.A.metalMine,t.A.crystalMine,t.A.deuteriumSynthesizer,t.A.metalStorage,t.A.crystalStorage,t.A.deuteriumTank,t.A.solarPlant,t.A.fusionReactor],H=[t.A.roboticsFactory,t.A.shipyard,t.A.researchLab,t.A.allianceDepot,t.A.missileSilo,t.A.naniteFactory,t.A.terraformer,t.A.spaceDock],G=(t.A.metalStorage,t.A.crystalStorage,t.A.deuteriumTank,t.A.roboticsFactory,t.A.shipyard,t.A.lunarBase,t.A.sensorPhalanx,t.A.jumpGate,[t.A.metalStorage,t.A.crystalStorage,t.A.deuteriumTank,t.A.roboticsFactory,t.A.shipyard,t.A.lunarBase,t.A.sensorPhalanx,t.A.jumpGate]),U={[t.A.metalMine]:v.H,[t.A.crystalMine]:n.g,[t.A.deuteriumSynthesizer]:u.w,[t.A.metalStorage]:w,[t.A.crystalStorage]:c,[t.A.deuteriumTank]:g,[t.A.solarPlant]:z,[t.A.fusionReactor]:p.s,[t.A.roboticsFactory]:A,[t.A.shipyard]:I,[t.A.researchLab]:B,[t.A.allianceDepot]:i,[t.A.missileSilo]:k,[t.A.naniteFactory]:T,[t.A.terraformer]:O,[t.A.spaceDock]:M.j,[t.A.lunarBase]:y,[t.A.sensorPhalanx]:D.T,[t.A.jumpGate]:h}},6682:(e,a,r)=>{r.d(a,{g:()=>i});var t=r(6864),s=r(4170);class o extends s.H{get type(){return t.A.crystalMine}getProduction(e,a){const r=this.getProductionBoost(a.planet.position,a.serverSettings),t=Math.trunc(20*a.serverSettings.economySpeed*(1+r)*e*1.1**e*a.productionSettings.crystalMine/100);return t}getProductionBoost(e,a){switch(e){case 1:return a.crystalBoost.pos1;case 2:return a.crystalBoost.pos2;case 3:return a.crystalBoost.pos3}return a.crystalBoost.default}getConsumption(e,a){return{metal:0,crystal:0,deuterium:0,energy:Math.ceil(10*e*1.1**e)}}getCost(e){return{metal:Math.floor(30*1.6**e),crystal:Math.floor(15*1.6**e),deuterium:0,energy:0}}}const i=new o},3987:(e,a,r)=>{r.d(a,{w:()=>i});var t=r(6864),s=r(4170);class o extends s.H{get type(){return t.A.deuteriumSynthesizer}getProduction(e,a){const r=Math.trunc(10*e*1.1**e*a.serverSettings.economySpeed*(1.44-.004*a.planet.temperature)*a.productionSettings.deuteriumSynthesizer/100);return r}getConsumption(e,a){return{metal:0,crystal:0,deuterium:0,energy:Math.ceil(20*e*1.1**e)}}getCost(e){return{metal:Math.floor(150*1.5**e),crystal:Math.floor(50*1.5**e),deuterium:0,energy:0}}}const i=new o},7069:(e,a,r)=>{r.d(a,{s:()=>i});var t=r(6864),s=r(4170);class o extends s.H{get type(){return t.A.fusionReactor}getProduction(e,a){throw new Error("not implemented")}getConsumption(e,a){return{metal:0,crystal:0,deuterium:Math.trunc(10*e*1.1**e*a.productionSettings.fusionReactor/100*a.serverSettings.economySpeed),energy:0}}getCost(e){return{metal:Math.floor(500*1.8**e),crystal:Math.floor(200*1.8**e),deuterium:Math.floor(100*1.8**e),energy:0}}}const i=new o},6532:(e,a,r)=>{r.d(a,{H:()=>i});var t=r(6864),s=r(4170);class o extends s.H{get type(){return t.A.metalMine}getProduction(e,a){const r=this.getProductionBoost(a.planet.position),t=30*a.serverSettings.economySpeed*(1+r),s=Math.trunc(t*e*1.1**e*a.productionSettings.metalMine/100);return s}getProductionBoost(e){switch(e){case 8:return.35;case 7:case 9:return.23;case 6:case 10:return.17}return 0}getConsumption(e,a){return{metal:0,crystal:0,deuterium:0,energy:Math.ceil(10*e*1.1**e)}}getCost(e){return{metal:Math.floor(40*1.5**e),crystal:Math.floor(10*1.5**e),deuterium:0,energy:0}}}const i=new o},4170:(e,a,r)=>{r.d(a,{H:()=>s});var t=r(4296);class s extends t.N{}},130:(e,a,r)=>{r.d(a,{T:()=>i});var t=r(4296),s=r(6864);class o extends t.N{get type(){return s.A.sensorPhalanx}getCost(e){return{metal:1e4*2**e,crystal:2e4*2**e,deuterium:1e4*2**e,energy:0}}}const i=new o},4431:(e,a,r)=>{r.d(a,{j:()=>i});var t=r(4296),s=r(6864);class o extends t.N{get type(){return s.A.spaceDock}getCost(e){return{metal:40*4**e,crystal:0,deuterium:10*5**e,energy:10*5**e}}getWreckfield(e,a){const r=1-a;return r*(.01*Math.round(45*e**.08))}}const i=new o},9867:(e,a,r)=>{var t;r.d(a,{Ck:()=>t,ch:()=>s,xA:()=>o}),function(e){e["trader"]="trader",e["researcher"]="researcher",e["warrior"]="warrior",e["none"]="none"}(t||(t={}));const s=[t.none,t.trader,t.researcher,t.warrior],o=[t.trader,t.researcher,t.warrior]},602:(e,a,r)=>{var t;r.d(a,{D0:()=>t,I_:()=>s,xU:()=>o}),function(e){e["collector"]="collector",e["discoverer"]="discoverer",e["general"]="general",e["none"]="none"}(t||(t={}));const s=[t.collector,t.discoverer,t.general,t.none],o=[t.collector,t.discoverer,t.general]},2382:(e,a,r)=>{var t;r.d(a,{r:()=>t}),function(e){e[e["rocketLauncher"]=401]="rocketLauncher",e[e["lightLaser"]=402]="lightLaser",e[e["heavyLaser"]=403]="heavyLaser",e[e["gaussCannon"]=404]="gaussCannon",e[e["ionCannon"]=405]="ionCannon",e[e["plasmaTurret"]=406]="plasmaTurret",e[e["smallShieldDome"]=407]="smallShieldDome",e[e["largeShieldDome"]=408]="largeShieldDome"}(t||(t={}))},1628:(e,a,r)=>{r.d(a,{V:()=>S,Q:()=>w});var t=r(2382);class s{}class o extends s{get type(){return t.r.gaussCannon}get cost(){return{metal:2e4,crystal:15e3,deuterium:2e3,energy:0}}get baseHull(){return 35e3}get baseShield(){return 200}get baseDamage(){return 1100}}const i=new o;class n extends s{get type(){return t.r.heavyLaser}get cost(){return{metal:6e3,crystal:2e3,deuterium:0,energy:0}}get baseHull(){return 8e3}get baseShield(){return 100}get baseDamage(){return 250}}const l=new n;class d extends s{get type(){return t.r.ionCannon}get cost(){return{metal:5e3,crystal:3e3,deuterium:0,energy:0}}get baseHull(){return 8e3}get baseShield(){return 500}get baseDamage(){return 150}}const c=new d;class u extends s{get type(){return t.r.largeShieldDome}get cost(){return{metal:5e4,crystal:5e4,deuterium:0,energy:0}}get baseHull(){return 1e5}get baseShield(){return 1e4}get baseDamage(){return 1}}const m=new u;class g extends s{get type(){return t.r.lightLaser}get cost(){return{metal:1500,crystal:500,deuterium:0,energy:0}}get baseHull(){return 2e3}get baseShield(){return 25}get baseDamage(){return 100}}const p=new g;class f extends s{get type(){return t.r.plasmaTurret}get cost(){return{metal:5e4,crystal:5e4,deuterium:3e4,energy:0}}get baseHull(){return 1e5}get baseShield(){return 300}get baseDamage(){return 3e3}}const h=new f;class b extends s{get type(){return t.r.rocketLauncher}get cost(){return{metal:2e3,crystal:0,deuterium:0,energy:0}}get baseHull(){return 2e3}get baseShield(){return 20}get baseDamage(){return 80}}const y=new b;class v extends s{get type(){return t.r.smallShieldDome}get cost(){return{metal:1e4,crystal:1e4,deuterium:0,energy:0}}get baseHull(){return 2e4}get baseShield(){return 2e3}get baseDamage(){return 1}}const _=new v,w=[t.r.rocketLauncher,t.r.lightLaser,t.r.heavyLaser,t.r.gaussCannon,t.r.ionCannon,t.r.plasmaTurret,t.r.smallShieldDome,t.r.largeShieldDome],S={[t.r.rocketLauncher]:y,[t.r.lightLaser]:p,[t.r.heavyLaser]:l,[t.r.gaussCannon]:i,[t.r.ionCannon]:c,[t.r.plasmaTurret]:h,[t.r.smallShieldDome]:_,[t.r.largeShieldDome]:m}},1639:(e,a,r)=>{var t;r.d(a,{t:()=>t,x:()=>o}),function(e){e["discoverer"]="2dd05cc4c0e185fce2e712112dc44932027aee98",e["discoverer_pts"]="67d6041bc0206d1ec7ce667e51f9d7ba73314604",e["collector"]="9374c79a24b84c4331f0d26526ef6c2d33319a6e",e["collector_pts"]="a521c40c620a2dd22c1bb1e9db722c4c15e42eb1",e["general"]="77eff880829027daf23b755e14820a60c4c6fd93",e["general_pts"]="cf37caa096aac5127ec3fe67c2606075fcc652a8",e["researcher"]="1aa36213cb676fd5baad5edc2bee4fbe117a778b",e["researcher_pts"]="ae76f3f6ac159a7eca3bdf16e5f4a781cae8bf0d",e["trader"]="6c9fe5e35bdad0d4e3382eb6a5aeac6bc8263752",e["trader_pts"]="0acb69b437229c44f746ffd1567aa5f1c06a6812",e["warrior"]="9b48e257cbef6c5df0f03a47cead7f9abda3d437",e["warrior_pts"]="ec90e4b45e935bb0d9f423119699202330a9b7c9",e["metalBooster_bronze_1day"]="b956c46faa8e4e5d8775701c69dbfbf53309b279",e["metalBooster_bronze_7days"]="de922af379061263a56d7204d1c395cefcfb7d75",e["metalBooster_bronze_30days_pts"]="28c1928aedaee0199199a152668625f335c866b7",e["metalBooster_bronze_90days_pts"]="7b1d06e638ca2b48bf6ace43952d4dbcc96e7721",e["metalBooster_silver_7days"]="ba85cc2b8a5d986bbfba6954e2164ef71af95d4a",e["metalBooster_silver_30days"]="742743b3b0ae1f0b8a1e01921042810b58f12f39",e["metalBooster_silver_30days_pts"]="9afd5275ae381d4daef83583f0f612a7c2988648",e["metalBooster_silver_90days"]="6f44dcd2bd84875527abba69158b4e976c308bbc",e["metalBooster_silver_90days_pts"]="b95aa0276bd2fa216e6ab30e853492354bfe6832",e["metalBooster_gold_7days"]="05294270032e5dc968672425ab5611998c409166",e["metalBooster_gold_30days"]="6fecb993169fe918d9c63cd37a2e541cc067664e",e["metalBooster_gold_30days_pts"]="755d63372cfa033307a1e81f7712b81853548303",e["metalBooster_gold_90days"]="21c1a65ca6aecf54ffafb94c01d0c60d821b325d",e["metalBooster_gold_90days_pts"]="01027ac7604eebf2b6a85c549d0adbbe05c8c975",e["metalBooster_platinum_7days"]="a83cfdc15b8dba27c82962d57e50d8101d263cfb",e["metalBooster_platinum_7days_pts"]="535636f89de54042eea3ee4c0621d964c2681d38",e["metalBooster_platinum_30days"]="c690f492cffe5f9f2952337e8eed307a8a62d6cf",e["metalBooster_platinum_30days_pts"]="fd3779dac62d768d4fd43bf046be533f3e859e5f",e["metalBooster_platinum_90days"]="ca7f903a65467b70411e513b0920d66c417aa3a2",e["metalBooster_platinum_90days_pts"]="1e52950225663f217a03ae8784d288c69b97dc78",e["crystalBooster_bronze_1day"]="090a969b05d1b5dc458a6b1080da7ba08b84ec7f",e["crystalBooster_bronze_7days"]="3c9f85221807b8d593fa5276cdf7af9913c4a35d",e["crystalBooster_bronze_30days_pts"]="8596c58aa6b50a089c02ca63e68041f09a3d7edf",e["crystalBooster_bronze_90days_pts"]="bfc5bb33e1cc2cade4c3f175273d5fdde41b0497",e["crystalBooster_silver_7days"]="422db99aac4ec594d483d8ef7faadc5d40d6f7d3",e["crystalBooster_silver_30days"]="5b69663e3ba09a1fe77cf72c5094e246cfe954d6",e["crystalBooster_silver_30days_pts"]="f54a0350f8aa12a31f9318d5288def77e56887f3",e["crystalBooster_silver_90days"]="04d8afd5936976e32ce894b765ea8bd168aa07ef",e["crystalBooster_silver_90days_pts"]="140591975f2f157a85a6deec52189b0579318da8",e["crystalBooster_gold_7days"]="118d34e685b5d1472267696d1010a393a59aed03",e["crystalBooster_gold_30days"]="36fb611e71d42014f5ebd0aa5a52bc0c81a0c1cb",e["crystalBooster_gold_30days_pts"]="ec3ce378794621c2c2084bd4b90eaf49d0cb96dc",e["crystalBooster_gold_90days"]="d45f00e8b909f5293a83df4f369737ea7d69c684",e["crystalBooster_gold_90days_pts"]="102179c5fc0ef3e63e3b0dbf740c52b9950f0987",e["crystalBooster_platinum_7days"]="35d96e441c21ef112a84c618934d9d0f026998fd",e["crystalBooster_platinum_7days_pts"]="b61b41b78c9e0aac8c6465e25b7a2ffd5afe1d71",e["crystalBooster_platinum_30days"]="6bf45fcba8a6a68158273d04a924452eca75cf39",e["crystalBooster_platinum_30days_pts"]="2e516f35c95dcb1f33d83d3c27d298592a37c2a9",e["crystalBooster_platinum_90days"]="7c2edf40c5cd54ad11c6439398b83020c0a7a6be",e["crystalBooster_platinum_90days_pts"]="dd21a2e0d2c1d3cf00992c7b87f442b99efb8b4d",e["deuteriumBooster_bronze_1day"]="e254352ac599de4dd1f20f0719df0a070c623ca8",e["deuteriumBooster_bronze_7days"]="d9fa5f359e80ff4f4c97545d07c66dbadab1d1be",e["deuteriumBooster_bronze_30days_pts"]="f7732e16faa17a966eac832ba19fda9caafbb0e4",e["deuteriumBooster_bronze_90days_pts"]="6a78ed70d97259b706bcd72ec67e2223d37709c5",e["deuteriumBooster_silver_7days"]="e4b78acddfa6fd0234bcb814b676271898b0dbb3",e["deuteriumBooster_silver_30days"]="26416a3cdb94613844b1d3ca78b9057fd6ae9b15",e["deuteriumBooster_silver_30days_pts"]="1661b0b8ad6d797d095c67232aaa083dbe6353d8",e["deuteriumBooster_silver_90days"]="6f0952a919fd2ab9c009e9ccd83c1745f98f758f",e["deuteriumBooster_silver_90days_pts"]="6a98ca35f5656b658ceb32eca0a8ad0d5a393c4b",e["deuteriumBooster_gold_7days"]="5560a1580a0330e8aadf05cb5bfe6bc3200406e2",e["deuteriumBooster_gold_30days"]="300493ddc756869578cb2888a3a1bc0c3c66765f",e["deuteriumBooster_gold_30days_pts"]="7517786581be3b4c9678749953a9c884a37427a3",e["deuteriumBooster_gold_90days"]="dc5896bed3311434224d511fa7ced6fdbe41b4e8",e["deuteriumBooster_gold_90days_pts"]="5802414d360f8644df91c714f6a51db3f1e0d514",e["deuteriumBooster_platinum_7days"]="4b51d903560edd102467b110586000bd64fdb954",e["deuteriumBooster_platinum_7days_pts"]="d26172f991bf246f130c6307dc5e1bde605d1c69",e["deuteriumBooster_platinum_30days"]="620f779dbffa1011aded69b091239727910a3d03",e["deuteriumBooster_platinum_30days_pts"]="b5e93db6977303fb1a0ef4031485ba8712aafeef",e["deuteriumBooster_platinum_90days"]="831c3ea8d868eb3601536f4d5e768842988a1ba9",e["deuteriumBooster_platinum_90days_pts"]="fadda89b7ebfc9a99a5c90d3101a0271a07cbaa3",e["energyBooster_bronze_7days"]="3f6f381dc9b92822406731a942c028adf8dc978f",e["energyBooster_bronze_30days_pts"]="273042352aebf335c124587352c0a319762cef66",e["energyBooster_bronze_90days_pts"]="cdc9c463656e0dab8a31c7581ba53e62f40d2380",e["energyBooster_silver_7days"]="c2bad58fcec374d709099d11d0549e59ea7e233e",e["energyBooster_silver_7days_pts"]="2cd0536a26c328142a0741a7e0d7e1a19a4f5e07",e["energyBooster_silver_30days"]="bedd248aaf288c27e9351cfacfa6be03f1dbb898",e["energyBooster_silver_30days_pts"]="64ed3011f97a865988b3a38808b4c574f0605a62",e["energyBooster_silver_90days"]="e05aa5b9e3df5be3857b43da8403eafbf5ad3b96",e["energyBooster_silver_90days_pts"]="64ed3011f97a865988b3a38808b4c574f0605a62_",e["energyBooster_gold_7days"]="55b52cbfb148ec80cd4e5b0580f7bed01149d643",e["energyBooster_gold_7days_pts"]="0daf077d568dbb349143e9d3ab65c17164601848",e["energyBooster_gold_30days"]="4fa9a2273ee446284d5177fd9d60a22de01e932b",e["energyBooster_gold_30days_pts"]="aaff895aeaa6b4bbae3ecbee37f724203e483e39",e["energyBooster_gold_90days"]="5ad783dcfce3655ef97b36197425718a0dad6b66",e["energyBooster_gold_90days_pts"]="1ff60c9942b669d0c0bb65ec6b0c9c2fa3d96514",e["energyBooster_platinum_7days"]="77c36199102e074dca46f5f26ef57ce824d044dd",e["energyBooster_platinum_7days_pts"]="e840aeda091cb3a551c1fe7600341e963e59b263",e["energyBooster_platinum_30days"]="dfe86378f8c3d7f3ee0790ea64603bc44e83ca47",e["energyBooster_platinum_30days_pts"]="b11c45f808b37afbca4ba8ebb3312488d4c50038",e["energyBooster_platinum_90days"]="c39aa972a971e94b1d9b4d7a8f734b3d8be12534",e["energyBooster_platinum_90days_pts"]="82b87c785911aa7044fce0f5909149b12c719e94",e["moonFields_bronze"]="be67e009a5894f19bbf3b0c9d9b072d49040a2cc",e["moonFields_silver"]="c21ff33ba8f0a7eadb6b7d1135763366f0c4b8bf",e["moonFields_gold"]="05ee9654bd11a261f1ff0e5d0e49121b5e7e4401",e["moonFields_platinum"]="8a426241572b2fea57844acd99bc326fe40e35cf",e["moonShot_bronze"]="485a6d5624d9de836d3eb52b181b13423f795770",e["moonShot_silver"]="fd895a5c9fd978b9c5c7b65158099773ba0eccef",e["moonShot_gold"]="45d6660308689c65d97f3c27327b0b31f880ae75",e["planetFields_bronze"]="16768164989dffd819a373613b5e1a52e226a5b0",e["planetFields_silver"]="0e41524dc46225dca21c9119f2fb735fd7ea5cb3",e["planetFields_gold"]="04e58444d6d0beb57b3e998edc34c60f8318825a",e["planetFields_platinum"]="f3d9b82e10f2e969209c1a5ad7d22181c703bb36",e["resourcePackage_all"]="c1d0232604872f899ea15a9772baf76880f55c5f",e["resourcePackage_all_pts"]="fd0ee802989ba7c3753d1efda5851a31041fc003",e["resourcePackage_metal"]="859d82d316b83848f7365d21949b3e1e63c7841f",e["resourcePackage_metal_pts"]="e6b486224641ac3eb44c67001a2651acd2410e64",e["resourcePackage_crystal"]="bb2f6843226ef598f0b567b92c51b283de90aa48",e["resourcePackage_crystal_pts"]="945e09627b23165fc3f611c634b0041883c24783",e["resourcePackage_deuterium"]="cb72ed207dd871832a850ee29f1c1f83aa3f4f36",e["resourcePackage_deuterium_pts"]="4b62dc535efeef755bcc038714f470d3ed7beb01",e["kraken_bronze"]="40f6c78e11be01ad3389b7dccd6ab8efa9347f3c",e["kraken_silver"]="4a58d4978bbe24e3efb3b0248e21b3b4b1bfbd8a",e["kraken_gold"]="929d5e15709cc51a4500de4499e19763c879f7f7",e["kraken_platinum"]="f36042d76e6b8b33d931e1d4ae99f35265cd82d1",e["detroid_bronze"]="d3d541ecc23e4daa0c698e44c32f04afd2037d84",e["detroid_silver"]="27cbcd52f16693023cb966e5026d8a1efbbfc0f9",e["detroid_gold"]="0968999df2fe956aa4a07aea74921f860af7d97f",e["detroid_platinum"]="3347bcd4ee59f1d3fa03c4d18a25bca2da81de82",e["detroid_mechaShipyard_bronze_pts"]="50f666f32934372fab5fe0fdba70e028abdcd9f8",e["newtron_bronze"]="da4a2a1bb9afd410be07bc9736d87f1c8059e66d",e["newtron_silver"]="d26f4dab76fdc5296e3ebec11a1e1d2558c713ea",e["newtron_gold"]="8a4f9e8309e1078f7f5ced47d558d30ae15b4a1b",e["newtron_platinum"]="a1ba242ede5286b530cdf991796b3d1cae9e4f23",e["lifeformKraken_bronze"]="00b42f7113d81f98df865bbfa2280fe3a4465e89",e["lifeformKraken_bronze_pts"]="56c258e7c1f12a37773d9c95ad2e98dc3076aca6",e["lifeformKraken_silver"]="5f194777c5b69d5c2a3c68e9e04a4cae9c28bcf2",e["lifeformKraken_silver_pts"]="309bc42ce9e5d4587c0061ef425e9940dce9f713",e["lifeformKraken_gold"]="0ad06bba14dfd0b576f1daef729a60753e2263c7",e["lifeformKraken_gold_pts"]="3b470998cf557da90f473c00c0f1a06c641079e4",e["lifeformKraken_platinum"]="c19f0e09d862d93d7956beb3185d9ee929b5ef74",e["lifeformKraken_platinum_pts"]="8223a42e752958f15d6392630d776af061c53e1f",e["lifeformNewtron_bronze"]="ba3e6693f112986b7964c835bcac6ae201900e2f",e["lifeformNewtron_bronze_pts"]="dfb5ffa09e06d48304d46aaff8686dd1beec1d24",e["lifeformNewtron_silver"]="9879a36c42797a868416b13f07e033f664cabd70 ",e["lifeformNewtron_silver_pts"]="ff3e56f3f0c386c1698c56d912e47ab18b80bfa8",e["lifeformNewtron_gold"]="7fe4cdb098685f8af827ca460a56e00ef46f5f05 ",e["lifeformNewtron_gold_pts"]="2a0d57915e6904a910012362abe8b1ca315a24b9",e["lifeformNewtron_platinum"]="9cde936fabc5037617f8261955e7d3f2262eec69",e["lifeformNewtron_platinum_pts"]="f1545f4fc66dafbc04ad02cafc87cfb5f34706fa",e["expeditionslots_bronze_7days"]="e54ecc0416d6e96b4165f24238b03a1b32c1df47",e["expeditionslots_bronze_7days_pts"]="9fd56ce4767fa2029f10287852e49849369d416f",e["expeditionslots_bronze_30days"]="8c1f6c6849d1a5e4d9de6ae9bb1b861f6f7b5d4d",e["expeditionslots_bronze_30days_pts"]="c6cd9477ef5da95676b458fee86b2664ad139cb6",e["expeditionslots_bronze_90days"]="a5784c685c0e1e6111d9c18aeaf80af2e0777ab4",e["expeditionslots_bronze_90days_pts"]="4bf5b3d12b0451a6b82869e294db6976e22fd8e3",e["expeditionslots_silver_7days"]="b2bc9789df7c1ef5e058f72d61380b696dde54e8",e["expeditionslots_silver_7days_pts"]="28b3816c45e0ae15387edb1a98e0e9d8ea59cc2e",e["expeditionslots_silver_30days"]="31a504be1195149a3bef05b9cc6e3af185d24ef2",e["expeditionslots_silver_30days_pts"]="4aa6841a3d708194a2edc11b28c6a233a7132e4a",e["expeditionslots_silver_90days"]="4f6f941bbf2a8527b0424b3ad11014502d8f4fb8",e["expeditionslots_silver_90days_pts"]="c2e479e27521e6cda9435869be0261605b4b0328",e["expeditionslots_gold_7days"]="9336b9f29d36e3f69b0619c9523d8bec5e09ab8e",e["expeditionslots_gold_7days_pts"]="b3d814e10bfc51dfac2fc934128b0ca99186c5c4",e["expeditionslots_gold_30days"]="fd7d35e73d0e09e83e30812b738ef966ea9ef790",e["expeditionslots_gold_30days_pts"]="369b8b39d4660cf3621fd1c1d58f41a909b0a3bb",e["expeditionslots_gold_90days"]="540410439514ac09363c5c47cf47117a8b8ae79a",e["expeditionslots_gold_90days_pts"]="d9b56c689607d7f3fa118d698c74b78a2d3642ff",e["fleetSlots_bronze_7days"]="0684c6a5a42acbb3cd134913d421fc28dae6b90d",e["fleetSlots_bronze_7days_pts"]="1aa1eeeb99c989eb51e92bd05856cae440d187b4",e["fleetSlots_bronze_30days"]="94a28491b6fd85003f1cb151e88dde106f1d7596",e["fleetSlots_bronze_30days_pts"]="0bc1d1e39dbfd81577e0947b4a0993e2eec7e91e",e["fleetSlots_bronze_90days"]="bb47add58876240199a18ddacc2db07789be1934",e["fleetSlots_bronze_90days_pts"]="af71eaca75fcc8c2648537875fb645032cfd8295",e["fleetSlots_silver_7days"]="f8fd610825fb4a442e27e4e9add74f050e040e27",e["fleetSlots_silver_7days_pts"]="372371df5694ca9f90d53eb10f452b0799bf8c27",e["fleetSlots_silver_30days"]="c4e598a85805a7eb3ca70f9265cbd366fc4d2b0e",e["fleetSlots_silver_30days_pts"]="77e0ad52d1835837f88f7c650935d2f59b7221a4",e["fleetSlots_silver_90days"]="a693c5ce3f5676efaaf0781d94234bea4f599d2e",e["fleetSlots_silver_90days_pts"]="73fb544f61dfc0b7752c155b131dc3d9b7ca0ce7",e["fleetSlots_gold_7days"]="5a8000c372cd079292a92d35d4ddba3c0f348d3b",e["fleetSlots_gold_7days_pts"]="f5cb8d966286c86807814d6a3ba1c038eb22977d",e["fleetSlots_gold_30days"]="1808bf7639b81ac3ac87bcb7eb3bbba0a1874d0a",e["fleetSlots_gold_30days_pts"]="ad057230daf790982f729ca35d86bf1f46587be7",e["fleetSlots_gold_90days"]="1f7024c4f6493f0c589e1b00c76e6ced258c00e5",e["fleetSlots_gold_90days_pts"]="4f721c15a20a63c6fcca442afb5eed279175eba2",e["migrationItem"]="7eacfcee74660f30bb92a5874e8cccf2bb286ebd",e["migrationItem_pts"]="4e58cbb8ad63a3df85f6d1ea16161f1e672d3ee3",e["shortenTime_buildings"]="cb4fd53e61feced0d52cfc4c1ce383bad9c05f67",e["shortenTime_research"]="14c17d49462963f5e5b67efa1257622ce1b866ac",e["shortenTime_shipyard"]="75accaa0d1bc22b78d83b89cd437bdccd6a58887",e["shortenTime_lifeformResearch"]="bb8e4fa790c899b3a050b07729f3e536ce8a4de4",e["shortenTime_lifeformBuildings"]="ebcb7dd6a0a3ec38928109cb6e6866b11d60a0df",e["officer_geologist"]="78badde414b2cba7c0c37e3e11a5a42e8414c8ac",e["officer_commander"]="10662141326cc46ee30bc4dd05f581424050a768",e["officer_admiral"]="bbc7ee322189528ad5bc3a19e048c4ff582538b5",e["officer_technocrat"]="ddb65e18ec97b32d7dc50249a0d9c256f57664df",e["officer_engineer"]="e8e01fb84ed1a33ed3ab34af6fc84e86e3505142"}(t||(t={}));const s={[t.discoverer]:0,[t.discoverer_pts]:0,[t.collector]:0,[t.collector_pts]:0,[t.general]:0,[t.general_pts]:0,[t.researcher]:0,[t.researcher_pts]:0,[t.trader]:0,[t.trader_pts]:0,[t.warrior]:0,[t.warrior_pts]:0,[t.metalBooster_bronze_1day]:0,[t.metalBooster_bronze_7days]:0,[t.metalBooster_bronze_30days_pts]:0,[t.metalBooster_bronze_90days_pts]:0,[t.metalBooster_silver_7days]:0,[t.metalBooster_silver_30days]:0,[t.metalBooster_silver_30days_pts]:0,[t.metalBooster_silver_90days]:0,[t.metalBooster_silver_90days_pts]:0,[t.metalBooster_gold_7days]:0,[t.metalBooster_gold_30days]:0,[t.metalBooster_gold_30days_pts]:0,[t.metalBooster_gold_90days]:0,[t.metalBooster_gold_90days_pts]:0,[t.metalBooster_platinum_7days]:0,[t.metalBooster_platinum_7days_pts]:0,[t.metalBooster_platinum_30days]:0,[t.metalBooster_platinum_30days_pts]:0,[t.metalBooster_platinum_90days]:0,[t.metalBooster_platinum_90days_pts]:0,[t.crystalBooster_bronze_1day]:0,[t.crystalBooster_bronze_7days]:0,[t.crystalBooster_bronze_30days_pts]:0,[t.crystalBooster_bronze_90days_pts]:0,[t.crystalBooster_silver_7days]:0,[t.crystalBooster_silver_30days]:0,[t.crystalBooster_silver_30days_pts]:0,[t.crystalBooster_silver_90days]:0,[t.crystalBooster_silver_90days_pts]:0,[t.crystalBooster_gold_7days]:0,[t.crystalBooster_gold_30days]:0,[t.crystalBooster_gold_30days_pts]:0,[t.crystalBooster_gold_90days]:0,[t.crystalBooster_gold_90days_pts]:0,[t.crystalBooster_platinum_7days]:0,[t.crystalBooster_platinum_7days_pts]:0,[t.crystalBooster_platinum_30days]:0,[t.crystalBooster_platinum_30days_pts]:0,[t.crystalBooster_platinum_90days]:0,[t.crystalBooster_platinum_90days_pts]:0,[t.deuteriumBooster_bronze_1day]:0,[t.deuteriumBooster_bronze_7days]:0,[t.deuteriumBooster_bronze_30days_pts]:0,[t.deuteriumBooster_bronze_90days_pts]:0,[t.deuteriumBooster_silver_7days]:0,[t.deuteriumBooster_silver_30days]:0,[t.deuteriumBooster_silver_30days_pts]:0,[t.deuteriumBooster_silver_90days]:0,[t.deuteriumBooster_silver_90days_pts]:0,[t.deuteriumBooster_gold_7days]:0,[t.deuteriumBooster_gold_30days]:0,[t.deuteriumBooster_gold_30days_pts]:0,[t.deuteriumBooster_gold_90days]:0,[t.deuteriumBooster_gold_90days_pts]:0,[t.deuteriumBooster_platinum_7days]:0,[t.deuteriumBooster_platinum_7days_pts]:0,[t.deuteriumBooster_platinum_30days]:0,[t.deuteriumBooster_platinum_30days_pts]:0,[t.deuteriumBooster_platinum_90days]:0,[t.deuteriumBooster_platinum_90days_pts]:0,[t.energyBooster_bronze_7days]:0,[t.energyBooster_bronze_30days_pts]:0,[t.energyBooster_bronze_90days_pts]:0,[t.energyBooster_silver_7days]:0,[t.energyBooster_silver_7days_pts]:0,[t.energyBooster_silver_30days]:0,[t.energyBooster_silver_30days_pts]:0,[t.energyBooster_silver_90days]:0,[t.energyBooster_silver_90days_pts]:0,[t.energyBooster_gold_7days]:0,[t.energyBooster_gold_7days_pts]:0,[t.energyBooster_gold_30days]:0,[t.energyBooster_gold_30days_pts]:0,[t.energyBooster_gold_90days]:0,[t.energyBooster_gold_90days_pts]:0,[t.energyBooster_platinum_7days]:0,[t.energyBooster_platinum_7days_pts]:0,[t.energyBooster_platinum_30days]:0,[t.energyBooster_platinum_30days_pts]:0,[t.energyBooster_platinum_90days]:0,[t.energyBooster_platinum_90days_pts]:0,[t.moonFields_bronze]:0,[t.moonFields_silver]:0,[t.moonFields_gold]:0,[t.moonFields_platinum]:0,[t.moonShot_bronze]:0,[t.moonShot_silver]:0,[t.moonShot_gold]:0,[t.planetFields_bronze]:0,[t.planetFields_silver]:0,[t.planetFields_gold]:0,[t.planetFields_platinum]:0,[t.resourcePackage_all]:0,[t.resourcePackage_all_pts]:0,[t.resourcePackage_metal]:0,[t.resourcePackage_metal_pts]:0,[t.resourcePackage_crystal]:0,[t.resourcePackage_crystal_pts]:0,[t.resourcePackage_deuterium]:0,[t.resourcePackage_deuterium_pts]:0,[t.kraken_bronze]:0,[t.kraken_silver]:0,[t.kraken_gold]:0,[t.kraken_platinum]:0,[t.detroid_bronze]:0,[t.detroid_silver]:0,[t.detroid_gold]:0,[t.detroid_platinum]:0,[t.detroid_mechaShipyard_bronze_pts]:0,[t.newtron_bronze]:0,[t.newtron_silver]:0,[t.newtron_gold]:0,[t.newtron_platinum]:0,[t.lifeformKraken_bronze]:0,[t.lifeformKraken_bronze_pts]:0,[t.lifeformKraken_silver]:0,[t.lifeformKraken_silver_pts]:0,[t.lifeformKraken_gold]:0,[t.lifeformKraken_gold_pts]:0,[t.lifeformKraken_platinum]:0,[t.lifeformKraken_platinum_pts]:0,[t.lifeformNewtron_bronze]:0,[t.lifeformNewtron_bronze_pts]:0,[t.lifeformNewtron_silver]:0,[t.lifeformNewtron_silver_pts]:0,[t.lifeformNewtron_gold]:0,[t.lifeformNewtron_gold_pts]:0,[t.lifeformNewtron_platinum]:0,[t.lifeformNewtron_platinum_pts]:0,[t.expeditionslots_bronze_7days]:0,[t.expeditionslots_bronze_7days_pts]:0,[t.expeditionslots_bronze_30days]:0,[t.expeditionslots_bronze_30days_pts]:0,[t.expeditionslots_bronze_90days]:0,[t.expeditionslots_bronze_90days_pts]:0,[t.expeditionslots_silver_7days]:0,[t.expeditionslots_silver_7days_pts]:0,[t.expeditionslots_silver_30days]:0,[t.expeditionslots_silver_30days_pts]:0,[t.expeditionslots_silver_90days]:0,[t.expeditionslots_silver_90days_pts]:0,[t.expeditionslots_gold_7days]:0,[t.expeditionslots_gold_7days_pts]:0,[t.expeditionslots_gold_30days]:0,[t.expeditionslots_gold_30days_pts]:0,[t.expeditionslots_gold_90days]:0,[t.expeditionslots_gold_90days_pts]:0,[t.fleetSlots_bronze_7days]:0,[t.fleetSlots_bronze_7days_pts]:0,[t.fleetSlots_bronze_30days]:0,[t.fleetSlots_bronze_30days_pts]:0,[t.fleetSlots_bronze_90days]:0,[t.fleetSlots_bronze_90days_pts]:0,[t.fleetSlots_silver_7days]:0,[t.fleetSlots_silver_7days_pts]:0,[t.fleetSlots_silver_30days]:0,[t.fleetSlots_silver_30days_pts]:0,[t.fleetSlots_silver_90days]:0,[t.fleetSlots_silver_90days_pts]:0,[t.fleetSlots_gold_7days]:0,[t.fleetSlots_gold_7days_pts]:0,[t.fleetSlots_gold_30days]:0,[t.fleetSlots_gold_30days_pts]:0,[t.fleetSlots_gold_90days]:0,[t.fleetSlots_gold_90days_pts]:0,[t.migrationItem]:0,[t.migrationItem_pts]:0,[t.shortenTime_buildings]:0,[t.shortenTime_research]:0,[t.shortenTime_shipyard]:0,[t.shortenTime_lifeformBuildings]:0,[t.shortenTime_lifeformResearch]:0,[t.officer_commander]:0,[t.officer_admiral]:0,[t.officer_engineer]:0,[t.officer_geologist]:0,[t.officer_technocrat]:0},o=Object.keys(s)},2816:(e,a,r)=>{r.d(a,{EO:()=>t,YS:()=>o,IU:()=>i});var t,s=r(3418);(function(e){e[e["residentialSector"]=11101]="residentialSector",e[e["biosphereFarm"]=11102]="biosphereFarm",e[e["researchCentre"]=11103]="researchCentre",e[e["academyOfSciences"]=11104]="academyOfSciences",e[e["neuroCalibrationCentre"]=11105]="neuroCalibrationCentre",e[e["highEnergySmelting"]=11106]="highEnergySmelting",e[e["foodSilo"]=11107]="foodSilo",e[e["fusionPoweredProduction"]=11108]="fusionPoweredProduction",e[e["skyscraper"]=11109]="skyscraper",e[e["biotechLab"]=11110]="biotechLab",e[e["metropolis"]=11111]="metropolis",e[e["planetaryShield"]=11112]="planetaryShield",e[e["meditationEnclave"]=12101]="meditationEnclave",e[e["crystalFarm"]=12102]="crystalFarm",e[e["runeTechnologium"]=12103]="runeTechnologium",e[e["runeForge"]=12104]="runeForge",e[e["oriktorium"]=12105]="oriktorium",e[e["magmaForge"]=12106]="magmaForge",e[e["disruptionChamber"]=12107]="disruptionChamber",e[e["megalith"]=12108]="megalith",e[e["crystalRefinery"]=12109]="crystalRefinery",e[e["deuteriumSynthesiser"]=12110]="deuteriumSynthesiser",e[e["mineralResearchCentre"]=12111]="mineralResearchCentre",e[e["advancedRecyclingPlant"]=12112]="advancedRecyclingPlant",e[e["assemblyLine"]=13101]="assemblyLine",e[e["fusionCellFactory"]=13102]="fusionCellFactory",e[e["roboticsResearchCentre"]=13103]="roboticsResearchCentre",e[e["updateNetwork"]=13104]="updateNetwork",e[e["quantumComputerCentre"]=13105]="quantumComputerCentre",e[e["automatisedAssemblyCentre"]=13106]="automatisedAssemblyCentre",e[e["highPerformanceTransformer"]=13107]="highPerformanceTransformer",e[e["microchipAssemblyLine"]=13108]="microchipAssemblyLine",e[e["productionAssemblyHall"]=13109]="productionAssemblyHall",e[e["highPerformanceSynthesiser"]=13110]="highPerformanceSynthesiser",e[e["chipMassProduction"]=13111]="chipMassProduction",e[e["nanoRepairBots"]=13112]="nanoRepairBots",e[e["sanctuary"]=14101]="sanctuary",e[e["antimatterCondenser"]=14102]="antimatterCondenser",e[e["vortexChamber"]=14103]="vortexChamber",e[e["hallsOfRealisation"]=14104]="hallsOfRealisation",e[e["forumOfTranscendence"]=14105]="forumOfTranscendence",e[e["antimatterConvector"]=14106]="antimatterConvector",e[e["cloningLaboratory"]=14107]="cloningLaboratory",e[e["chrysalisAccelerator"]=14108]="chrysalisAccelerator",e[e["bioModifier"]=14109]="bioModifier",e[e["psionicModulator"]=14110]="psionicModulator",e[e["shipManufacturingHall"]=14111]="shipManufacturingHall",e[e["supraRefractor"]=14112]="supraRefractor"})(t||(t={}));const o=[t.residentialSector,t.biosphereFarm,t.researchCentre,t.academyOfSciences,t.neuroCalibrationCentre,t.highEnergySmelting,t.foodSilo,t.fusionPoweredProduction,t.skyscraper,t.biotechLab,t.metropolis,t.planetaryShield,t.meditationEnclave,t.crystalFarm,t.runeTechnologium,t.runeForge,t.oriktorium,t.magmaForge,t.disruptionChamber,t.megalith,t.crystalRefinery,t.deuteriumSynthesiser,t.mineralResearchCentre,t.advancedRecyclingPlant,t.assemblyLine,t.fusionCellFactory,t.roboticsResearchCentre,t.updateNetwork,t.quantumComputerCentre,t.automatisedAssemblyCentre,t.highPerformanceTransformer,t.microchipAssemblyLine,t.productionAssemblyHall,t.highPerformanceSynthesiser,t.chipMassProduction,t.nanoRepairBots,t.sanctuary,t.antimatterCondenser,t.vortexChamber,t.hallsOfRealisation,t.forumOfTranscendence,t.antimatterConvector,t.cloningLaboratory,t.chrysalisAccelerator,t.bioModifier,t.psionicModulator,t.shipManufacturingHall,t.supraRefractor],i={[s.e5.none]:[],[s.e5.humans]:[t.residentialSector,t.biosphereFarm,t.researchCentre,t.academyOfSciences,t.neuroCalibrationCentre,t.highEnergySmelting,t.foodSilo,t.fusionPoweredProduction,t.skyscraper,t.biotechLab,t.metropolis,t.planetaryShield],[s.e5.rocktal]:[t.meditationEnclave,t.crystalFarm,t.runeTechnologium,t.runeForge,t.oriktorium,t.magmaForge,t.disruptionChamber,t.megalith,t.crystalRefinery,t.deuteriumSynthesiser,t.mineralResearchCentre,t.advancedRecyclingPlant],[s.e5.mechas]:[t.assemblyLine,t.fusionCellFactory,t.roboticsResearchCentre,t.updateNetwork,t.quantumComputerCentre,t.automatisedAssemblyCentre,t.highPerformanceTransformer,t.microchipAssemblyLine,t.productionAssemblyHall,t.highPerformanceSynthesiser,t.chipMassProduction,t.nanoRepairBots],[s.e5.kaelesh]:[t.sanctuary,t.antimatterCondenser,t.vortexChamber,t.hallsOfRealisation,t.forumOfTranscendence,t.antimatterConvector,t.cloningLaboratory,t.chrysalisAccelerator,t.bioModifier,t.psionicModulator,t.shipManufacturingHall,t.supraRefractor]}},9681:(e,a,r)=>{r.d(a,{Nw:()=>t,Vs:()=>o,rI:()=>i,dY:()=>n});var t,s=r(3418);(function(e){e[e["intergalacticEnvoys"]=11201]="intergalacticEnvoys",e[e["highPerformanceExtractors"]=11202]="highPerformanceExtractors",e[e["fusionDrives"]=11203]="fusionDrives",e[e["stealthFieldGenerator"]=11204]="stealthFieldGenerator",e[e["orbitalDen"]=11205]="orbitalDen",e[e["researchAI"]=11206]="researchAI",e[e["highPerformanceTerraformer"]=11207]="highPerformanceTerraformer",e[e["enhancedProductionTechnologies"]=11208]="enhancedProductionTechnologies",e[e["lightFighterMkII"]=11209]="lightFighterMkII",e[e["cruiserMkII"]=11210]="cruiserMkII",e[e["improvedLabTechnology"]=11211]="improvedLabTechnology",e[e["plasmaTerraformer"]=11212]="plasmaTerraformer",e[e["lowTemperatureDrives"]=11213]="lowTemperatureDrives",e[e["bomberMkII"]=11214]="bomberMkII",e[e["destroyerMkII"]=11215]="destroyerMkII",e[e["battlecruiserMkII"]=11216]="battlecruiserMkII",e[e["robotAssistants"]=11217]="robotAssistants",e[e["supercomputer"]=11218]="supercomputer",e[e["volcanicBatteries"]=12201]="volcanicBatteries",e[e["acousticScanning"]=12202]="acousticScanning",e[e["highEnergyPumpSystems"]=12203]="highEnergyPumpSystems",e[e["cargoHoldExpansion_CivilianShips"]=12204]="cargoHoldExpansion_CivilianShips",e[e["magmaPoweredProduction"]=12205]="magmaPoweredProduction",e[e["geothermalPowerPlants"]=12206]="geothermalPowerPlants",e[e["depthSounding"]=12207]="depthSounding",e[e["ionCrystalEnhancement_heavyFighter"]=12208]="ionCrystalEnhancement_heavyFighter",e[e["improvedStellarator"]=12209]="improvedStellarator",e[e["hardenedDiamondDrillHeads"]=12210]="hardenedDiamondDrillHeads",e[e["seismicMiningTechnology"]=12211]="seismicMiningTechnology",e[e["magmaPoweredPumpSystems"]=12212]="magmaPoweredPumpSystems",e[e["ionCrystalModules"]=12213]="ionCrystalModules",e[e["optimisedSiloConstructionMethod"]=12214]="optimisedSiloConstructionMethod",e[e["diamondEnergyTransmitter"]=12215]="diamondEnergyTransmitter",e[e["obsidianShieldReinforcement"]=12216]="obsidianShieldReinforcement",e[e["runeShields"]=12217]="runeShields",e[e["rocktalCollectorEnhancement"]=12218]="rocktalCollectorEnhancement",e[e["catalyserTechnology"]=13201]="catalyserTechnology",e[e["plasmaDrive"]=13202]="plasmaDrive",e[e["efficiencyModule"]=13203]="efficiencyModule",e[e["depotAI"]=13204]="depotAI",e[e["generalOverhaul_lightFighter"]=13205]="generalOverhaul_lightFighter",e[e["automatedTransportLines"]=13206]="automatedTransportLines",e[e["improvedDroneAI"]=13207]="improvedDroneAI",e[e["experimentalRecyclingTechnology"]=13208]="experimentalRecyclingTechnology",e[e["generalOverhaul_cruiser"]=13209]="generalOverhaul_cruiser",e[e["slingshotAutopilot"]=13210]="slingshotAutopilot",e[e["highTemperatureSuperconductors"]=13211]="highTemperatureSuperconductors",e[e["generalOverhaul_battleship"]=13212]="generalOverhaul_battleship",e[e["artificialSwarmIntelligence"]=13213]="artificialSwarmIntelligence",e[e["generalOverhaul_battlecruiser"]=13214]="generalOverhaul_battlecruiser",e[e["generalOverhaul_bomber"]=13215]="generalOverhaul_bomber",e[e["generalOverhaul_destroyer"]=13216]="generalOverhaul_destroyer",e[e["experimentalWeaponsTechnology"]=13217]="experimentalWeaponsTechnology",e[e["mechanGeneralEnhancement"]=13218]="mechanGeneralEnhancement",e[e["heatRecovery"]=14201]="heatRecovery",e[e["sulphideProcess"]=14202]="sulphideProcess",e[e["psionicNetwork"]=14203]="psionicNetwork",e[e["telekineticTractorBeam"]=14204]="telekineticTractorBeam",e[e["enhancedSensorTechnology"]=14205]="enhancedSensorTechnology",e[e["neuromodalCompressor"]=14206]="neuromodalCompressor",e[e["neuroInterface"]=14207]="neuroInterface",e[e["interplanetaryAnalysisNetwork"]=14208]="interplanetaryAnalysisNetwork",e[e["overclocking_heavyFighter"]=14209]="overclocking_heavyFighter",e[e["telekineticDrive"]=14210]="telekineticDrive",e[e["sixthSense"]=14211]="sixthSense",e[e["psychoharmoniser"]=14212]="psychoharmoniser",e[e["efficientSwarmIntelligence"]=14213]="efficientSwarmIntelligence",e[e["overclocking_largeCargo"]=14214]="overclocking_largeCargo",e[e["gravitationSensors"]=14215]="gravitationSensors",e[e["overclocking_battleship"]=14216]="overclocking_battleship",e[e["psionicShieldMatrix"]=14217]="psionicShieldMatrix",e[e["kaeleshDiscovererEnhancement"]=14218]="kaeleshDiscovererEnhancement"})(t||(t={}));const o=[t.intergalacticEnvoys,t.highPerformanceExtractors,t.fusionDrives,t.stealthFieldGenerator,t.orbitalDen,t.researchAI,t.highPerformanceTerraformer,t.enhancedProductionTechnologies,t.lightFighterMkII,t.cruiserMkII,t.improvedLabTechnology,t.plasmaTerraformer,t.lowTemperatureDrives,t.bomberMkII,t.destroyerMkII,t.battlecruiserMkII,t.robotAssistants,t.supercomputer,t.volcanicBatteries,t.acousticScanning,t.highEnergyPumpSystems,t.cargoHoldExpansion_CivilianShips,t.magmaPoweredProduction,t.geothermalPowerPlants,t.depthSounding,t.ionCrystalEnhancement_heavyFighter,t.improvedStellarator,t.hardenedDiamondDrillHeads,t.seismicMiningTechnology,t.magmaPoweredPumpSystems,t.ionCrystalModules,t.optimisedSiloConstructionMethod,t.diamondEnergyTransmitter,t.obsidianShieldReinforcement,t.runeShields,t.rocktalCollectorEnhancement,t.catalyserTechnology,t.plasmaDrive,t.efficiencyModule,t.depotAI,t.generalOverhaul_lightFighter,t.automatedTransportLines,t.improvedDroneAI,t.experimentalRecyclingTechnology,t.generalOverhaul_cruiser,t.slingshotAutopilot,t.highTemperatureSuperconductors,t.generalOverhaul_battleship,t.artificialSwarmIntelligence,t.generalOverhaul_battlecruiser,t.generalOverhaul_bomber,t.generalOverhaul_destroyer,t.experimentalWeaponsTechnology,t.mechanGeneralEnhancement,t.heatRecovery,t.sulphideProcess,t.psionicNetwork,t.telekineticTractorBeam,t.enhancedSensorTechnology,t.neuromodalCompressor,t.neuroInterface,t.interplanetaryAnalysisNetwork,t.overclocking_heavyFighter,t.telekineticDrive,t.sixthSense,t.psychoharmoniser,t.efficientSwarmIntelligence,t.overclocking_largeCargo,t.gravitationSensors,t.overclocking_battleship,t.psionicShieldMatrix,t.kaeleshDiscovererEnhancement],i={[t.intergalacticEnvoys]:1,[t.highPerformanceExtractors]:2,[t.fusionDrives]:3,[t.stealthFieldGenerator]:4,[t.orbitalDen]:5,[t.researchAI]:6,[t.highPerformanceTerraformer]:7,[t.enhancedProductionTechnologies]:8,[t.lightFighterMkII]:9,[t.cruiserMkII]:10,[t.improvedLabTechnology]:11,[t.plasmaTerraformer]:12,[t.lowTemperatureDrives]:13,[t.bomberMkII]:14,[t.destroyerMkII]:15,[t.battlecruiserMkII]:16,[t.robotAssistants]:17,[t.supercomputer]:18,[t.volcanicBatteries]:1,[t.acousticScanning]:2,[t.highEnergyPumpSystems]:3,[t.cargoHoldExpansion_CivilianShips]:4,[t.magmaPoweredProduction]:5,[t.geothermalPowerPlants]:6,[t.depthSounding]:7,[t.ionCrystalEnhancement_heavyFighter]:8,[t.improvedStellarator]:9,[t.hardenedDiamondDrillHeads]:10,[t.seismicMiningTechnology]:11,[t.magmaPoweredPumpSystems]:12,[t.ionCrystalModules]:13,[t.optimisedSiloConstructionMethod]:14,[t.diamondEnergyTransmitter]:15,[t.obsidianShieldReinforcement]:16,[t.runeShields]:17,[t.rocktalCollectorEnhancement]:18,[t.catalyserTechnology]:1,[t.plasmaDrive]:2,[t.efficiencyModule]:3,[t.depotAI]:4,[t.generalOverhaul_lightFighter]:5,[t.automatedTransportLines]:6,[t.improvedDroneAI]:7,[t.experimentalRecyclingTechnology]:8,[t.generalOverhaul_cruiser]:9,[t.slingshotAutopilot]:10,[t.highTemperatureSuperconductors]:11,[t.generalOverhaul_battleship]:12,[t.artificialSwarmIntelligence]:13,[t.generalOverhaul_battlecruiser]:14,[t.generalOverhaul_bomber]:15,[t.generalOverhaul_destroyer]:16,[t.experimentalWeaponsTechnology]:17,[t.mechanGeneralEnhancement]:18,[t.heatRecovery]:1,[t.sulphideProcess]:2,[t.psionicNetwork]:3,[t.telekineticTractorBeam]:4,[t.enhancedSensorTechnology]:5,[t.neuromodalCompressor]:6,[t.neuroInterface]:7,[t.interplanetaryAnalysisNetwork]:8,[t.overclocking_heavyFighter]:9,[t.telekineticDrive]:10,[t.sixthSense]:11,[t.psychoharmoniser]:12,[t.efficientSwarmIntelligence]:13,[t.overclocking_largeCargo]:14,[t.gravitationSensors]:15,[t.overclocking_battleship]:16,[t.psionicShieldMatrix]:17,[t.kaeleshDiscovererEnhancement]:18},n={[s.e5.none]:[],[s.e5.humans]:[t.intergalacticEnvoys,t.highPerformanceExtractors,t.fusionDrives,t.stealthFieldGenerator,t.orbitalDen,t.researchAI,t.highPerformanceTerraformer,t.enhancedProductionTechnologies,t.lightFighterMkII,t.cruiserMkII,t.improvedLabTechnology,t.plasmaTerraformer,t.lowTemperatureDrives,t.bomberMkII,t.destroyerMkII,t.battlecruiserMkII,t.robotAssistants,t.supercomputer],[s.e5.rocktal]:[t.volcanicBatteries,t.acousticScanning,t.highEnergyPumpSystems,t.cargoHoldExpansion_CivilianShips,t.magmaPoweredProduction,t.geothermalPowerPlants,t.depthSounding,t.ionCrystalEnhancement_heavyFighter,t.improvedStellarator,t.hardenedDiamondDrillHeads,t.seismicMiningTechnology,t.magmaPoweredPumpSystems,t.ionCrystalModules,t.optimisedSiloConstructionMethod,t.diamondEnergyTransmitter,t.obsidianShieldReinforcement,t.runeShields,t.rocktalCollectorEnhancement],[s.e5.mechas]:[t.catalyserTechnology,t.plasmaDrive,t.efficiencyModule,t.depotAI,t.generalOverhaul_lightFighter,t.automatedTransportLines,t.improvedDroneAI,t.experimentalRecyclingTechnology,t.generalOverhaul_cruiser,t.slingshotAutopilot,t.highTemperatureSuperconductors,t.generalOverhaul_battleship,t.artificialSwarmIntelligence,t.generalOverhaul_battlecruiser,t.generalOverhaul_bomber,t.generalOverhaul_destroyer,t.experimentalWeaponsTechnology,t.mechanGeneralEnhancement],[s.e5.kaelesh]:[t.heatRecovery,t.sulphideProcess,t.psionicNetwork,t.telekineticTractorBeam,t.enhancedSensorTechnology,t.neuromodalCompressor,t.neuroInterface,t.interplanetaryAnalysisNetwork,t.overclocking_heavyFighter,t.telekineticDrive,t.sixthSense,t.psychoharmoniser,t.efficientSwarmIntelligence,t.overclocking_largeCargo,t.gravitationSensors,t.overclocking_battleship,t.psionicShieldMatrix,t.kaeleshDiscovererEnhancement]}},3418:(e,a,r)=>{var t;r.d(a,{e5:()=>t,p3:()=>s,gN:()=>o}),function(e){e["humans"]="humans",e["rocktal"]="rocktal",e["mechas"]="mechas",e["kaelesh"]="kaelesh",e["none"]="none"}(t||(t={}));const s=[t.humans,t.rocktal,t.mechas,t.kaelesh],o=[t.none,t.humans,t.rocktal,t.mechas,t.kaelesh]},3306:(e,a,r)=>{r.d(a,{C:()=>o});var t=r(9737);class s extends t.A{getCost(e){return{metal:Math.floor(4e3*1.75**(e-1)),crystal:Math.floor(8e3*1.75**(e-1)),deuterium:Math.floor(4e3*1.75**(e-1)),energy:0}}}const o=new s},8996:(e,a,r)=>{r.d(a,{Z:()=>o});var t=r(9737);class s extends t.A{getCost(e){return{metal:1e3*2**e,crystal:2e3*2**e,deuterium:500*2**e,energy:0}}}const o=new s},9737:(e,a,r)=>{r.d(a,{A:()=>t});class t{}},3738:(e,a,r)=>{var t;r.d(a,{s:()=>t}),function(e){e[e["espionageTechnology"]=106]="espionageTechnology",e[e["computerTechnology"]=108]="computerTechnology",e[e["weaponsTechnology"]=109]="weaponsTechnology",e[e["shieldingTechnology"]=110]="shieldingTechnology",e[e["armorTechnology"]=111]="armorTechnology",e[e["energyTechnology"]=113]="energyTechnology",e[e["hyperspaceTechnology"]=114]="hyperspaceTechnology",e[e["combustionDrive"]=115]="combustionDrive",e[e["impulseDrive"]=117]="impulseDrive",e[e["hyperspaceDrive"]=118]="hyperspaceDrive",e[e["laserTechnology"]=120]="laserTechnology",e[e["ionTechnology"]=121]="ionTechnology",e[e["plasmaTechnology"]=122]="plasmaTechnology",e[e["intergalacticResearchNetwork"]=123]="intergalacticResearchNetwork",e[e["astrophysics"]=124]="astrophysics",e[e["gravitonTechnology"]=199]="gravitonTechnology"}(t||(t={}))},1731:(e,a,r)=>{r.d(a,{i:()=>M,N:()=>z});var t=r(3738),s=r(9737);class o extends s.A{getCost(e){return{metal:500*2**e,crystal:0,deuterium:0,energy:0}}}const i=new o;class n extends s.A{getCost(e){return{metal:0,crystal:200*2**e,deuterium:300*2**e,energy:0}}}const l=new n;class d extends s.A{getCost(e){return{metal:100*2**e,crystal:500*2**e,deuterium:100*2**e,energy:0}}}const c=new d;class u extends s.A{getCost(e){return{metal:100*2**e,crystal:300*2**e,deuterium:0,energy:0}}}const m=new u;class g extends s.A{getCost(e){return{metal:400*2**e,crystal:100*2**e,deuterium:0,energy:0}}}const p=new g;class f extends s.A{getCost(e){return{metal:0,crystal:400*2**e,deuterium:200*2**e,energy:0}}}const h=new f;class b extends s.A{getCost(e){return{metal:0,crystal:2e3*2**e,deuterium:1e3*2**e,energy:0}}}const y=new b;class v extends s.A{getCost(e){return{metal:200*2**e,crystal:0,deuterium:300*2**e,energy:0}}}const _=new v;class w extends s.A{getCost(e){return{metal:1e3*2**e,crystal:2e3*2**e,deuterium:300*2**e,energy:0}}}const S=new w;class k extends s.A{getCost(e){return{metal:5e3*2**e,crystal:1e4*2**e,deuterium:3e3*2**e,energy:0}}}const x=new k;class T extends s.A{getCost(e){return{metal:100*2**e,crystal:50*2**e,deuterium:0,energy:0}}}const E=new T;class B extends s.A{getCost(e){return{metal:500*2**e,crystal:150*2**e,deuterium:50*2**e,energy:0}}}const C=new B;var A=r(8996);class D extends s.A{getCost(e){return{metal:12e4*2**e,crystal:2e5*2**e,deuterium:8e4*2**e,energy:0}}}const P=new D;var I=r(3306);class N extends s.A{getCost(e){return{metal:0,crystal:0,deuterium:0,energy:1e5*3**e}}}const F=new N,z=[t.s.espionageTechnology,t.s.computerTechnology,t.s.weaponsTechnology,t.s.shieldingTechnology,t.s.armorTechnology,t.s.energyTechnology,t.s.hyperspaceTechnology,t.s.combustionDrive,t.s.impulseDrive,t.s.hyperspaceDrive,t.s.laserTechnology,t.s.ionTechnology,t.s.plasmaTechnology,t.s.intergalacticResearchNetwork,t.s.astrophysics,t.s.gravitonTechnology],M={[t.s.espionageTechnology]:c,[t.s.computerTechnology]:l,[t.s.weaponsTechnology]:p,[t.s.shieldingTechnology]:m,[t.s.armorTechnology]:i,[t.s.energyTechnology]:h,[t.s.hyperspaceTechnology]:y,[t.s.combustionDrive]:_,[t.s.impulseDrive]:S,[t.s.hyperspaceDrive]:x,[t.s.laserTechnology]:E,[t.s.ionTechnology]:C,[t.s.plasmaTechnology]:A.Z,[t.s.intergalacticResearchNetwork]:P,[t.s.astrophysics]:I.C,[t.s.gravitonTechnology]:F}},7331:(e,a,r)=>{var t;r.d(a,{_:()=>t,P:()=>s}),function(e){e["metal"]="metal",e["crystal"]="crystal",e["deuterium"]="deuterium"}(t||(t={}));const s=[t.metal,t.crystal,t.deuterium]},892:(e,a,r)=>{r.d(a,{F:()=>i});var t=r(4860),s=r(2057);class o extends t.l{get type(){return s.g.reaper}get cost(){return{metal:85e3,crystal:55e3,deuterium:2e4,energy:0}}baseHull(){return 14e4}baseShield(){return 700}baseDamage(){return 2800}baseSpeed(){return 7e3}baseCargoCapacity(){return 1e4}fuelConsumption(){return 1100}}const i=new o},4860:(e,a,r)=>{r.d(a,{l:()=>t});class t{}},2057:(e,a,r)=>{var t;r.d(a,{g:()=>t}),function(e){e[e["smallCargo"]=202]="smallCargo",e[e["largeCargo"]=203]="largeCargo",e[e["lightFighter"]=204]="lightFighter",e[e["heavyFighter"]=205]="heavyFighter",e[e["cruiser"]=206]="cruiser",e[e["battleship"]=207]="battleship",e[e["colonyShip"]=208]="colonyShip",e[e["recycler"]=209]="recycler",e[e["espionageProbe"]=210]="espionageProbe",e[e["bomber"]=211]="bomber",e[e["solarSatellite"]=212]="solarSatellite",e[e["destroyer"]=213]="destroyer",e[e["deathStar"]=214]="deathStar",e[e["battlecruiser"]=215]="battlecruiser",e[e["crawler"]=217]="crawler",e[e["reaper"]=218]="reaper",e[e["pathfinder"]=219]="pathfinder"}(t||(t={}))},248:(e,a,r)=>{r.d(a,{XZ:()=>G,Hr:()=>H,Hf:()=>q,v6:()=>L,oN:()=>$,lp:()=>U,GI:()=>O});var t=r(4860),s=r(2057);class o extends t.l{get type(){return s.g.battlecruiser}get cost(){return{metal:3e4,crystal:4e4,deuterium:15e3,energy:0}}baseHull(){return 7e4}baseShield(){return 400}baseDamage(){return 700}baseSpeed(){return 1e4}baseCargoCapacity(){return 750}fuelConsumption(){return 250}}const i=new o;class n extends t.l{get type(){return s.g.battleship}get cost(){return{metal:45e3,crystal:15e3,deuterium:0,energy:0}}baseHull(){return 6e4}baseShield(){return 200}baseDamage(){return 1e3}baseSpeed(){return 1e4}baseCargoCapacity(){return 1500}fuelConsumption(){return 500}}const l=new n;class d extends t.l{get type(){return s.g.bomber}get cost(){return{metal:5e4,crystal:25e3,deuterium:15e3,energy:0}}baseHull(){return 75e3}baseShield(){return 500}baseDamage(){return 1e3}baseSpeed(){return 5e3}baseCargoCapacity(){return 500}fuelConsumption(){return 700}}const c=new d;class u extends t.l{get type(){return s.g.colonyShip}get cost(){return{metal:1e4,crystal:2e4,deuterium:1e4,energy:0}}baseHull(){return 3e4}baseShield(){return 100}baseDamage(){return 50}baseSpeed(){return 2500}baseCargoCapacity(){return 7500}fuelConsumption(){return 1e3}}const m=new u;class g extends t.l{get type(){return s.g.crawler}get cost(){return{metal:2e3,crystal:2e3,deuterium:1e3,energy:0}}baseHull(){return 4e3}baseShield(){return 1}baseDamage(){return 1}baseSpeed(){return 0}baseCargoCapacity(){return 0}fuelConsumption(){return 0}}const p=new g;class f extends t.l{get type(){return s.g.cruiser}get cost(){return{metal:2e4,crystal:7e3,deuterium:2e3,energy:0}}baseHull(){return 27e3}baseShield(){return 50}baseDamage(){return 400}baseSpeed(){return 15e3}baseCargoCapacity(){return 800}fuelConsumption(){return 300}}const h=new f;class b extends t.l{get type(){return s.g.deathStar}get cost(){return{metal:5e6,crystal:4e6,deuterium:1e6,energy:0}}baseHull(){return 9e6}baseShield(){return 5e4}baseDamage(){return 2e5}baseSpeed(){return 100}baseCargoCapacity(){return 1e6}fuelConsumption(){return 1}}const y=new b;class v extends t.l{get type(){return s.g.destroyer}get cost(){return{metal:6e4,crystal:5e4,deuterium:15e3,energy:0}}baseHull(){return 11e4}baseShield(){return 500}baseDamage(){return 2e3}baseSpeed(){return 5e3}baseCargoCapacity(){return 2e3}fuelConsumption(){return 1e3}}const _=new v;class w extends t.l{get type(){return s.g.espionageProbe}get cost(){return{metal:0,crystal:1e3,deuterium:0,energy:0}}baseHull(){return 1e3}baseShield(){return 0}baseDamage(){return 0}baseSpeed(){return 1e8}baseCargoCapacity(){return 0}fuelConsumption(){return 1}}const S=new w;class k extends t.l{get type(){return s.g.heavyFighter}get cost(){return{metal:6e3,crystal:4e3,deuterium:0,energy:0}}baseHull(){return 1e4}baseShield(){return 25}baseDamage(){return 150}baseSpeed(){return 1e4}baseCargoCapacity(){return 100}fuelConsumption(){return 75}}const x=new k;class T extends t.l{get type(){return s.g.largeCargo}get cost(){return{metal:6e3,crystal:6e3,deuterium:0,energy:0}}baseHull(){return 12e3}baseShield(){return 25}baseDamage(){return 5}baseSpeed(){return 7500}baseCargoCapacity(){return 25e3}fuelConsumption(){return 50}}const E=new T;class B extends t.l{get type(){return s.g.lightFighter}get cost(){return{metal:3e3,crystal:1e3,deuterium:0,energy:0}}baseHull(){return 4e3}baseShield(){return 10}baseDamage(){return 50}baseSpeed(){return 12500}baseCargoCapacity(){return 50}fuelConsumption(){return 20}}const C=new B;class A extends t.l{get type(){return s.g.pathfinder}get cost(){return{metal:8e3,crystal:15e3,deuterium:8e3,energy:0}}baseHull(){return 23e3}baseShield(){return 100}baseDamage(){return 200}baseSpeed(){return 12e3}baseCargoCapacity(){return 1e4}fuelConsumption(){return 300}}const D=new A;var P=r(892);class I extends t.l{get type(){return s.g.recycler}get cost(){return{metal:1e4,crystal:6e3,deuterium:2e3,energy:0}}baseHull(){return 16e3}baseShield(){return 10}baseDamage(){return 1}baseSpeed(){return 6e3}baseCargoCapacity(){return 2e4}fuelConsumption(){return 900}}const N=new I;class F extends t.l{get type(){return s.g.smallCargo}get cost(){return{metal:2e3,crystal:2e3,deuterium:0,energy:0}}baseHull(){return 4e3}baseShield(){return 10}baseDamage(){return 5}baseSpeed(){return 1e4}baseCargoCapacity(){return 5e3}fuelConsumption(){return 20}}const z=new F;class M extends t.l{get type(){return s.g.solarSatellite}get cost(){return{metal:0,crystal:2e3,deuterium:500,energy:0}}baseHull(){return 2e3}baseShield(){return 1}baseDamage(){return 1}baseSpeed(){return 0}baseCargoCapacity(){return 0}fuelConsumption(){return 0}}const R=new M,O=[s.g.smallCargo,s.g.largeCargo,s.g.lightFighter,s.g.heavyFighter,s.g.cruiser,s.g.battleship,s.g.colonyShip,s.g.recycler,s.g.espionageProbe,s.g.bomber,s.g.solarSatellite,s.g.destroyer,s.g.deathStar,s.g.battlecruiser,s.g.crawler,s.g.reaper,s.g.pathfinder],L=(s.g.solarSatellite,s.g.crawler,[s.g.smallCargo,s.g.largeCargo,s.g.lightFighter,s.g.heavyFighter,s.g.cruiser,s.g.battleship,s.g.colonyShip,s.g.recycler,s.g.espionageProbe,s.g.bomber,s.g.destroyer,s.g.deathStar,s.g.battlecruiser,s.g.reaper,s.g.pathfinder]),$=[s.g.smallCargo,s.g.largeCargo,s.g.lightFighter,s.g.heavyFighter,s.g.cruiser,s.g.battleship,s.g.colonyShip,s.g.recycler,s.g.espionageProbe,s.g.bomber,s.g.solarSatellite,s.g.destroyer,s.g.deathStar,s.g.battlecruiser,s.g.crawler,s.g.reaper,s.g.pathfinder],q=[s.g.smallCargo,s.g.largeCargo,s.g.lightFighter,s.g.heavyFighter,s.g.cruiser,s.g.battleship,s.g.colonyShip,s.g.recycler,s.g.espionageProbe,s.g.bomber,s.g.solarSatellite,s.g.destroyer,s.g.deathStar,s.g.battlecruiser,s.g.reaper,s.g.pathfinder],H=[s.g.lightFighter,s.g.heavyFighter,s.g.cruiser,s.g.battleship,s.g.battlecruiser,s.g.bomber,s.g.destroyer,s.g.deathStar,s.g.reaper,s.g.pathfinder,s.g.crawler],G=[s.g.smallCargo,s.g.largeCargo,s.g.colonyShip,s.g.recycler,s.g.espionageProbe,s.g.solarSatellite],U={[s.g.smallCargo]:z,[s.g.largeCargo]:E,[s.g.lightFighter]:C,[s.g.heavyFighter]:x,[s.g.cruiser]:h,[s.g.battleship]:l,[s.g.colonyShip]:m,[s.g.recycler]:N,[s.g.espionageProbe]:S,[s.g.bomber]:c,[s.g.solarSatellite]:R,[s.g.destroyer]:_,[s.g.deathStar]:y,[s.g.battlecruiser]:i,[s.g.crawler]:p,[s.g.reaper]:P.F,[s.g.pathfinder]:D}},3654:(e,a,r)=>{function t(e,a,r=!0){return e.language==a.language&&e.serverId==a.serverId&&(!r||e.playerId==a.playerId)}r.d(a,{i:()=>t})},6538:(e,a,r)=>{function t(e,a){if(null!=a)throw{message:e,data:a};throw new Error("[OGame Tracker] "+e)}r.d(a,{A:()=>t})},329:(e,a,r)=>{async function t(e){await new Promise((a=>setTimeout((()=>a()),e)))}r.d(a,{g:()=>t})},7545:(e,a,r)=>{function t(e,a=10){const r=parseInt(e,a);if(isNaN(r))throw new Error(`'${e}' is not a valid integer value`);return r}r.d(a,{Y:()=>t})},5599:(e,a,r)=>{r.d(a,{d:()=>o});var t=r(6538);const s={browser:{NODE_ENV:"production",VUE_APP_BROWSER:"chrome",BASE_URL:""}.BROWSER??"chrome"??(0,t.A)("invalid browser environment")};function o(){const e=s.browser,a=document.createElement("link");a.rel="stylesheet",a.href=`/mdi/style.${e}.css`;const r=document.createElement("link");r.rel="stylesheet",r.href=`/ogti/style.${e}.css`,document.head.append(a),document.head.append(r)}},7402:(e,a,r)=>{var t=r(144),s=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("span",{staticClass:"decimal-number",class:{"fade-value":0==e.value,"fade-decimals":e.fadeDecimals,"small-fraction":e.smallFraction}},[""!=e.prefix?r("span",{domProps:{textContent:e._s(e.prefix)}}):e._e(),r("span",{domProps:{textContent:e._s(e.$i18n.$n(e.integerValue,e.format))}}),e.digits>0?r("span",{staticClass:"fraction",domProps:{textContent:e._s(e.$i18n.$n(e.decimalValue,e.fractionNumberFormat).substring(1))}}):e._e(),""!=e.suffix?r("span",{domProps:{textContent:e._s(e.suffix)}}):e._e()])},o=[],i=r(655),n=r(4028);let l=class extends n.w3{value;digits;fadeDecimals;prefix;suffix;smallFraction;format={maximumFractionDigits:0};get fractionNumberFormat(){return{minimumFractionDigits:this.digits,maximumFractionDigits:this.digits}}get decimalValue(){return Math.abs(this.value)%1}get integerValue(){const e=this.decimalValue,a=Math.trunc(this.value);return e>.9995&&e<1?a+1:a}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>!isNaN(e)})],l.prototype,"value",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Number,default:2,validator:e=>e>=0})],l.prototype,"digits",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!0})],l.prototype,"fadeDecimals",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:()=>""})],l.prototype,"prefix",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:()=>""})],l.prototype,"suffix",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!0})],l.prototype,"smallFraction",void 0),l=(0,i.gn)([(0,n.wA)({})],l);const d=l,c=d;var u=r(1001),m=(0,u.Z)(c,s,o,!1,null,"3ed33596",null);const g=m.exports;var p=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",{staticClass:"loading"})},f=[];let h=class extends n.w3{};h=(0,i.gn)([(0,n.wA)({})],h);const b=h,y=b;var v=(0,u.Z)(y,p,f,!1,null,"b80a1b5c",null);const _=v.exports;t.ZP.component("decimal-number",g),t.ZP.component("loading-spinner",_)},5524:(e,a,r)=>{var t=r(144),s=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-alliance-class",class:{"o-alliance-class--disabled":e.disabled,"o-alliance-class--fade":e.fade},style:{"background-image":"url(/img/ogame/alliance-classes/"+e.image+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},o=[],i=r(655),n=r(4028),l=r(9867);let d=class extends n.w3{allianceClass;size;disabled;fade;get image(){return this.imageMap[this.allianceClass]}imageMap={[l.Ck.none]:"none",[l.Ck.researcher]:"researcher",[l.Ck.trader]:"trader",[l.Ck.warrior]:"warrior"}};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>l.ch.includes(e)})],d.prototype,"allianceClass",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],d.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],d.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],d.prototype,"fade",void 0),d=(0,i.gn)([(0,n.wA)({})],d);const c=d,u=c;var m=r(1001),g=(0,m.Z)(u,s,o,!1,null,"3238b182",null);const p=g.exports;var f=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-building",class:{"o-building--disabled":e.disabled,"o-building--fade":e.fade},style:{"background-image":"url(/img/ogame/buildings/"+e.image+".jpg)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},h=[],b=r(6864),y=r(1913);let v=class extends n.w3{building;size;disabled;fade;get image(){return this.imageMap[this.building]}imageMap={[b.A.metalMine]:"metal-mine",[b.A.crystalMine]:"crystal-mine",[b.A.deuteriumSynthesizer]:"deuterium-synthesizer",[b.A.metalStorage]:"metal-storage",[b.A.crystalStorage]:"crystal-storage",[b.A.deuteriumTank]:"deuterium-tank",[b.A.solarPlant]:"solar-plant",[b.A.fusionReactor]:"fusion-reactor",[b.A.roboticsFactory]:"robotics-factory",[b.A.shipyard]:"shipyard",[b.A.researchLab]:"research-lab",[b.A.allianceDepot]:"alliance-depot",[b.A.missileSilo]:"missile-silo",[b.A.naniteFactory]:"nanite-factory",[b.A.terraformer]:"terraformer",[b.A.spaceDock]:"space-dock",[b.A.lunarBase]:"lunar-base",[b.A.sensorPhalanx]:"sensor-phalanx",[b.A.jumpGate]:"jump-gate"}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>y.a7.includes(e)})],v.prototype,"building",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],v.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],v.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],v.prototype,"fade",void 0),v=(0,i.gn)([(0,n.wA)({})],v);const _=v,w=_;var S=(0,m.Z)(w,f,h,!1,null,"326c5e68",null);const k=S.exports;var x=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-defense",class:{"o-defense--disabled":e.disabled,"o-defense--fade":e.fade},style:{"background-image":"url(/img/ogame/defense/"+e.image+".jpg)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},T=[],E=r(2382),B=r(1628);let C=class extends n.w3{defense;size;disabled;fade;get image(){return this.imageMap[this.defense]}imageMap={[E.r.rocketLauncher]:"rocket-launcher",[E.r.lightLaser]:"light-laser",[E.r.heavyLaser]:"heavy-laser",[E.r.gaussCannon]:"gauss-cannon",[E.r.ionCannon]:"ion-cannon",[E.r.plasmaTurret]:"plasma-turret",[E.r.smallShieldDome]:"small-shield-dome",[E.r.largeShieldDome]:"large-shield-dome"}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>B.Q.includes(e)})],C.prototype,"defense",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],C.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],C.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],C.prototype,"fade",void 0),C=(0,i.gn)([(0,n.wA)({})],C);const A=C,D=A;var P=(0,m.Z)(D,x,T,!1,null,"95e68ee4",null);const I=P.exports;var N,F=function(){var e,a=this,r=a.$createElement,t=a._self._c||r;return t("div",a._g(a._b({staticClass:"o-item",class:(e={},e["o-item--grade-"+a.fullItem.grade]=!a.hideItemGrade,e["o-item--disabled"]=a.disabled,e["o-item--fade"]=a.fade,e["o-item--hide-grade"]=a.hideItemGrade,e),style:{"background-image":"url(/img/ogame/items/"+a.fullItem.image+".png)","font-size":a.size}},"div",Object.assign({},a.$attrs,a.$props),!1),a.$listeners))},z=[],M=r(1639);(function(e){e["none"]="none",e["bronze"]="bronze",e["silver"]="silver",e["gold"]="gold",e["platinum"]="platinum"})(N||(N={}));const R={[M.t.discoverer]:{name:"Entdecker",image:"3ecbd5114c3b663aa1a1252fc03091eecc790f10",smallImage:"e9278159a8c40e2e9337ba3495f0b5af1e2c9d05",hash:M.t.discoverer,grade:N.none},[M.t.collector]:{name:"Kollektor",image:"09726bf92556fc12b55ec5ee00516af0223b7713",smallImage:"90b2366b4c96638a1a8b419a1c9ad762147ef38a",hash:M.t.collector,grade:N.none},[M.t.general]:{name:"General",image:"4b999ea0089c6358b5531635b37e280cfae62da2",smallImage:"3885fd784f5ccbda9f9a30040b1dffc98e204305",hash:M.t.general,grade:N.none},[M.t.researcher]:{name:"Forscher",image:"55f7003a5cf07e52b38f11b81129ac5042dff4da",smallImage:"0fad76886bc161e860f8ffb04a1838ba21e377e6",hash:M.t.researcher,grade:N.none},[M.t.trader]:{name:"Händler",image:"5df93e894bb92e987219fc9d669c9a276ceb5499",smallImage:"b52a99657970f97a8881f2493be63e3a58c8d49f",hash:M.t.trader,grade:N.none},[M.t.warrior]:{name:"Krieger",image:"48ca2adbb95b37db83777b659cfc4042c179fece",smallImage:"a2d0a5aa06f932c7ecbd76906d44d4b46e338600",hash:M.t.warrior,grade:N.none},[M.t.metalBooster_bronze_1day]:{hash:M.t.metalBooster_bronze_1day,smallImage:"",image:"61b6be10761f20795844e467916f8cc2802dd680",name:"Metall-Booster Bronze (1 Tag)",grade:N.bronze},[M.t.metalBooster_bronze_7days]:{hash:M.t.metalBooster_bronze_7days,smallImage:"cea22d098a0b48c8960101e05c0bd2a7fadc72c5",image:"7f833a0709db862070ca9cdca8e91c28e52432af",name:"Metall-Booster Bronze (7 Tage)",grade:N.bronze},[M.t.metalBooster_silver_7days]:{name:"Metall-Booster Silber (7 Tage)",image:"db8f26a29991086cadd9db7deff044d89cd47de",smallImage:"1ab70d0954b4ebbb91e020c60afbaacb28707e5d",hash:M.t.metalBooster_silver_7days,grade:N.silver},[M.t.metalBooster_silver_30days]:{name:"Metall-Booster Silber (30 Tage)",image:"2bd0b5df51b77a3cb65d01568171cb991e047ac5",smallImage:"5e62926be58e94ebb28a231ecad87f8e852d0f6d",hash:M.t.metalBooster_silver_30days,grade:N.silver},[M.t.metalBooster_silver_90days]:{name:"Metall-Booster Silber (90 Tage)",image:"6b4ea2ced99211b1b9f0b84fb8a312f0f053a366",smallImage:"2e4d16cdaec1ea8ba2af28c914bb80f4d0939ce3",hash:M.t.metalBooster_silver_90days,grade:N.silver},[M.t.metalBooster_gold_7days]:{name:"Metall-Booster Gold (7 Tage)",image:"3d0e872a750a6dae2f2a5a7011ec79794bb0e676",smallImage:"780aa9d6619ae572a318dacc29e7bb77ad980380",hash:M.t.metalBooster_gold_7days,grade:N.gold},[M.t.metalBooster_gold_30days]:{name:"Metall-Booster Gold (30 Tage)",image:"eacc8d23eef74f5dd4b91b99a654e0d63450fa07",smallImage:"9132f52e224e6ba87677e5ccc5cd1391320cf7d2",hash:M.t.metalBooster_gold_30days,grade:N.gold},[M.t.metalBooster_gold_90days]:{name:"Metall-Booster Gold (90 Tage)",image:"b5ed0c10e3396c3cbab4dff2a778e2676f7b936a",smallImage:"a0cba1aa5de23e877b10b196f40855bafc91256c",hash:M.t.metalBooster_gold_90days,grade:N.gold},[M.t.metalBooster_platinum_7days]:{name:"Metall-Booster Platin (7 Tage)",image:"34752e40512a574a74464006d326bd6aebecb1f1",smallImage:"b29918a7d1f313fd91d788c9c444dfbe996640ee",hash:M.t.metalBooster_platinum_7days,grade:N.platinum},[M.t.metalBooster_platinum_30days]:{name:"Metall-Booster Platin (30 Tage)",image:"ff1ad1a6d5879cb0ea720199c9eb6518584f0922",smallImage:"ce3bb161706f1788c893b3196834d67102318866",hash:M.t.metalBooster_platinum_30days,grade:N.platinum},[M.t.metalBooster_platinum_90days]:{name:"Metall-Booster Platin (90 Tage)",image:"ff96652e498d26f8d2621b0599808860f11ee31c",smallImage:"e17ff7930eb79c7207502348180a2b4a437474d4",hash:M.t.metalBooster_platinum_90days,grade:N.platinum},[M.t.crystalBooster_bronze_1day]:{hash:M.t.crystalBooster_bronze_1day,image:"c6772214b0a510ee02d69fbd6c4bd6eae609a3f8",smallImage:"",name:"Kristall-Booster Bronze (1 Tag)",grade:N.bronze},[M.t.crystalBooster_bronze_7days]:{hash:M.t.crystalBooster_bronze_7days,image:"ddedd2f4128678c7c857af7e5550e397f50f38c2",smallImage:"286f3eaf6072f55d8858514b159d1df5f16a5654",name:"Kristall-Booster Bronze (7 Tage)",grade:N.bronze},[M.t.crystalBooster_silver_7days]:{name:"Kristall-Booster Silber (7 Tage)",image:"6e1d20e739c143784d10e58ddb4c50c52122a40a",smallImage:"a703be5a40a8fe8128466721f5f925ae1e86d13a",hash:M.t.crystalBooster_silver_7days,grade:N.silver},[M.t.crystalBooster_silver_30days]:{name:"Kristall-Booster Silber (30 Tage)",image:"4cb9628975e286b2cf4949ef4d216bccc1813a77",smallImage:"2746f4d2372da032f4daa294606ee88e5ca7a46a",hash:M.t.crystalBooster_silver_30days,grade:N.silver},[M.t.crystalBooster_silver_90days]:{name:"Kristall-Booster Silber (90 Tage)",image:"23f7d50e917ed39c5b755b95786e8cf4c4141279",smallImage:"60a0fee6f82b2b4cec6928c1b052ac586f0b2a0d",hash:M.t.crystalBooster_silver_90days,grade:N.silver},[M.t.crystalBooster_gold_7days]:{name:"Kristall-Booster Gold (7 Tage)",image:"bdb4508609de1df58bf4a6108fff73078c89f777",smallImage:"206bc65589c10c31b645c34991c12fc8556165b2",hash:M.t.crystalBooster_gold_7days,grade:N.gold},[M.t.crystalBooster_gold_30days]:{name:"Kristall-Booster Gold (30 Tage)",image:"5b84505319073e6b71900cfd059657750317ae23",smallImage:"627957046e2d5315bf13104e258ca0ea37ca7489",hash:M.t.crystalBooster_gold_30days,grade:N.gold},[M.t.crystalBooster_gold_90days]:{name:"Kristall-Booster Gold (90 Tage)",image:"efdf5966695a147aaa26442f811346e8b749ec6d",smallImage:"11d508fc74f136dde21fe9506cad6db3d43149d5",hash:M.t.crystalBooster_gold_90days,grade:N.gold},[M.t.crystalBooster_platinum_7days]:{name:"Kristall-Booster Platin (7 Tage)",image:"9952055cf47d116eedeec429a469b61abdf6ce72",smallImage:"5650071c78c9fcf9681fc2c780694de96de29c1b",hash:M.t.crystalBooster_platinum_7days,grade:N.platinum},[M.t.crystalBooster_platinum_30days]:{name:"Kristall-Booster Platin (30 Tage)",image:"d4e203516d95ae28081a3d985818e2df5a2475d4",smallImage:"d3f3321fcd999f657e9dc4ccf9cb34731524123f",hash:M.t.crystalBooster_platinum_30days,grade:N.platinum},[M.t.crystalBooster_platinum_90days]:{name:"Kristall-Booster Platin (90 Tage)",image:"5a16b583800c72b8eef5585fd5aa0bbd8e5c2c0f",smallImage:"5e33a2cfb73e9054540c5172f66b770b28765475",hash:M.t.crystalBooster_platinum_90days,grade:N.platinum},[M.t.deuteriumBooster_bronze_1day]:{hash:M.t.deuteriumBooster_bronze_1day,image:"5f7a90f4d43866b781c61f7511bb8363252639a4",smallImage:"",name:"Deuterium-Booster Bronze (1 Tag)",grade:N.bronze},[M.t.deuteriumBooster_bronze_7days]:{hash:M.t.deuteriumBooster_bronze_7days,smallImage:"f0e514af79d0808e334e9b6b695bf864b861bdfa",image:"c7c2837a0b341d37383d6a9d8f8986f500db7bf9",name:"Deuterium-Booster Bronze (7 Tage)",grade:N.bronze},[M.t.deuteriumBooster_silver_7days]:{name:"Deuterium-Booster Silber (7 Tage)",image:"7d3064415ec1a60100db024471fb0c1fa8ab3726",smallImage:"d5c2ed6852d80e61359aef62171ec7c932fc3bd7",hash:M.t.deuteriumBooster_silver_7days,grade:N.silver},[M.t.deuteriumBooster_silver_30days]:{name:"Deuterium-Booster Silber (30 Tage)",image:"7c48195115d4b4c97ac5b651b0cd766463631b7a",smallImage:"14a51990fe394912463be7a591b8c3fd41a47aad",hash:M.t.deuteriumBooster_silver_30days,grade:N.silver},[M.t.deuteriumBooster_silver_90days]:{name:"Deuterium-Booster Silber (90 Tage)",image:"c7850b988587f08689f6d2d8e579bfde146525dd",smallImage:"b4c6a0e05891b6bfd9509bd92b6653d61fdae8e5",hash:M.t.deuteriumBooster_silver_90days,grade:N.silver},[M.t.deuteriumBooster_gold_7days]:{name:"Deuterium-Booster Gold (7 Tage)",image:"d52a66ed7b32cf220746cc3618a885876fce520e",smallImage:"db408084e3b2b7b0e1fe13d9f234d2ebd76f11c5",hash:M.t.deuteriumBooster_gold_7days,grade:N.gold},[M.t.deuteriumBooster_gold_30days]:{name:"Deuterium-Booster Gold (30 Tage)",image:"b5d2db0f5428b76ce91a51daea5959426053e973",smallImage:"9f8eab23fd888c7d3c5a07e0d250a66f017ecec7",hash:M.t.deuteriumBooster_gold_30days,grade:N.gold},[M.t.deuteriumBooster_gold_90days]:{name:"Deuterium-Booster Gold (90 Tage)",image:"b4abecddc518baa61d2f2004687cfbd89d34e7c7",smallImage:"4c7de7803df3ccb01d546ebce9e71379b1c49719",hash:M.t.deuteriumBooster_gold_90days,grade:N.gold},[M.t.deuteriumBooster_platinum_7days]:{name:"Deuterium-Booster Platin (7 Tage)",image:"2d1d4247ba12a3185bfd423023b7b551cf841ac3",smallImage:"7a10926f00a92b563713ade10f89777a98efd96c",hash:M.t.deuteriumBooster_platinum_7days,grade:N.platinum},[M.t.deuteriumBooster_platinum_30days]:{name:"Deuterium-Booster Platin (30 Tage)",image:"8245a9d21fb27088b25d48ae024e9382fcea1448",smallImage:"d9b86d155a459c658cb7bfca594ce4b48e24546b",hash:M.t.deuteriumBooster_platinum_30days,grade:N.platinum},[M.t.deuteriumBooster_platinum_90days]:{name:"Deuterium-Booster Platin (90 Tage)",image:"55a877e91716da736ccec66817e611a61c9a1e4a",smallImage:"55966a0911221acfc9b7a88791a2846f659a1e29",hash:M.t.deuteriumBooster_platinum_90days,grade:N.platinum},[M.t.energyBooster_bronze_7days]:{name:"Energie-Booster Bronze (7 Tage)",image:"daba686ad7f01a5d1e8b28bd13a1a9d1b8efe19c",smallImage:"a020705ab782f54a75244eefaee69019d4f25abb",hash:M.t.energyBooster_bronze_7days,grade:N.bronze},[M.t.energyBooster_silver_7days]:{name:"Energie-Booster Silber (7 Tage)",image:"78277dabf424cfe6d902fcb67c10d7a81686a51f",smallImage:"162edd06c200f8eb655f31e5c6b98c89fabd7f82",hash:M.t.energyBooster_silver_7days,grade:N.silver},[M.t.energyBooster_silver_30days]:{name:"Energie-Booster Silber (30 Tage)",image:"009ba047272acf73dfacca91dbef8e9c3b8d5a29",smallImage:"24e7e9df03218996c2bc8fd7629bce7bb735e083",hash:M.t.energyBooster_silver_30days,grade:N.silver},[M.t.energyBooster_silver_90days]:{name:"Energie-Booster Silber (90 Tage)",image:"0b9e7bcf137a106982345e37a33127400e201ffa",smallImage:"3f1c1c7bec997542f706afab4e3e31e89473875a",hash:M.t.energyBooster_silver_90days,grade:N.silver},[M.t.energyBooster_gold_7days]:{name:"Energie-Booster Gold (7 Tage)",image:"8c59dc4096d4cbddfc83a3a29ed6a64fa4696388",smallImage:"a1fd30dc5e5a3d0c68bb0116a45e1303ae8d3d70",hash:M.t.energyBooster_gold_7days,grade:N.gold},[M.t.energyBooster_gold_30days]:{name:"Energie-Booster Gold (30 Tage)",image:"76bc563f528108c6d65b8f3a75789d929e2eae2b",smallImage:"067d550b6153abc635b3c1dc5455ce2b75957758",hash:M.t.energyBooster_gold_30days,grade:N.gold},[M.t.energyBooster_gold_90days]:{name:"Energie-Booster Gold (90 Tage)",image:"e7153f5de2c83321c908c2c3fcb76fb874547b5d",smallImage:"ad67e4e7cc75c80a9d4e4424e2e44808312d1bbf",hash:M.t.energyBooster_gold_90days,grade:N.gold},[M.t.energyBooster_platinum_7days]:{name:"Energie-Booster Platin (7 Tage)",image:"a09b4c480b8b6971d73cc6d5102e4c2d217f51aa",smallImage:"253e0610c53379ce1c99410b23be2d49ee869d45",hash:M.t.energyBooster_platinum_7days,grade:N.platinum},[M.t.energyBooster_platinum_30days]:{name:"Energie-Booster Platin (30 Tage)",image:"9d13f9cd483fe22e01f33ada7511677fa8556e4e",smallImage:"9acaa2896f0e6750d121d4b2263dc772dd36ad60",hash:M.t.energyBooster_platinum_30days,grade:N.platinum},[M.t.energyBooster_platinum_90days]:{name:"Energie-Booster Platin (90 Tage)",image:"b1013d0e9eea34419d4b2acd05c4adcd15868417",smallImage:"bcf756fab39cd83c5975c9aa7dfbc087ec0dbb3b",hash:M.t.energyBooster_platinum_90days,grade:N.platinum},[M.t.moonFields_bronze]:{name:"Mondfelder Bronze",image:"fc59d4cb4bb28d6b9f43a8dd8bdd8ff9bb36674c",smallImage:"5676f99ae9818560720d97d0061fd480ca632837",hash:M.t.moonFields_bronze,grade:N.bronze},[M.t.moonFields_silver]:{name:"Mondfelder Silber",image:"f3c070b68fcc9a9fb5189056cfcbc657daafe34e",smallImage:"61534566b7942eb2669163cc26232bd449b3f8f0",hash:M.t.moonFields_silver,grade:N.silver},[M.t.moonFields_gold]:{name:"Mondfelder Gold",image:"5dbf1cc479110bc65469477c127b81870e4af9a2",smallImage:"993278c3354e17af9e24a4b681770552518b27a6",hash:M.t.moonFields_gold,grade:N.gold},[M.t.moonFields_platinum]:{name:"Mondfelder Platin",image:"d25f5ba50e9b154aba44bd5616019450b9165b4a",smallImage:"69e30e56b80972e492b9becda4ef429724e9913f",hash:M.t.moonFields_platinum,grade:N.platinum},[M.t.moonShot_bronze]:{name:"M.O.O.N.S. Bronze",image:"261509b47bbb630462def327128eefbb8344ea86",smallImage:"a0dd8b12aa51f3f59b4897bd5f56ad3c999a69db",hash:M.t.moonShot_bronze,grade:N.bronze},[M.t.moonShot_silver]:{name:"M.O.O.N.S. Silber",image:"13ac941d1254701e2ea11a7f401ac8dd0a6a3760",smallImage:"5fcb68729c6ec78b05d7c20e6d09a9fe41dba537",hash:M.t.moonShot_silver,grade:N.silver},[M.t.moonShot_gold]:{name:"M.O.O.N.S. Gold",image:"ea9cc6187220bd33632353fca79bbabf3f9cb0be",smallImage:"35cba6d3db1f6e55e1d74f7ef7510e84c00d01b3",hash:M.t.moonShot_gold,grade:N.gold},[M.t.planetFields_bronze]:{name:"Planetenfelder Bronze",image:"34b21de1e58cdcfe271ac19798c6a877dfd7bc16",smallImage:"ed1fc6b04d67c9e6058018c76f5ed3f325a0e1f1",hash:M.t.planetFields_bronze,grade:N.bronze},[M.t.planetFields_silver]:{name:"Planetenfelder Silber",image:"67c8a380625953698ae109c3af85075419c8fe36",smallImage:"6f2193f9f8714cdf9f15b6cdfed791fd8fc1de0a",hash:M.t.planetFields_silver,grade:N.silver},[M.t.planetFields_gold]:{name:"Planetenfelder Gold",image:"ddc59021e1e5cec24be946c7f2dcc55721a540fa",smallImage:"ea8aa572c703894eba463a0961065fabafcac334",hash:M.t.planetFields_gold,grade:N.gold},[M.t.planetFields_platinum]:{name:"Planetenfelder Platin",image:"9771e15c04acfadc55cbd513efc8235ccfe5205d",smallImage:"180da4a7942369943d5a7ef8ce155276ff66b64f",hash:M.t.planetFields_platinum,grade:N.platinum},[M.t.resourcePackage_all]:{name:"Komplettes Ressourcenpaket",image:"18145145a76b71f151ba97b7c17891a5389ceeb5",smallImage:"baf833b54bdb312d955cbf323d810bc6b24578d0",hash:M.t.resourcePackage_all,grade:N.none},[M.t.resourcePackage_metal]:{name:"Metallpaket",image:"0bd67f2ea31a389bfd33629b4e611e9261597c81",smallImage:"4077be1c061371b031604a0212611965c363a0b2",hash:"859d82d16b83848f7365d21949b3e1e63c7841f",grade:N.none},[M.t.resourcePackage_crystal]:{name:"Kristallpaket",image:"c48c8ca23fb22d8860962109799a1f2e0285a64e",smallImage:"0b42850ea2014b8ace8db5b69bcee1475a881291",hash:M.t.resourcePackage_crystal,grade:N.none},[M.t.resourcePackage_deuterium]:{name:"Deuteriumpaket",image:"c7e79db86d95d22b033627c706cb47d9342f5ec1",smallImage:"d4971620d3a2605afaac00736793fd942cd3ad35",hash:M.t.resourcePackage_deuterium,grade:N.none},[M.t.kraken_bronze]:{hash:M.t.kraken_bronze,image:"98629d11293c9f2703592ed0314d99f320f45845",smallImage:"bc4e2315f7db4286ba72a424a32c920e78af8e27",name:"KRAKEN Bronze",grade:N.bronze},[M.t.kraken_silver]:{hash:M.t.kraken_silver,image:"1ee55efe00bb03743ca031a9eaa1374bb936d863",smallImage:"7dcc0cb51f4514a339847e7f9129c99457066b50",name:"KRAKEN Silber",grade:N.silver},[M.t.kraken_gold]:{hash:M.t.kraken_gold,image:"40a1644e104985a3e72da28b76069197128f9fb5",smallImage:"3e11d31fcf81e4c6eb48e74e2d434d5fa50e9c31",name:"KRAKEN Gold",grade:N.gold},[M.t.kraken_platinum]:{hash:M.t.kraken_platinum,image:"59d0d098bdffad7faa5e5b3d17dd7799188500de",smallImage:"7886511210aaf1c2ea23b66b5d0dbf003ac25db8",name:"KRAKEN Platin",grade:N.platinum},[M.t.detroid_bronze]:{hash:M.t.detroid_bronze,image:"56724c3a1dcae8036bb172f0be833a6f9a28bc27",smallImage:"610b867a8841d4a4c949d8a59719243580456452",name:"DETROID Bronze",grade:N.bronze},[M.t.detroid_silver]:{hash:M.t.detroid_silver,image:"d0b8fb3d307b815b3182f3872e8eab654fe677df",smallImage:"8b60b23f428ed54bad7f81295b4c303fd1defbe4",name:"DETROID Silber",grade:N.silver},[M.t.detroid_gold]:{hash:M.t.detroid_gold,image:"55d4b1750985e4843023d7d0acd2b9bafb15f0b7",smallImage:"f46e7c8bdd1ea9bed4f0cb998199c478762a18a7",name:"DETROID Gold",grade:N.gold},[M.t.detroid_platinum]:{hash:M.t.detroid_platinum,image:"5fe7fc5e764286b3f588ef488df593235671a661",smallImage:"9f6cdd9c0bfc9df332318e9e7602db5169726c54",name:"DETROID Platin",grade:N.platinum},[M.t.newtron_bronze]:{hash:M.t.newtron_bronze,image:"4bc4327a3fd508b5da84267e2cfd58d47f9e4dcb",smallImage:"2a974711651e1b38cb8d840ccc15259c49726b75",name:"NEWTRON Bronze",grade:N.bronze},[M.t.newtron_silver]:{hash:M.t.newtron_silver,image:"a92734028d1bf2e75c5c25ae134b4d298a5ca36e",smallImage:"2ca40705737c0bc51107bfca49643487c510ac4a",name:"NEWTRON Silber",grade:N.silver},[M.t.newtron_gold]:{hash:M.t.newtron_gold,image:"d949732b01a7f7f6d92e814f2de99479a324e1e3",smallImage:"014827f6d1d5b78b1edd0d4476db05639e7d9367",name:"NEWTRON Gold",grade:N.gold},[M.t.newtron_platinum]:{hash:M.t.newtron_platinum,image:"c533ada7cad2164f322748638236b38c02aeaea0",smallImage:"141b0c6fcb652b2c2a4c598e37a620f9172c7d32",name:"NEWTRON Platin",grade:N.platinum},[M.t.lifeformKraken_bronze]:{hash:M.t.lifeformKraken_bronze,image:"4834adbcab85f74ad1a2030e3eccc89f35c9cfbb",smallImage:"fe38c0ce79edcf0fa53a8a6aebd58d5d27d0e1fd",name:"KRAKEN Bronze (Lifeform)",grade:N.bronze},[M.t.lifeformKraken_silver]:{hash:M.t.lifeformKraken_silver,image:"27f5d8ceafc520bcc0f7071981aff62aaefa796b",smallImage:"fb0017c2f817bc4c9b94336c2b0d845e08fbe06b",name:"KRAKEN Silber (Lifeform)",grade:N.silver},[M.t.lifeformKraken_gold]:{hash:M.t.lifeformKraken_gold,image:"d3ed9dfe986ecba129b4a4580d1709acbc732139",smallImage:"b754fae952ba44a4ee0aea13d2d4bc99cd73b069",name:"KRAKEN Gold (Lifeform)",grade:N.gold},[M.t.lifeformKraken_platinum]:{hash:M.t.lifeformKraken_platinum,image:"27fc57078a3df32bc3db4db076e7040d20d1dcc3",smallImage:"94849b2f1461d41042096eb8ad536820731a4a5f",name:"KRAKEN Platin (Lifeform)",grade:N.platinum},[M.t.lifeformNewtron_bronze]:{hash:M.t.lifeformNewtron_bronze,image:"be56c3b36189b16830e07a625f182fe4ab75b878",smallImage:"014b7b201f1fc889f6c5da1757a60e0b759c5ec1",name:"NEWTRON Bronze (Lifeform)",grade:N.bronze},[M.t.lifeformNewtron_silver]:{hash:M.t.lifeformNewtron_silver,image:"d7ffe87869bafd8ec84c8d50774861d7c716985b",smallImage:"30c32146a7926d10b1be12cff6f19771836d0e46",name:"NEWTRON Silber (Lifeform)",grade:N.silver},[M.t.lifeformNewtron_gold]:{hash:M.t.lifeformNewtron_gold,image:"3fbe027e0579e94fe88d873857a28d22d6b2411b",smallImage:"5cd1c6979271dee76c1eb096a5ed940e2c1da705",name:"NEWTRON Gold (Lifeform)",grade:N.gold},[M.t.lifeformNewtron_platinum]:{hash:M.t.lifeformNewtron_platinum,image:"c8b583a18c98a93041ccc82269af5886e972403e",smallImage:"8b6043a1c79f378b5cef68439e40c1be387ade42",name:"NEWTRON Platin (Lifeform)",grade:N.platinum},[M.t.expeditionslots_bronze_7days]:{hash:M.t.expeditionslots_bronze_7days,image:"40224d1fb7b7d7a244b2f40d3cf281dcf484cfd3",smallImage:"0b8fc29be235051208ea31248a0861b2f89e3f4f",name:"Expeditionslots Bronze (7 Tage)",grade:N.bronze},[M.t.expeditionslots_bronze_30days]:{hash:M.t.expeditionslots_bronze_7days,image:"a59682857b7a632c4bef319f0ef79f0c3bdba5c9",smallImage:"a229f220ebffccbb9325817261b32fcbe5d38e80",name:"Expeditionslots Bronze (30 Tage)",grade:N.bronze},[M.t.expeditionslots_bronze_90days]:{hash:M.t.expeditionslots_bronze_90days,image:"dcd22251b799c72a98bf4c425166335165f95a9f",smallImage:"8d70a785cd10a9ecc7ba2523e434ad7e2f421dd4",name:"Expeditionslots Bronze (90 Tage)",grade:N.bronze},[M.t.expeditionslots_silver_7days]:{hash:M.t.expeditionslots_silver_7days,image:"dbaa137369a212345f0ab33e18f8bb2335f9bedf",smallImage:"7ce87a5a3875a7dd5e2a98cf5047cdbb9b1d6a41",name:"Expeditionslots Silber (7 Tage)",grade:N.silver},[M.t.expeditionslots_silver_30days]:{hash:M.t.expeditionslots_silver_30days,image:"2f3ee731849024bfef85eb8c7389bb65e8f6be61",smallImage:"6d8d8b7a1b99bb14868646abfe8fab38d13451f5",name:"Expeditionslots Silber (30 Tage)",grade:N.silver},[M.t.expeditionslots_silver_90days]:{hash:M.t.expeditionslots_silver_90days,image:"4d5123202c051020a7341d2ea3599b4869945319",smallImage:"5adfefb8220ab03007a0ada97b493a89ba97faae",name:"Expeditionslots Silber (90 Tage)",grade:N.silver},[M.t.expeditionslots_gold_7days]:{hash:M.t.expeditionslots_gold_7days,image:"ea4ec7669692e5b91dde58fc5fa606b7e1f22578",smallImage:"641f4b83c91f51f7bb3b884d883e70776953fcef",name:"Expeditionslots Gold (7 Tage)",grade:N.gold},[M.t.expeditionslots_gold_30days]:{hash:M.t.expeditionslots_gold_30days,image:"1ba0e8436af518f0014af352af7d20c8d174fb53",smallImage:"ce43c48b7ef200236ce251a8c89f9214262deebe",name:"Expeditionslots Gold (30 Tage)",grade:N.gold},[M.t.expeditionslots_gold_90days]:{hash:M.t.expeditionslots_gold_7days,image:"aede22854d3e8e46cb93dad726ad2b7edf9d235f",smallImage:"db28835101052547db777287667853d0a465b207",name:"Expeditionslots Gold (90 Tage)",grade:N.gold},[M.t.fleetSlots_bronze_7days]:{hash:M.t.fleetSlots_bronze_7days,image:"446d0d01503f8b845c3d3330c4dab673166570e1",smallImage:"0eb11ec1e956a5991eb4eba2bcdf3f4062362df2",name:"Flottenslots Bronze (7 Tage)",grade:N.bronze},[M.t.fleetSlots_bronze_30days]:{hash:M.t.fleetSlots_bronze_30days,image:"8ab6d921069f01d8cb843f4bc37f51e5cf0c4318",smallImage:"bec85c7b4868bdd5d634d50de17d8c17d56d40b5",name:"Flottenslots Bronze (30 Tage)",grade:N.bronze},[M.t.fleetSlots_bronze_90days]:{hash:M.t.fleetSlots_bronze_90days,image:"a61bbfc57d4b70abff2365005bbcaf918796d784",smallImage:"6e6c6061005786c1c2ccc16bf72488127adddda8",name:"Flottenslots Bronze (90 Tage)",grade:N.bronze},[M.t.fleetSlots_silver_7days]:{hash:M.t.fleetSlots_silver_7days,image:"d38f4e83f906ad747ec2601da836c0b11703e3b3",smallImage:"3e502c0a1f0462bd7e9589294934029f7f0af099",name:"Flottenslots Silber (7 Tage)",grade:N.silver},[M.t.fleetSlots_silver_30days]:{hash:M.t.fleetSlots_silver_30days,image:"8a133b938e57285a3de891dd4b82b594d4e808a3",smallImage:"bd55a2e08d6cc320646bbaf420d05cdf243db312",name:"Flottenslots Silber (30 Tage)",grade:N.silver},[M.t.fleetSlots_silver_90days]:{hash:M.t.fleetSlots_silver_90days,image:"f7fc4e566869a8661ac5ef4a75ef9bd5fa5024e1",smallImage:"48e9a782b39199d3bb9f614ebd5d4a3804656079",name:"Flottenslots Silber (90 Tage)",grade:N.silver},[M.t.fleetSlots_gold_7days]:{hash:M.t.fleetSlots_gold_7days,image:"4db5665750dfb83bb958280ffd500c7105574068",smallImage:"94619b2c741bdc50c440147eefffd79ac5089b0e",name:"Flottenslots Gold (7 Tage)",grade:N.gold},[M.t.fleetSlots_gold_30days]:{hash:M.t.fleetSlots_gold_30days,image:"2fa215f7fe22370b9fd83796dc6baa17aed3f75a",smallImage:"b11fd1374eb6ceac0a9c7788bb3d3d03afb35a12",name:"Flottenslots Gold (30 Tage)",grade:N.gold},[M.t.fleetSlots_gold_90days]:{hash:M.t.fleetSlots_gold_90days,image:"fa17391a273844ee8e71d4625ce7381b458cf1ad",smallImage:"9e654ae49607c0ddcc87633bf7372b976fd7e183",name:"Flottenslots Gold (90 Tage)",grade:N.gold},[M.t.discoverer_pts]:{name:"Entdecker",image:"3ecbd5114c3b663aa1a1252fc03091eecc790f10",smallImage:"e9278159a8c40e2e9337ba3495f0b5af1e2c9d05",hash:M.t.discoverer,grade:N.none},[M.t.collector_pts]:{name:"Kollektor",image:"09726bf92556fc12b55ec5ee00516af0223b7713",smallImage:"90b2366b4c96638a1a8b419a1c9ad762147ef38a",hash:M.t.collector,grade:N.none},[M.t.general_pts]:{name:"General",image:"4b999ea0089c6358b5531635b37e280cfae62da2",smallImage:"3885fd784f5ccbda9f9a30040b1dffc98e204305",hash:M.t.general,grade:N.none},[M.t.researcher_pts]:{name:"Forscher",image:"55f7003a5cf07e52b38f11b81129ac5042dff4da",smallImage:"0fad76886bc161e860f8ffb04a1838ba21e377e6",hash:M.t.researcher,grade:N.none},[M.t.trader_pts]:{name:"Händler",image:"5df93e894bb92e987219fc9d669c9a276ceb5499",smallImage:"b52a99657970f97a8881f2493be63e3a58c8d49f",hash:M.t.trader,grade:N.none},[M.t.warrior_pts]:{name:"Krieger",image:"48ca2adbb95b37db83777b659cfc4042c179fece",smallImage:"a2d0a5aa06f932c7ecbd76906d44d4b46e338600",hash:M.t.warrior,grade:N.none},[M.t.metalBooster_bronze_30days_pts]:{name:"Metall-Booster Bronze (30 Tage)",image:"5d5f545b5c5969593c1bf4198da2664db75857b9",smallImage:"",hash:M.t.metalBooster_bronze_30days_pts,grade:N.bronze},[M.t.metalBooster_bronze_90days_pts]:{name:"Metall-Booster Bronze (90 Tage)",image:"8bd9c40b9aae821cd7a19b24e414bf437f81191e",smallImage:"",hash:M.t.metalBooster_bronze_90days_pts,grade:N.bronze},[M.t.metalBooster_silver_30days_pts]:{name:"Metall-Booster Silber (30 Tage)",image:"2bd0b5df51b77a3cb65d01568171cb991e047ac5",smallImage:"5e62926be58e94ebb28a231ecad87f8e852d0f6d",hash:M.t.metalBooster_silver_30days,grade:N.silver},[M.t.metalBooster_silver_90days_pts]:{name:"Metall-Booster Silber (90 Tage)",image:"6b4ea2ced99211b1b9f0b84fb8a312f0f053a366",smallImage:"2e4d16cdaec1ea8ba2af28c914bb80f4d0939ce3",hash:M.t.metalBooster_silver_90days,grade:N.silver},[M.t.metalBooster_gold_30days_pts]:{name:"Metall-Booster Gold (30 Tage)",image:"eacc8d23eef74f5dd4b91b99a654e0d63450fa07",smallImage:"9132f52e224e6ba87677e5ccc5cd1391320cf7d2",hash:M.t.metalBooster_gold_30days,grade:N.gold},[M.t.metalBooster_gold_90days_pts]:{name:"Metall-Booster Gold (90 Tage)",image:"b5ed0c10e3396c3cbab4dff2a778e2676f7b936a",smallImage:"a0cba1aa5de23e877b10b196f40855bafc91256c",hash:M.t.metalBooster_gold_90days,grade:N.gold},[M.t.metalBooster_platinum_7days_pts]:{name:"Metall-Booster Platin (7 Tage)",image:"34752e40512a574a74464006d326bd6aebecb1f1",smallImage:"b29918a7d1f313fd91d788c9c444dfbe996640ee",hash:M.t.metalBooster_platinum_7days,grade:N.platinum},[M.t.metalBooster_platinum_30days_pts]:{name:"Metall-Booster Platin (30 Tage)",image:"ff1ad1a6d5879cb0ea720199c9eb6518584f0922",smallImage:"ce3bb161706f1788c893b3196834d67102318866",hash:M.t.metalBooster_platinum_30days,grade:N.platinum},[M.t.metalBooster_platinum_90days_pts]:{name:"Metall-Booster Platin (90 Tage)",image:"ff96652e498d26f8d2621b0599808860f11ee31c",smallImage:"e17ff7930eb79c7207502348180a2b4a437474d4",hash:M.t.metalBooster_platinum_90days,grade:N.platinum},[M.t.crystalBooster_bronze_30days_pts]:{name:"Kristall-Booster Bronze (30 Tage)",image:"7d4c8923bc936f09fef244db74d25413372e2217",smallImage:"",hash:M.t.crystalBooster_bronze_30days_pts,grade:N.bronze},[M.t.crystalBooster_bronze_90days_pts]:{name:"Kristall-Booster Bronze (90 Tage)",image:"479a2800c485772418e620d3a356a96a3bd7fca4",smallImage:"",hash:M.t.crystalBooster_bronze_90days_pts,grade:N.bronze},[M.t.crystalBooster_silver_30days_pts]:{name:"Kristall-Booster Silber (30 Tage)",image:"4cb9628975e286b2cf4949ef4d216bccc1813a77",smallImage:"2746f4d2372da032f4daa294606ee88e5ca7a46a",hash:M.t.crystalBooster_silver_30days,grade:N.silver},[M.t.crystalBooster_silver_90days_pts]:{name:"Kristall-Booster Silber (90 Tage)",image:"23f7d50e917ed39c5b755b95786e8cf4c4141279",smallImage:"60a0fee6f82b2b4cec6928c1b052ac586f0b2a0d",hash:M.t.crystalBooster_silver_90days,grade:N.silver},[M.t.crystalBooster_gold_30days_pts]:{name:"Kristall-Booster Gold (30 Tage)",image:"5b84505319073e6b71900cfd059657750317ae23",smallImage:"627957046e2d5315bf13104e258ca0ea37ca7489",hash:M.t.crystalBooster_gold_30days,grade:N.gold},[M.t.crystalBooster_gold_90days_pts]:{name:"Kristall-Booster Gold (90 Tage)",image:"efdf5966695a147aaa26442f811346e8b749ec6d",smallImage:"11d508fc74f136dde21fe9506cad6db3d43149d5",hash:M.t.crystalBooster_gold_90days,grade:N.gold},[M.t.crystalBooster_platinum_7days_pts]:{name:"Kristall-Booster Platin (7 Tage)",image:"9952055cf47d116eedeec429a469b61abdf6ce72",smallImage:"5650071c78c9fcf9681fc2c780694de96de29c1b",hash:M.t.crystalBooster_platinum_7days,grade:N.platinum},[M.t.crystalBooster_platinum_30days_pts]:{name:"Kristall-Booster Platin (30 Tage)",image:"d4e203516d95ae28081a3d985818e2df5a2475d4",smallImage:"d3f3321fcd999f657e9dc4ccf9cb34731524123f",hash:M.t.crystalBooster_platinum_30days,grade:N.platinum},[M.t.crystalBooster_platinum_90days_pts]:{name:"Kristall-Booster Platin (90 Tage)",image:"5a16b583800c72b8eef5585fd5aa0bbd8e5c2c0f",smallImage:"5e33a2cfb73e9054540c5172f66b770b28765475",hash:M.t.crystalBooster_platinum_90days,grade:N.platinum},[M.t.deuteriumBooster_bronze_30days_pts]:{name:"Deuterium-Booster Bronze (30 Tage)",image:"5416e185557bbd18f832feafde73fd46f3573239",smallImage:"",hash:M.t.deuteriumBooster_bronze_30days_pts,grade:N.bronze},[M.t.deuteriumBooster_bronze_90days_pts]:{name:"Deuterium-Booster Bronze (90 Tage)",image:"2bd548012a7bea6bc1227f9c904754de1cfaf0bc",smallImage:"",hash:M.t.deuteriumBooster_bronze_90days_pts,grade:N.bronze},[M.t.deuteriumBooster_silver_30days_pts]:{name:"Deuterium-Booster Silber (30 Tage)",image:"7c48195115d4b4c97ac5b651b0cd766463631b7a",smallImage:"14a51990fe394912463be7a591b8c3fd41a47aad",hash:M.t.deuteriumBooster_silver_30days,grade:N.silver},[M.t.deuteriumBooster_silver_90days_pts]:{name:"Deuterium-Booster Silber (90 Tage)",image:"c7850b988587f08689f6d2d8e579bfde146525dd",smallImage:"b4c6a0e05891b6bfd9509bd92b6653d61fdae8e5",hash:M.t.deuteriumBooster_silver_90days,grade:N.silver},[M.t.deuteriumBooster_gold_30days_pts]:{name:"Deuterium-Booster Gold (30 Tage)",image:"b5d2db0f5428b76ce91a51daea5959426053e973",smallImage:"9f8eab23fd888c7d3c5a07e0d250a66f017ecec7",hash:M.t.deuteriumBooster_gold_30days,grade:N.gold},[M.t.deuteriumBooster_gold_90days_pts]:{name:"Deuterium-Booster Gold (90 Tage)",image:"b4abecddc518baa61d2f2004687cfbd89d34e7c7",smallImage:"4c7de7803df3ccb01d546ebce9e71379b1c49719",hash:M.t.deuteriumBooster_gold_90days,grade:N.gold},[M.t.deuteriumBooster_platinum_7days_pts]:{name:"Deuterium-Booster Platin (7 Tage)",image:"2d1d4247ba12a3185bfd423023b7b551cf841ac3",smallImage:"7a10926f00a92b563713ade10f89777a98efd96c",hash:M.t.deuteriumBooster_platinum_7days,grade:N.platinum},[M.t.deuteriumBooster_platinum_30days_pts]:{name:"Deuterium-Booster Platin (30 Tage)",image:"8245a9d21fb27088b25d48ae024e9382fcea1448",smallImage:"d9b86d155a459c658cb7bfca594ce4b48e24546b",hash:M.t.deuteriumBooster_platinum_30days,grade:N.platinum},[M.t.deuteriumBooster_platinum_90days_pts]:{name:"Deuterium-Booster Platin (90 Tage)",image:"55a877e91716da736ccec66817e611a61c9a1e4a",smallImage:"55966a0911221acfc9b7a88791a2846f659a1e29",hash:M.t.deuteriumBooster_platinum_90days,grade:N.platinum},[M.t.energyBooster_bronze_30days_pts]:{hash:M.t.energyBooster_bronze_30days_pts,image:"2be67177003ef1d6b19195e100fb22d3c2ff5891",smallImage:"",name:"Energie-Booster Bronze (30 Tage)",grade:N.bronze},[M.t.energyBooster_bronze_90days_pts]:{hash:M.t.energyBooster_bronze_90days_pts,image:"abf12608d09c541979620e02a82bcd740451dd8f",smallImage:"",name:"Energie-Booster Bronze (90 Tage)",grade:N.bronze},[M.t.energyBooster_silver_7days_pts]:{name:"Energie-Booster Silber (7 Tage)",image:"78277dabf424cfe6d902fcb67c10d7a81686a51f",smallImage:"162edd06c200f8eb655f31e5c6b98c89fabd7f82",hash:M.t.energyBooster_silver_7days,grade:N.silver},[M.t.energyBooster_silver_30days_pts]:{name:"Energie-Booster Silber (30 Tage)",image:"009ba047272acf73dfacca91dbef8e9c3b8d5a29",smallImage:"24e7e9df03218996c2bc8fd7629bce7bb735e083",hash:M.t.energyBooster_silver_30days,grade:N.silver},[M.t.energyBooster_silver_90days_pts]:{name:"Energie-Booster Silber (90 Tage)",image:"0b9e7bcf137a106982345e37a33127400e201ffa",smallImage:"3f1c1c7bec997542f706afab4e3e31e89473875a",hash:M.t.energyBooster_silver_90days,grade:N.silver},[M.t.energyBooster_gold_7days_pts]:{name:"Energie-Booster Gold (7 Tage)",image:"8c59dc4096d4cbddfc83a3a29ed6a64fa4696388",smallImage:"a1fd30dc5e5a3d0c68bb0116a45e1303ae8d3d70",hash:M.t.energyBooster_gold_7days,grade:N.gold},[M.t.energyBooster_gold_30days_pts]:{name:"Energie-Booster Gold (30 Tage)",image:"76bc563f528108c6d65b8f3a75789d929e2eae2b",smallImage:"067d550b6153abc635b3c1dc5455ce2b75957758",hash:M.t.energyBooster_gold_30days,grade:N.gold},[M.t.energyBooster_gold_90days_pts]:{name:"Energie-Booster Gold (90 Tage)",image:"e7153f5de2c83321c908c2c3fcb76fb874547b5d",smallImage:"ad67e4e7cc75c80a9d4e4424e2e44808312d1bbf",hash:M.t.energyBooster_gold_90days,grade:N.gold},[M.t.energyBooster_platinum_7days_pts]:{name:"Energie-Booster Platin (7 Tage)",image:"a09b4c480b8b6971d73cc6d5102e4c2d217f51aa",smallImage:"253e0610c53379ce1c99410b23be2d49ee869d45",hash:M.t.energyBooster_platinum_7days,grade:N.platinum},[M.t.energyBooster_platinum_30days_pts]:{name:"Energie-Booster Platin (30 Tage)",image:"9d13f9cd483fe22e01f33ada7511677fa8556e4e",smallImage:"9acaa2896f0e6750d121d4b2263dc772dd36ad60",hash:M.t.energyBooster_platinum_30days,grade:N.platinum},[M.t.energyBooster_platinum_90days_pts]:{name:"Energie-Booster Platin (90 Tage)",image:"b1013d0e9eea34419d4b2acd05c4adcd15868417",smallImage:"bcf756fab39cd83c5975c9aa7dfbc087ec0dbb3b",hash:M.t.energyBooster_platinum_90days,grade:N.platinum},[M.t.resourcePackage_all_pts]:{name:"Komplettes Ressourcenpaket",image:"18145145a76b71f151ba97b7c17891a5389ceeb5",smallImage:"baf833b54bdb312d955cbf323d810bc6b24578d0",hash:M.t.resourcePackage_all,grade:N.none},[M.t.resourcePackage_metal_pts]:{name:"Metallpaket",image:"0bd67f2ea31a389bfd33629b4e611e9261597c81",smallImage:"4077be1c061371b031604a0212611965c363a0b2",hash:"859d82d16b83848f7365d21949b3e1e63c7841f",grade:N.none},[M.t.resourcePackage_crystal_pts]:{name:"Kristallpaket",image:"c48c8ca23fb22d8860962109799a1f2e0285a64e",smallImage:"0b42850ea2014b8ace8db5b69bcee1475a881291",hash:M.t.resourcePackage_crystal,grade:N.none},[M.t.resourcePackage_deuterium_pts]:{name:"Deuteriumpaket",image:"c7e79db86d95d22b033627c706cb47d9342f5ec1",smallImage:"d4971620d3a2605afaac00736793fd942cd3ad35",hash:M.t.resourcePackage_deuterium,grade:N.none},[M.t.detroid_mechaShipyard_bronze_pts]:{hash:M.t.detroid_mechaShipyard_bronze_pts,image:"56724c3a1dcae8036bb172f0be833a6f9a28bc27",smallImage:"610b867a8841d4a4c949d8a59719243580456452",name:"DETROID Bronze (Mecha-Shipyard)",grade:N.bronze},[M.t.lifeformKraken_bronze_pts]:{hash:M.t.lifeformKraken_bronze_pts,image:"4834adbcab85f74ad1a2030e3eccc89f35c9cfbb",smallImage:"fe38c0ce79edcf0fa53a8a6aebd58d5d27d0e1fd",name:"KRAKEN Bronze (Lifeform)",grade:N.bronze},[M.t.lifeformKraken_silver_pts]:{hash:M.t.lifeformKraken_silver_pts,image:"27f5d8ceafc520bcc0f7071981aff62aaefa796b",smallImage:"fb0017c2f817bc4c9b94336c2b0d845e08fbe06b",name:"KRAKEN Silber (Lifeform)",grade:N.silver},[M.t.lifeformKraken_gold_pts]:{hash:M.t.lifeformKraken_gold_pts,image:"d3ed9dfe986ecba129b4a4580d1709acbc732139",smallImage:"b754fae952ba44a4ee0aea13d2d4bc99cd73b069",name:"KRAKEN Gold (Lifeform)",grade:N.gold},[M.t.lifeformKraken_platinum_pts]:{hash:M.t.lifeformKraken_platinum_pts,image:"27fc57078a3df32bc3db4db076e7040d20d1dcc3",smallImage:"94849b2f1461d41042096eb8ad536820731a4a5f",name:"KRAKEN Platin (Lifeform)",grade:N.platinum},[M.t.lifeformNewtron_bronze_pts]:{hash:M.t.lifeformNewtron_bronze_pts,image:"be56c3b36189b16830e07a625f182fe4ab75b878",smallImage:"014b7b201f1fc889f6c5da1757a60e0b759c5ec1",name:"NEWTRON Bronze (Lifeform)",grade:N.bronze},[M.t.lifeformNewtron_silver_pts]:{hash:M.t.lifeformNewtron_silver_pts,image:"d7ffe87869bafd8ec84c8d50774861d7c716985b",smallImage:"30c32146a7926d10b1be12cff6f19771836d0e46",name:"NEWTRON Silber (Lifeform)",grade:N.silver},[M.t.lifeformNewtron_gold_pts]:{hash:M.t.lifeformNewtron_gold_pts,image:"3fbe027e0579e94fe88d873857a28d22d6b2411b",smallImage:"5cd1c6979271dee76c1eb096a5ed940e2c1da705",name:"NEWTRON Gold (Lifeform)",grade:N.gold},[M.t.lifeformNewtron_platinum_pts]:{hash:M.t.lifeformNewtron_platinum_pts,image:"c8b583a18c98a93041ccc82269af5886e972403e",smallImage:"8b6043a1c79f378b5cef68439e40c1be387ade42",name:"NEWTRON Platin (Lifeform)",grade:N.platinum},[M.t.expeditionslots_bronze_7days_pts]:{hash:M.t.expeditionslots_bronze_7days,image:"40224d1fb7b7d7a244b2f40d3cf281dcf484cfd3",smallImage:"0b8fc29be235051208ea31248a0861b2f89e3f4f",name:"Expeditionslots Bronze (7 Tage)",grade:N.bronze},[M.t.expeditionslots_bronze_30days_pts]:{hash:M.t.expeditionslots_bronze_7days,image:"a59682857b7a632c4bef319f0ef79f0c3bdba5c9",smallImage:"a229f220ebffccbb9325817261b32fcbe5d38e80",name:"Expeditionslots Bronze (30 Tage)",grade:N.bronze},[M.t.expeditionslots_bronze_90days_pts]:{hash:M.t.expeditionslots_bronze_90days,image:"dcd22251b799c72a98bf4c425166335165f95a9f",smallImage:"8d70a785cd10a9ecc7ba2523e434ad7e2f421dd4",name:"Expeditionslots Bronze (90 Tage)",grade:N.bronze},[M.t.expeditionslots_silver_7days_pts]:{hash:M.t.expeditionslots_silver_7days,image:"dbaa137369a212345f0ab33e18f8bb2335f9bedf",smallImage:"7ce87a5a3875a7dd5e2a98cf5047cdbb9b1d6a41",name:"Expeditionslots Silber (7 Tage)",grade:N.silver},[M.t.expeditionslots_silver_30days_pts]:{hash:M.t.expeditionslots_silver_30days,image:"2f3ee731849024bfef85eb8c7389bb65e8f6be61",smallImage:"6d8d8b7a1b99bb14868646abfe8fab38d13451f5",name:"Expeditionslots Silber (30 Tage)",grade:N.silver},[M.t.expeditionslots_silver_90days_pts]:{hash:M.t.expeditionslots_silver_90days,image:"4d5123202c051020a7341d2ea3599b4869945319",smallImage:"5adfefb8220ab03007a0ada97b493a89ba97faae",name:"Expeditionslots Silber (90 Tage)",grade:N.silver},[M.t.expeditionslots_gold_7days_pts]:{hash:M.t.expeditionslots_gold_7days,image:"ea4ec7669692e5b91dde58fc5fa606b7e1f22578",smallImage:"641f4b83c91f51f7bb3b884d883e70776953fcef",name:"Expeditionslots Gold (7 Tage)",grade:N.gold},[M.t.expeditionslots_gold_30days_pts]:{hash:M.t.expeditionslots_gold_30days,image:"1ba0e8436af518f0014af352af7d20c8d174fb53",smallImage:"ce43c48b7ef200236ce251a8c89f9214262deebe",name:"Expeditionslots Gold (30 Tage)",grade:N.gold},[M.t.expeditionslots_gold_90days_pts]:{hash:M.t.expeditionslots_gold_7days,image:"aede22854d3e8e46cb93dad726ad2b7edf9d235f",smallImage:"db28835101052547db777287667853d0a465b207",name:"Expeditionslots Gold (90 Tage)",grade:N.gold},[M.t.fleetSlots_bronze_7days_pts]:{hash:M.t.fleetSlots_bronze_7days,image:"446d0d01503f8b845c3d3330c4dab673166570e1",smallImage:"0eb11ec1e956a5991eb4eba2bcdf3f4062362df2",name:"Flottenslots Bronze (7 Tage)",grade:N.bronze},[M.t.fleetSlots_bronze_30days_pts]:{hash:M.t.fleetSlots_bronze_30days,image:"8ab6d921069f01d8cb843f4bc37f51e5cf0c4318",smallImage:"bec85c7b4868bdd5d634d50de17d8c17d56d40b5",name:"Flottenslots Bronze (30 Tage)",grade:N.bronze},[M.t.fleetSlots_bronze_90days_pts]:{hash:M.t.fleetSlots_bronze_90days,image:"a61bbfc57d4b70abff2365005bbcaf918796d784",smallImage:"6e6c6061005786c1c2ccc16bf72488127adddda8",name:"Flottenslots Bronze (90 Tage)",grade:N.bronze},[M.t.fleetSlots_silver_7days_pts]:{hash:M.t.fleetSlots_silver_7days,image:"d38f4e83f906ad747ec2601da836c0b11703e3b3",smallImage:"3e502c0a1f0462bd7e9589294934029f7f0af099",name:"Flottenslots Silber (7 Tage)",grade:N.silver},[M.t.fleetSlots_silver_30days_pts]:{hash:M.t.fleetSlots_silver_30days,image:"8a133b938e57285a3de891dd4b82b594d4e808a3",smallImage:"bd55a2e08d6cc320646bbaf420d05cdf243db312",name:"Flottenslots Silber (30 Tage)",grade:N.silver},[M.t.fleetSlots_silver_90days_pts]:{hash:M.t.fleetSlots_silver_90days,image:"f7fc4e566869a8661ac5ef4a75ef9bd5fa5024e1",smallImage:"48e9a782b39199d3bb9f614ebd5d4a3804656079",name:"Flottenslots Silber (90 Tage)",grade:N.silver},[M.t.fleetSlots_gold_7days_pts]:{hash:M.t.fleetSlots_gold_7days,image:"4db5665750dfb83bb958280ffd500c7105574068",smallImage:"94619b2c741bdc50c440147eefffd79ac5089b0e",name:"Flottenslots Gold (7 Tage)",grade:N.gold},[M.t.fleetSlots_gold_30days_pts]:{hash:M.t.fleetSlots_gold_30days,image:"2fa215f7fe22370b9fd83796dc6baa17aed3f75a",smallImage:"b11fd1374eb6ceac0a9c7788bb3d3d03afb35a12",name:"Flottenslots Gold (30 Tage)",grade:N.gold},[M.t.fleetSlots_gold_90days_pts]:{hash:M.t.fleetSlots_gold_90days,image:"fa17391a273844ee8e71d4625ce7381b458cf1ad",smallImage:"9e654ae49607c0ddcc87633bf7372b976fd7e183",name:"Flottenslots Gold (90 Tage)",grade:N.gold},[M.t.migrationItem]:{hash:M.t.migrationItem,image:"16bf2c62de38daaf128fd1329efe976b9788c011",smallImage:"",name:"Migrations-Item",grade:N.none},[M.t.migrationItem_pts]:{hash:M.t.migrationItem_pts,image:"16bf2c62de38daaf128fd1329efe976b9788c011",smallImage:"",name:"Migrations-Item",grade:N.none},[M.t.shortenTime_buildings]:{name:"Bauverkürzer Gebäude",image:"22bba1f3ceab83dc24eb944d4f2aa8207390ab7c",smallImage:"22bba1f3ceab83dc24eb944d4f2aa8207390ab7c",hash:M.t.shortenTime_buildings,grade:N.none},[M.t.shortenTime_research]:{name:"Bauverkürzer Forschung",image:"959ce485c41b8713fb9c281fcd5d737331e0341c",smallImage:"959ce485c41b8713fb9c281fcd5d737331e0341c",hash:M.t.shortenTime_research,grade:N.none},[M.t.shortenTime_shipyard]:{name:"Bauverkürzer Schiffe",image:"56d76263b87b56716214c91348602908b1f46fbd",smallImage:"56d76263b87b56716214c91348602908b1f46fbd",hash:M.t.shortenTime_shipyard,grade:N.none},[M.t.shortenTime_lifeformBuildings]:{name:"Bauverkürzer Lebensformgebäude",image:"",smallImage:"",hash:M.t.shortenTime_lifeformBuildings,grade:N.none},[M.t.shortenTime_lifeformResearch]:{name:"Bauverkürzer Lebensformforschung",image:"",smallImage:"",hash:M.t.shortenTime_lifeformResearch,grade:N.none},[M.t.officer_commander]:{name:M.t.officer_commander,hash:M.t.officer_commander,grade:N.none,image:"",smallImage:""},[M.t.officer_admiral]:{name:M.t.officer_admiral,hash:M.t.officer_admiral,grade:N.none,image:"",smallImage:""},[M.t.officer_engineer]:{name:M.t.officer_engineer,hash:M.t.officer_engineer,grade:N.none,image:"",smallImage:""},[M.t.officer_geologist]:{name:M.t.officer_geologist,hash:M.t.officer_geologist,grade:N.none,image:"",smallImage:""},[M.t.officer_technocrat]:{name:M.t.officer_technocrat,hash:M.t.officer_technocrat,grade:N.none,image:"",smallImage:""}};let O=class extends n.w3{item;hideItemGrade;size;disabled;fade;showTooltip;get fullItem(){return R[this.item]}};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>M.x.includes(e)})],O.prototype,"item",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!1})],O.prototype,"hideItemGrade",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],O.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!1})],O.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!1})],O.prototype,"fade",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean,default:!1})],O.prototype,"showTooltip",void 0),O=(0,i.gn)([(0,n.wA)({})],O);const L=O,$=L;var q=(0,m.Z)($,F,z,!1,null,"2897e958",null);const H=q.exports;var G,U=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-officer",class:{"o-officer--disabled":e.disabled,"o-officer--fade":e.fade},style:{"background-image":"url(/img/ogame/officers/"+e.officer+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},K=[];(function(e){e["admiral"]="admiral",e["commander"]="commander",e["engineer"]="engineer",e["geologist"]="geologist",e["technocrat"]="technocrat"})(G||(G={}));let V=class extends n.w3{officer;size;disabled;fade};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>Object.values(G).includes(e)})],V.prototype,"officer",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],V.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],V.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],V.prototype,"fade",void 0),V=(0,i.gn)([(0,n.wA)({})],V);const j=V,W=j;var Z=(0,m.Z)(W,U,K,!1,null,"4cf337f6",null);const Y=Z.exports;var Q=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-player-class",class:{"o-player-class--disabled":e.disabled,"o-player-class--fade":e.fade},style:{"background-image":"url(/img/ogame/player-classes/"+e.image+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},J=[],X=r(602);let ee=class extends n.w3{playerClass;size;disabled;fade;get image(){return this.imageMap[this.playerClass]}imageMap={[X.D0.collector]:"collector",[X.D0.discoverer]:"explorer",[X.D0.general]:"general",[X.D0.none]:"none"}};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>X.I_.includes(e)})],ee.prototype,"playerClass",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],ee.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],ee.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],ee.prototype,"fade",void 0),ee=(0,i.gn)([(0,n.wA)({})],ee);const ae=ee,re=ae;var te=(0,m.Z)(re,Q,J,!1,null,"19e8bfa8",null);const se=te.exports;var oe=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-research",class:{"o-research--disabled":e.disabled,"o-research--fade":e.fade},style:{"background-image":"url(/img/ogame/research/"+e.image+".jpg)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},ie=[],ne=r(3738),le=r(1731);let de=class extends n.w3{research;size;disabled;fade;get image(){return this.imageMap[this.research]}imageMap={[ne.s.espionageTechnology]:"espionage-technology",[ne.s.computerTechnology]:"computer-technology",[ne.s.weaponsTechnology]:"weapons-technology",[ne.s.shieldingTechnology]:"shielding-technology",[ne.s.armorTechnology]:"armor-technology",[ne.s.energyTechnology]:"energy-technology",[ne.s.hyperspaceTechnology]:"hyperspace-technology",[ne.s.combustionDrive]:"combustion-drive",[ne.s.impulseDrive]:"impulse-drive",[ne.s.hyperspaceDrive]:"hyperspace-drive",[ne.s.laserTechnology]:"laser-technology",[ne.s.ionTechnology]:"ion-technology",[ne.s.plasmaTechnology]:"plasma-technology",[ne.s.intergalacticResearchNetwork]:"intergalactic-research-network",[ne.s.astrophysics]:"astrophysics",[ne.s.gravitonTechnology]:"graviton-technology"}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>le.N.includes(e)})],de.prototype,"research",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],de.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],de.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],de.prototype,"fade",void 0),de=(0,i.gn)([(0,n.wA)({})],de);const ce=de,ue=ce;var me=(0,m.Z)(ue,oe,ie,!1,null,"34a6c08b",null);const ge=me.exports;var pe=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-resource",class:{"o-resource--disabled":e.disabled,"o-resource--fade":e.fade},style:{"background-image":"url(/img/ogame/resources/"+e.image+".upscaled.png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},fe=[],he=r(7331);let be=class extends n.w3{resource;size;disabled;fade;get image(){return this.imageMap[this.resource]}imageMap={[he._.metal]:"metal",[he._.crystal]:"crystal",[he._.deuterium]:"deuterium",energy:"energy","dark-matter":"dark-matter"}};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>["energy","dark-matter"].includes(e)||he.P.includes(e)})],be.prototype,"resource",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],be.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],be.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],be.prototype,"fade",void 0),be=(0,i.gn)([(0,n.wA)({})],be);const ye=be,ve=ye;var _e=(0,m.Z)(ve,pe,fe,!1,null,"04d6533e",null);const we=_e.exports;var Se=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-ship",class:{"o-ship--disabled":e.disabled,"o-ship--fade":e.fade},style:{"background-image":"url(/img/ogame/ships/"+e.image+".jpg)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},ke=[],xe=r(2057),Te=r(248);let Ee=class extends n.w3{ship;size;disabled;fade;get image(){return this.imageMap[this.ship]}imageMap={[xe.g.smallCargo]:"small-cargo",[xe.g.largeCargo]:"large-cargo",[xe.g.lightFighter]:"light-fighter",[xe.g.heavyFighter]:"heavy-fighter",[xe.g.cruiser]:"cruiser",[xe.g.battleship]:"battleship",[xe.g.colonyShip]:"colony-ship",[xe.g.recycler]:"recycler",[xe.g.espionageProbe]:"espionage-probe",[xe.g.bomber]:"bomber",[xe.g.solarSatellite]:"solar-satellite",[xe.g.destroyer]:"destroyer",[xe.g.deathStar]:"death-star",[xe.g.battlecruiser]:"battlecruiser",[xe.g.crawler]:"crawler",[xe.g.reaper]:"reaper",[xe.g.pathfinder]:"pathfinder"}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>Te.GI.includes(e)})],Ee.prototype,"ship",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],Ee.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Ee.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Ee.prototype,"fade",void 0),Ee=(0,i.gn)([(0,n.wA)({})],Ee);const Be=Ee,Ce=Be;var Ae=(0,m.Z)(Ce,Se,ke,!1,null,"b21d27fe",null);const De=Ae.exports;var Pe=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-lifeform",class:[{"o-lifeform--disabled":e.disabled,"o-lifeform--fade":e.fade},"o-lifeform--"+e.lifeform],style:{"background-image":"url(/img/ogame/lifeforms/"+e.image+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},Ie=[],Ne=r(3418);let Fe=class extends n.w3{lifeform;size;disabled;fade;get image(){return this.imageMap[this.lifeform]}imageMap={[Ne.e5.humans]:"humans",[Ne.e5.rocktal]:"rocktal",[Ne.e5.mechas]:"mechas",[Ne.e5.kaelesh]:"kaelesh",[Ne.e5.none]:"none"}};(0,i.gn)([(0,n.fI)({required:!0,type:String,validator:e=>Ne.gN.includes(e)})],Fe.prototype,"lifeform",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],Fe.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Fe.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Fe.prototype,"fade",void 0),Fe=(0,i.gn)([(0,n.wA)({})],Fe);const ze=Fe,Me=ze;var Re=(0,m.Z)(Me,Pe,Ie,!1,null,"0ff91bf4",null);const Oe=Re.exports;var Le=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-lifeform-building",class:[{"o-lifeform-building--disabled":e.disabled,"o-lifeform-building--fade":e.fade},"o-lifeform-building--"+e.lifeform],style:{"background-image":"url(/img/ogame/lifeforms/buildings/"+e.image+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},$e=[],qe=r(2816);let He=class extends n.w3{building;size;disabled;fade;get image(){return this.imageMap[this.building]}imageMap={[qe.EO.residentialSector]:"residential-sector",[qe.EO.biosphereFarm]:"biosphere-farm",[qe.EO.researchCentre]:"research-centre",[qe.EO.academyOfSciences]:"academy-of-sciences",[qe.EO.neuroCalibrationCentre]:"neuro-calibration-centre",[qe.EO.highEnergySmelting]:"high-energy-smelting",[qe.EO.foodSilo]:"food-silo",[qe.EO.fusionPoweredProduction]:"fusion-powered-production",[qe.EO.skyscraper]:"skyscraper",[qe.EO.biotechLab]:"biotech-lab",[qe.EO.metropolis]:"metropolis",[qe.EO.planetaryShield]:"planetary-shield",[qe.EO.meditationEnclave]:"meditation-enclave",[qe.EO.crystalFarm]:"crystal-farm",[qe.EO.runeTechnologium]:"rune-technologium",[qe.EO.runeForge]:"rune-forge",[qe.EO.oriktorium]:"oriktorium",[qe.EO.magmaForge]:"magma-forge",[qe.EO.disruptionChamber]:"disruption-chamber",[qe.EO.megalith]:"megalith",[qe.EO.crystalRefinery]:"crystal-refinery",[qe.EO.deuteriumSynthesiser]:"deuterium-synthesiser",[qe.EO.mineralResearchCentre]:"mineral-research-centre",[qe.EO.advancedRecyclingPlant]:"advanced-recycling-plant",[qe.EO.assemblyLine]:"assembly-line",[qe.EO.fusionCellFactory]:"fusion-cell-factory",[qe.EO.roboticsResearchCentre]:"robotics-research-centre",[qe.EO.updateNetwork]:"update-network",[qe.EO.quantumComputerCentre]:"quantum-computer-centre",[qe.EO.automatisedAssemblyCentre]:"automatised-assembly-centre",[qe.EO.highPerformanceTransformer]:"high-performance-transformer",[qe.EO.microchipAssemblyLine]:"microchip-assembly-line",[qe.EO.productionAssemblyHall]:"production-assembly-hall",[qe.EO.highPerformanceSynthesiser]:"high-performance-synthesiser",[qe.EO.chipMassProduction]:"chip-mass-production",[qe.EO.nanoRepairBots]:"nano-repair-bots",[qe.EO.sanctuary]:"sanctuary",[qe.EO.antimatterCondenser]:"antimatter-condenser",[qe.EO.vortexChamber]:"vortex-chamber",[qe.EO.hallsOfRealisation]:"halls-of-realisation",[qe.EO.forumOfTranscendence]:"forum-of-transcendence",[qe.EO.antimatterConvector]:"antimatter-convector",[qe.EO.cloningLaboratory]:"cloning-laboratory",[qe.EO.chrysalisAccelerator]:"chrysalis-accelerator",[qe.EO.bioModifier]:"bio-modifier",[qe.EO.psionicModulator]:"psionic-modulator",[qe.EO.shipManufacturingHall]:"ship-manufacturing-hall",[qe.EO.supraRefractor]:"supra-refractor"};get lifeform(){return Ne.p3.find((e=>qe.IU[e].includes(this.building)))}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>qe.YS.includes(e)})],He.prototype,"building",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],He.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],He.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],He.prototype,"fade",void 0),He=(0,i.gn)([(0,n.wA)({})],He);const Ge=He,Ue=Ge;var Ke=(0,m.Z)(Ue,Le,$e,!1,null,"201b13be",null);const Ve=Ke.exports;var je=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",e._g(e._b({staticClass:"o-lifeform-technology",class:[{"o-lifeform-technology--disabled":e.disabled,"o-lifeform-technology--fade":e.fade},"o-lifeform-technology--"+e.lifeform],style:{"background-image":"url(/img/ogame/lifeforms/technologies/"+e.image+".png)","font-size":e.size}},"div",Object.assign({},e.$attrs,e.$props),!1),e.$listeners))},We=[],Ze=r(9681);let Ye=class extends n.w3{technology;size;disabled;fade;get image(){return this.imageMap[this.technology]}imageMap={[Ze.Nw.intergalacticEnvoys]:"intergalactic-envoys",[Ze.Nw.highPerformanceExtractors]:"high-performance-extractors",[Ze.Nw.fusionDrives]:"fusion-drives",[Ze.Nw.stealthFieldGenerator]:"stealth-field-generator",[Ze.Nw.orbitalDen]:"orbital-den",[Ze.Nw.researchAI]:"research-aI",[Ze.Nw.highPerformanceTerraformer]:"high-performance-terraformer",[Ze.Nw.enhancedProductionTechnologies]:"enhanced-production-technologies",[Ze.Nw.lightFighterMkII]:"light-fighter-mk-iI",[Ze.Nw.cruiserMkII]:"cruiser-mk-iI",[Ze.Nw.improvedLabTechnology]:"improved-lab-technology",[Ze.Nw.plasmaTerraformer]:"plasma-terraformer",[Ze.Nw.lowTemperatureDrives]:"low-temperature-drives",[Ze.Nw.bomberMkII]:"bomber-mk-iI",[Ze.Nw.destroyerMkII]:"destroyer-mk-iI",[Ze.Nw.battlecruiserMkII]:"battlecruiser-mk-iI",[Ze.Nw.robotAssistants]:"robot-assistants",[Ze.Nw.supercomputer]:"supercomputer",[Ze.Nw.volcanicBatteries]:"volcanic-batteries",[Ze.Nw.acousticScanning]:"acoustic-scanning",[Ze.Nw.highEnergyPumpSystems]:"high-energy-pump-systems",[Ze.Nw.cargoHoldExpansion_CivilianShips]:"cargo-hold-expansion_Civilian-ships",[Ze.Nw.magmaPoweredProduction]:"magma-powered-production",[Ze.Nw.geothermalPowerPlants]:"geothermal-power-plants",[Ze.Nw.depthSounding]:"depth-sounding",[Ze.Nw.ionCrystalEnhancement_heavyFighter]:"ion-crystal-enhancement_heavy-fighter",[Ze.Nw.improvedStellarator]:"improved-stellarator",[Ze.Nw.hardenedDiamondDrillHeads]:"hardened-diamond-drill-heads",[Ze.Nw.seismicMiningTechnology]:"seismic-mining-technology",[Ze.Nw.magmaPoweredPumpSystems]:"magma-powered-pump-systems",[Ze.Nw.ionCrystalModules]:"ion-crystal-modules",[Ze.Nw.optimisedSiloConstructionMethod]:"optimised-silo-construction-method",[Ze.Nw.diamondEnergyTransmitter]:"diamond-energy-transmitter",[Ze.Nw.obsidianShieldReinforcement]:"obsidian-shield-reinforcement",[Ze.Nw.runeShields]:"rune-shields",[Ze.Nw.rocktalCollectorEnhancement]:"rocktal-collector-enhancement",[Ze.Nw.catalyserTechnology]:"catalyser-technology",[Ze.Nw.plasmaDrive]:"plasma-drive",[Ze.Nw.efficiencyModule]:"efficiency-module",[Ze.Nw.depotAI]:"depot-aI",[Ze.Nw.generalOverhaul_lightFighter]:"general-overhaul_light-fighter",[Ze.Nw.automatedTransportLines]:"automated-transport-lines",[Ze.Nw.improvedDroneAI]:"improved-drone-aI",[Ze.Nw.experimentalRecyclingTechnology]:"experimental-recycling-technology",[Ze.Nw.generalOverhaul_cruiser]:"general-overhaul_cruiser",[Ze.Nw.slingshotAutopilot]:"slingshot-autopilot",[Ze.Nw.highTemperatureSuperconductors]:"high-temperature-superconductors",[Ze.Nw.generalOverhaul_battleship]:"general-overhaul_battleship",[Ze.Nw.artificialSwarmIntelligence]:"artificial-swarm-intelligence",[Ze.Nw.generalOverhaul_battlecruiser]:"general-overhaul_battlecruiser",[Ze.Nw.generalOverhaul_bomber]:"general-overhaul_bomber",[Ze.Nw.generalOverhaul_destroyer]:"general-overhaul_destroyer",[Ze.Nw.experimentalWeaponsTechnology]:"experimental-weapons-technology",[Ze.Nw.mechanGeneralEnhancement]:"mechan-general-enhancement",[Ze.Nw.heatRecovery]:"heat-recovery",[Ze.Nw.sulphideProcess]:"sulphide-process",[Ze.Nw.psionicNetwork]:"psionic-network",[Ze.Nw.telekineticTractorBeam]:"telekinetic-tractor-beam",[Ze.Nw.enhancedSensorTechnology]:"enhanced-sensor-technology",[Ze.Nw.neuromodalCompressor]:"neuromodal-compressor",[Ze.Nw.neuroInterface]:"neuro-interface",[Ze.Nw.interplanetaryAnalysisNetwork]:"interplanetary-analysis-network",[Ze.Nw.overclocking_heavyFighter]:"overclocking_heavy-fighter",[Ze.Nw.telekineticDrive]:"telekinetic-drive",[Ze.Nw.sixthSense]:"sixth-sense",[Ze.Nw.psychoharmoniser]:"psychoharmoniser",[Ze.Nw.efficientSwarmIntelligence]:"efficient-swarm-intelligence",[Ze.Nw.overclocking_largeCargo]:"overclocking_large-cargo",[Ze.Nw.gravitationSensors]:"gravitation-sensors",[Ze.Nw.overclocking_battleship]:"overclocking_battleship",[Ze.Nw.psionicShieldMatrix]:"psionic-shield-matrix",[Ze.Nw.kaeleshDiscovererEnhancement]:"kaelesh-discoverer-enhancement"};get lifeform(){return Ne.p3.find((e=>Ze.dY[e].includes(this.technology)))}};(0,i.gn)([(0,n.fI)({required:!0,type:Number,validator:e=>Ze.Vs.includes(e)})],Ye.prototype,"technology",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:String,default:"32px"})],Ye.prototype,"size",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Ye.prototype,"disabled",void 0),(0,i.gn)([(0,n.fI)({required:!1,type:Boolean})],Ye.prototype,"fade",void 0),Ye=(0,i.gn)([(0,n.wA)({})],Ye);const Qe=Ye,Je=Qe;var Xe=(0,m.Z)(Je,je,We,!1,null,"684a38d4",null);const ea=Xe.exports;t.ZP.component("o-alliance-class",p),t.ZP.component("o-building",k),t.ZP.component("o-defense",I),t.ZP.component("o-item",H),t.ZP.component("o-lifeform",Oe),t.ZP.component("o-lifeform-building",Ve),t.ZP.component("o-lifeform-technology",ea),t.ZP.component("o-officer",Y),t.ZP.component("o-player-class",se),t.ZP.component("o-research",ge),t.ZP.component("o-resource",we),t.ZP.component("o-ship",De)},917:(e,a,r)=>{r.d(a,{V:()=>m});var t=r(655),s=r(1936),o=r(8717),i=r(4028),n=r(3768),l=r(3654),d=r(4384),c=r(2809);let u=class extends i.w3{settings=null;_ready;_resolveReady;updateSettings(e){console.debug("updating settings",e),this.settings=e,(async()=>{const a=await(0,d.DI)();await a.put("settings",e,0);const r={ogameMeta:o.l,senderUuid:o.g,type:s.C.NotifySettingsUpdate};await(0,n.p)(r)})()}get ready(){return this._ready}async created(){this._ready=new Promise((e=>this._resolveReady=e)),this.initCommunication(),this.requestData()}initCommunication(){chrome.runtime.onMessage.addListener((async e=>await this.onMessage(e)))}requestData(){const e={type:s.C.RequestSettings,ogameMeta:o.l,senderUuid:o.g};(0,c.b)(e)}async onMessage(e){const{type:a,ogameMeta:r}=e;if((0,l.i)(r,o.l)&&e.senderUuid!=o.g)switch(a){case s.C.NotifySettingsUpdate:this.requestData();break;case s.C.Settings:{const a=e;this.settings=a.data,this._resolveReady();break}}}};u=(0,t.gn)([i.wA],u);const m=new u},8717:(e,a,r)=>{r.d(a,{l:()=>n,g:()=>l});var t=r(6538),s=r(7545),o=r(2045);const i=new URLSearchParams(location.search),n={language:i.get("language")??(0,t.A)('missing parameter "language"'),playerId:(0,s.Y)(i.get("player")??(0,t.A)('missing parameter "player"'),10),serverId:(0,s.Y)(i.get("server")??(0,t.A)('missing parameter "server"'),10),userLanguage:"doesnt-matter"},l=(0,o.Z)()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,