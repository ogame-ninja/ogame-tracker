"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[8740],{5617:(e,t,o)=>{o.r(t),o.d(t,{default:()=>I});var s=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"table-container"},[o("div",{staticStyle:{"grid-column":"1 / span 2",display:"grid","grid-template-rows":"auto 1fr","max-height":"100%",overflow:"hidden"}},[o("div",[o("button",{on:{click:function(t){e.showProductionSettings=!e.showProductionSettings}}},[o("span",{staticClass:"mdi mdi-cogs"}),e.showSettings?o("span",{staticClass:"mdi mdi-menu-up"}):o("span",{staticClass:"mdi mdi-menu-down"}),e.showProductionSettings?o("span",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.settings.applyAndClose)}}):o("span",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.settings.header)}})]),o("button",{staticClass:"ml-2",on:{click:function(t){return e.resetProductionSettings()}}},[o("span",{staticClass:"mdi mdi-refresh"}),o("span",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.settings.reset)}})])]),o("div",{directives:[{name:"show",rawName:"v-show",value:e.showProductionSettings,expression:"showProductionSettings"}],staticClass:"mt-2",staticStyle:{overflow:"auto"}},[o("div",{staticStyle:{display:"flex",gap:"8px","flex-wrap":"wrap"}},[o("amortization-player-settings-inputs",{staticStyle:{height:"max-content","margin-top":"44px"},attrs:{"lifeform-levels":e.playerSettings.lifeformLevels,"production-mode":""},model:{value:e.playerSettings,callback:function(t){e.playerSettings=t},expression:"playerSettings"}}),e._l(e.planetSettings,(function(t){return o("amortization-planet-settings-inputs",{key:t.id,attrs:{value:t,planetData:e.empire.planets[t.id],"production-mode":""}})}))],2)])]),o("div",{directives:[{name:"show",rawName:"v-show",value:!e.showProductionSettings,expression:"!showProductionSettings"}],staticStyle:{"grid-column":"1 / span 2"},domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.messageProduction100)}}),o("grid-table",{directives:[{name:"show",rawName:"v-show",value:!e.showProductionSettings,expression:"!showProductionSettings"}],staticClass:"resources-production-table",style:"--item-count: "+e.maxItemCount,attrs:{columns:e.columns,items:e.items,sticky:"100%",footerItems:e.footerItems},scopedSlots:e._u([{key:"header-metal",fn:function(){return[o("o-resource",{attrs:{resource:"metal",size:"75px"}})]},proxy:!0},{key:"header-crystal",fn:function(){return[o("o-resource",{attrs:{resource:"crystal",size:"75px"}})]},proxy:!0},{key:"header-deuterium",fn:function(){return[o("o-resource",{attrs:{resource:"deuterium",size:"75px"}})]},proxy:!0},{key:"header-total",fn:function(){return[e._v(" "+e._s(e.$i18n.$t.extension.common.resourceUnits)+" ")]},proxy:!0},{key:"header-totalConverted",fn:function(){return[e._v(" "+e._s(e.$i18n.$t.extension.common.resourceUnits+" ("+e.conversionModeText+")")+" ")]},proxy:!0},{key:"header-productionSettings",fn:function(){return[o("div",{staticClass:"production-settings-mini-table"},[o("span",{staticClass:"header",domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.activeProductionSettings)}}),o("o-building",{attrs:{building:e.BuildingType.metalMine}}),o("o-building",{attrs:{building:e.BuildingType.crystalMine}}),o("o-building",{attrs:{building:e.BuildingType.deuteriumSynthesizer}}),o("o-building",{attrs:{building:e.BuildingType.solarPlant}}),o("o-building",{attrs:{building:e.BuildingType.fusionReactor}}),o("o-ship",{attrs:{ship:e.ShipType.solarSatellite}}),o("o-ship",{attrs:{ship:e.ShipType.crawler}}),o("span",{staticStyle:{"grid-column":"auto / span 4"},domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.items)}})],1)]},proxy:!0},{key:"cell-planet",fn:function(t){var s=t.value;return[o("div",{staticClass:"planet-info"},[o("span",{domProps:{textContent:e._s(s.name)}}),o("span",[e._v(" ["+e._s(s.coordinates.galaxy)+":"+e._s(s.coordinates.system)+":"+e._s(s.coordinates.position)+"] ")]),o("span",{staticClass:"mdi toggle-breakdown",class:e.showBreakdown[s.id]?"mdi-menu-up":"mdi-menu-down",on:{click:function(t){return e.toggleBreakdown(s.id)}}})])]}},{key:"cell-productionSettings",fn:function(t){var s=t.value,n=t.item;return[o("div",{staticClass:"production-settings-mini-table"},[o("span",{domProps:{textContent:e._s(s.metalMine)}}),o("span",{domProps:{textContent:e._s(s.crystalMine)}}),o("span",{domProps:{textContent:e._s(s.deuteriumSynthesizer)}}),o("span",{domProps:{textContent:e._s(s.solarPlant)}}),o("span",{domProps:{textContent:e._s(s.fusionReactor)}}),o("span",{domProps:{textContent:e._s(s.solarSatellite)}}),o("span",{domProps:{textContent:e._s(s.crawler)}}),e._l(e.getActiveItems(n),(function(e,t){return[null==e?o("span",{key:t}):o("o-item",{key:t,attrs:{item:e,size:"24px"}})]}))],2)]}},{key:"cell-breakdown",fn:function(t){var s=t.item;return[e.showBreakdown[s.planet.id]?o("div",{staticClass:"breakdown-list"},[o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.basicIncome)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.mineProduction)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.consumption)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.lifeformBuildings)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.crawlers)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.ogame.research[e.ResearchType.plasmaTechnology])}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.items)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.geologist)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.commandStaff)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.playerClass)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.allianceClass)}}),o("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.empire.production.breakdown.lifeformTechnologies)}}),o("div",{staticClass:"breakdown-sum",domProps:{textContent:e._s(e.$i18n.$t.extension.common.sum)}})]):e._e()]}},{key:"cell-metal",fn:function(t){var s=t.value,n=t.item;return[o("div",{staticClass:"breakdown-list",class:e.showBreakdown[n.planet.id]?"breakdown-list--expanded":null},[e.showBreakdown[n.planet.id]?[o("decimal-number",{attrs:{value:s.baseProduction}}),o("decimal-number",{attrs:{value:s.mineProduction}}),o("decimal-number",{attrs:{value:0}}),o("decimal-number",{attrs:{value:s.lifeformBuildingsProduction}}),o("decimal-number",{attrs:{value:s.crawlerProduction}}),o("decimal-number",{attrs:{value:s.plasmaTechnologyProduction}}),o("decimal-number",{attrs:{value:s.itemProduction}}),o("decimal-number",{attrs:{value:s.geologistProduction}}),o("decimal-number",{attrs:{value:s.commandStaffProduction}}),o("decimal-number",{attrs:{value:s.playerClassProduction}}),o("decimal-number",{attrs:{value:s.allianceClassProduction}}),o("decimal-number",{attrs:{value:s.lifeformTechnologiesProduction}})]:e._e(),o("decimal-number",{staticClass:"breakdown-sum",attrs:{value:s.total}})],2)]}},{key:"cell-crystal",fn:function(t){var s=t.value,n=t.item;return[o("div",{staticClass:"breakdown-list",class:e.showBreakdown[n.planet.id]?"breakdown-list--expanded":null},[e.showBreakdown[n.planet.id]?[o("decimal-number",{attrs:{value:s.baseProduction}}),o("decimal-number",{attrs:{value:s.mineProduction}}),o("decimal-number",{attrs:{value:0}}),o("decimal-number",{attrs:{value:s.lifeformBuildingsProduction}}),o("decimal-number",{attrs:{value:s.crawlerProduction}}),o("decimal-number",{attrs:{value:s.plasmaTechnologyProduction}}),o("decimal-number",{attrs:{value:s.itemProduction}}),o("decimal-number",{attrs:{value:s.geologistProduction}}),o("decimal-number",{attrs:{value:s.commandStaffProduction}}),o("decimal-number",{attrs:{value:s.playerClassProduction}}),o("decimal-number",{attrs:{value:s.allianceClassProduction}}),o("decimal-number",{attrs:{value:s.lifeformTechnologiesProduction}})]:e._e(),o("decimal-number",{staticClass:"breakdown-sum",attrs:{value:s.total}})],2)]}},{key:"cell-deuterium",fn:function(t){var s=t.value,n=t.item;return[o("div",{staticClass:"breakdown-list",class:e.showBreakdown[n.planet.id]?"breakdown-list--expanded":null},[e.showBreakdown[n.planet.id]?[o("decimal-number",{attrs:{value:s.baseProduction}}),o("decimal-number",{attrs:{value:s.mineProduction}}),o("decimal-number",{class:{"negative-value":-n.fusionReactorConsumption<0},attrs:{value:-n.fusionReactorConsumption}}),o("decimal-number",{attrs:{value:s.lifeformBuildingsProduction}}),o("decimal-number",{attrs:{value:s.crawlerProduction}}),o("decimal-number",{attrs:{value:s.plasmaTechnologyProduction}}),o("decimal-number",{attrs:{value:s.itemProduction}}),o("decimal-number",{attrs:{value:s.geologistProduction}}),o("decimal-number",{attrs:{value:s.commandStaffProduction}}),o("decimal-number",{attrs:{value:s.playerClassProduction}}),o("decimal-number",{attrs:{value:s.allianceClassProduction}}),o("decimal-number",{attrs:{value:s.lifeformTechnologiesProduction}})]:e._e(),o("decimal-number",{staticClass:"breakdown-sum",attrs:{value:s.total-n.fusionReactorConsumption}})],2)]}},{key:"cell-total",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t}})],1)]}},{key:"cell-totalConverted",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t}})],1)]}},{key:"footer-planet",fn:function(t){var s=t.value,n=t.item;return[n.isResourcePackageRow?o("span",{staticClass:"resource-packages-cell"},[o("o-item",{attrs:{item:e.ItemHash.resourcePackage_all,size:"32px","hide-item-grade":""}}),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.resourcePackageAmounts.all,expression:"resourcePackageAmounts.all",modifiers:{number:!0}}],attrs:{type:"number",min:"0",step:"1"},domProps:{value:e.resourcePackageAmounts.all},on:{input:function(t){t.target.composing||e.$set(e.resourcePackageAmounts,"all",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),o("o-item",{attrs:{item:e.ItemHash.resourcePackage_metal,size:"32px","hide-item-grade":""}}),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.resourcePackageAmounts.metal,expression:"resourcePackageAmounts.metal",modifiers:{number:!0}}],attrs:{type:"number",min:"0",step:"1"},domProps:{value:e.resourcePackageAmounts.metal},on:{input:function(t){t.target.composing||e.$set(e.resourcePackageAmounts,"metal",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),o("o-item",{attrs:{item:e.ItemHash.resourcePackage_crystal,size:"32px","hide-item-grade":""}}),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.resourcePackageAmounts.crystal,expression:"resourcePackageAmounts.crystal",modifiers:{number:!0}}],attrs:{type:"number",min:"0",step:"1"},domProps:{value:e.resourcePackageAmounts.crystal},on:{input:function(t){t.target.composing||e.$set(e.resourcePackageAmounts,"crystal",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),o("o-item",{attrs:{item:e.ItemHash.resourcePackage_deuterium,size:"32px","hide-item-grade":""}}),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.resourcePackageAmounts.deuterium,expression:"resourcePackageAmounts.deuterium",modifiers:{number:!0}}],attrs:{type:"number",min:"0",step:"1"},domProps:{value:e.resourcePackageAmounts.deuterium},on:{input:function(t){t.target.composing||e.$set(e.resourcePackageAmounts,"deuterium",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})],1):o("span",{domProps:{textContent:e._s(s.name)}})]}},{key:"footer-metal",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t.total}})],1)]}},{key:"footer-crystal",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t.total}})],1)]}},{key:"footer-deuterium",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t.total}})],1)]}},{key:"footer-total",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t}})],1)]}},{key:"footer-totalConverted",fn:function(e){var t=e.value;return[o("div",{staticClass:"breakdown-list"},[o("decimal-number",{attrs:{value:t}})],1)]}}])}),o("floating-menu",{directives:[{name:"show",rawName:"v-show",value:!e.showProductionSettings,expression:"!showProductionSettings"}],attrs:{left:""},scopedSlots:e._u([{key:"activator",fn:function(){return[o("button",{on:{click:function(t){e.showSettings=!e.showSettings}}},[o("span",{staticClass:"mdi mdi-cog"})])]},proxy:!0}]),model:{value:e.showSettings,callback:function(t){e.showSettings=t},expression:"showSettings"}},[o("show-converted-resources-in-cells-settings")],1)],1)},n=[],r=o(655),i=o(4028),a=o(7069),l=o(6864),u=o(2057),c=o(1639),d=o(917),m=o(7076),p=o(602),g=o(3787),y=o(8288),v=o(4985),f=o(3738),h=o(9751),_=o(3418),b=o(8395),w=o(1854),P=o(6705),k=o(6538),C=o(9867),S=o(147);let x=class extends i.w3{ItemHash=c.t;BuildingType=l.A;ShipType=u.g;ResearchType=f.s;showSettings=!1;showProductionSettings=!1;playerSettings={optimizeForResources:[],officers:{admiral:!1,commander:!1,engineer:!1,geologist:!1,technocrat:!1},playerClass:p.D0.none,allianceClass:C.Ck.none,levelPlasmaTechnology:0,levelAstrophysics:0,numberOfUnusedRaidColonySlots:0,lifeformLevels:(0,h.a)(_.p3,0)};planetSettings=[];onPlayerClassSelectionChanged(e){if(!this.showProductionSettings)return;const t=e==p.D0.collector,o=t?150:100;this.planetSettings.forEach((e=>{e.crawlers.percentage=o,e.crawlers.max=t}))}mounted(){this.resetProductionSettings()}resetProductionSettings(){const e=b.p.empire;this.playerSettings={officers:{...e.officers},playerClass:e.playerClass,allianceClass:e.allianceClass,levelPlasmaTechnology:e.research[f.s.plasmaTechnology],lifeformLevels:(0,h.a)(_.p3,(e=>(0,S.g4)(b.p.lifeformExperience[e]))),optimizeForResources:[],levelAstrophysics:0,numberOfUnusedRaidColonySlots:0},this.planetSettings=this.getPlanetSettings()}get empire(){const e=JSON.parse(JSON.stringify(b.p.empire));return e.playerClass=this.playerSettings.playerClass,e.allianceClass=this.playerSettings.allianceClass,e.officers=this.playerSettings.officers,e.research[f.s.plasmaTechnology]=this.playerSettings.levelPlasmaTechnology,this.planetSettings.forEach((t=>{const o=e.planets[t.id];o.maxTemperature=t.maxTemperature,o.coordinates.position=t.position,o.activeItems=(0,h.a)(t.activeItems,"permanent"),o.buildings[l.A.metalMine]=t.mines?.metalMine??(0,k.A)("no metal mine level"),o.buildings[l.A.crystalMine]=t.mines?.crystalMine??(0,k.A)("no crystal mine level"),o.buildings[l.A.deuteriumSynthesizer]=t.mines?.deuteriumSynthesizer??(0,k.A)("no deuterium synthesizer level"),o.ships[u.g.crawler]=t.crawlers.max?1e4:t.crawlers.count,o.productionSettings[u.g.crawler]=t.crawlers.percentage,o.activeLifeform=t.lifeform,o.activeLifeformTechnologies=t.activeLifeformTechnologies,o.lifeformTechnologies={...o.lifeformTechnologies,...t.lifeformTechnologyLevels},o.lifeformBuildings={...o.lifeformBuildings,...t.lifeformBuildingLevels}})),e}resourcePackageAmounts={all:0,metal:0,crystal:0,deuterium:0};get conversionModeText(){return"msu"==d.V.settings.conversionRates.mode?this.$i18n.$t.extension.common.msu:this.$i18n.$t.extension.common.dsu}getPlanetSettings(){const e=this.playerSettings.playerClass==p.D0.collector;return this.planets.map((t=>({include:!0,ignoreEmptyLifeformTechnologySlots:!1,id:t.id,name:t.name,position:t.coordinates.position,coordinates:t.coordinates,maxTemperature:t.maxTemperature,activeItems:Object.keys(t.activeItems),lifeform:t.activeLifeform,activeLifeformTechnologies:[...t.activeLifeformTechnologies],lifeformBuildingLevels:{...t.lifeformBuildings},lifeformTechnologyLevels:{...t.lifeformTechnologies},mines:{metalMine:t.buildings[l.A.metalMine],crystalMine:t.buildings[l.A.crystalMine],deuteriumSynthesizer:t.buildings[l.A.deuteriumSynthesizer]},crawlers:{percentage:!e&&t.productionSettings[u.g.crawler]>100?100:t.productionSettings[u.g.crawler],count:t.ships[u.g.crawler],max:!1}})))}get columns(){const e=[{key:"planet",label:this.$i18n.$t.extension.empire.planet},{key:"breakdown",size:"200px"},{key:"metal"},{key:"crystal"},{key:"deuterium"},{key:"total",class:"total-column"}];return d.V.settings.showCellsWithConvertedResourceUnits&&e.push({key:"totalConverted"}),e.push({key:"productionSettings",class:"production-settings-column",headerClass:"production-settings-header-column",size:"max-content"}),e}get maxItemCount(){return Math.max(...this.items.map((e=>e.activeItems.length)))}get productionBreakdowns(){const e=(0,h.a)(_.p3,(e=>(0,S._Z)(this.playerSettings.lifeformLevels[e])));return(0,v.c)(this.empire,e)}get fusionReactorConsumptions(){const e={};return this.planets.forEach((t=>{const o=a.s.getConsumption(t.buildings[l.A.fusionReactor],{planet:{position:t.coordinates.position,temperature:t.maxTemperature},productionSettings:{metalMine:t.productionSettings[l.A.metalMine],crystalMine:t.productionSettings[l.A.crystalMine],deuteriumSynthesizer:t.productionSettings[l.A.deuteriumSynthesizer],fusionReactor:t.productionSettings[l.A.fusionReactor]},serverSettings:{economySpeed:m.s.serverSettings.speed.economy,crystalBoost:m.s.serverSettings.resourceProduction.productionFactorBonus.crystal}}).deuterium;e[t.id]=o})),e}get items(){if(0==this.planetSettings.length)return[];const e=this.productionBreakdowns,t=this.fusionReactorConsumptions;return this.planets.map((o=>{const s={metal:e.metal.getProductionBreakdown(o.id),crystal:e.crystal.getProductionBreakdown(o.id),deuterium:e.deuterium.getProductionBreakdown(o.id)},n=this.planetSettings.find((e=>e.id==o.id))??(0,k.A)("no planet settings found");return{planet:o,...s,fusionReactorConsumption:t[o.id],total:s.metal.total+s.crystal.total+s.deuterium.total-t[o.id],totalConverted:(0,y.B)({metal:s.metal.total,crystal:s.crystal.total,deuterium:s.deuterium.total-t[o.id]}),productionSettings:{metalMine:o.productionSettings[l.A.metalMine],crystalMine:o.productionSettings[l.A.crystalMine],deuteriumSynthesizer:o.productionSettings[l.A.deuteriumSynthesizer],solarPlant:o.productionSettings[l.A.solarPlant],fusionReactor:o.productionSettings[l.A.fusionReactor],solarSatellite:o.productionSettings[u.g.solarSatellite],crawler:n.crawlers.percentage},activeItems:n.activeItems}}))}get footerItems(){const e=this.productionBreakdowns,t=e.getTotal(),o=t.metal,s=t.crystal,n=t.deuterium-Object.values(this.fusionReactorConsumptions).reduce(((e,t)=>e+t),0),r=o+s+n,i=(0,y.B)({metal:o,crystal:s,deuterium:n}),a=24*o*(this.resourcePackageAmounts.all+this.resourcePackageAmounts.metal),l=24*s*(this.resourcePackageAmounts.all+this.resourcePackageAmounts.crystal),u=24*n*(this.resourcePackageAmounts.all+this.resourcePackageAmounts.deuterium);return[{planet:{id:0,name:this.$i18n.$t.extension.empire.production.averagePerHour,coordinates:null},metal:{total:o/this.planets.length},crystal:{total:s/this.planets.length},deuterium:{total:n/this.planets.length},fusionReactorConsumption:0,total:r/this.planets.length,totalConverted:i/this.planets.length,productionSettings:null,activeItems:[]},{planet:{id:0,name:this.$i18n.$t.extension.empire.production.totalPerHour,coordinates:null},metal:{total:o},crystal:{total:s},deuterium:{total:n},fusionReactorConsumption:0,total:r,totalConverted:i,productionSettings:null,activeItems:[]},{planet:{id:0,name:this.$i18n.$t.extension.empire.production.totalPerDay,coordinates:null},metal:{total:24*o},crystal:{total:24*s},deuterium:{total:24*n},fusionReactorConsumption:0,total:24*r,totalConverted:24*i,productionSettings:null,activeItems:[]},{planet:{id:0,name:this.$i18n.$t.extension.empire.production.totalPerWeek,coordinates:null},metal:{total:24*o*7},crystal:{total:24*s*7},deuterium:{total:24*n*7},fusionReactorConsumption:0,total:24*r*7,totalConverted:24*i*7,productionSettings:null,activeItems:[]},{isResourcePackageRow:!0,planet:{id:0,name:"row-for-resource-packages",coordinates:null},metal:{total:a},crystal:{total:l},deuterium:{total:u},fusionReactorConsumption:0,total:a+l+u,totalConverted:(0,y.B)({metal:a,crystal:l,deuterium:u}),productionSettings:null,activeItems:[]}]}showBreakdown={};onPlanetsChanged(){this.planets.forEach((e=>{null==this.showBreakdown[e.id]&&this.$set(this.showBreakdown,e.id,!1)}))}toggleBreakdown(e){this.showBreakdown[e]=!this.showBreakdown[e]}get planets(){return Object.values(b.p.empire.planets).filter((e=>!e.isMoon)).sort(((e,t)=>b.p.empire.planetOrder.indexOf(e.id)-this.empire.planetOrder.indexOf(t.id)))}productionBoostItems_metal=[c.t.metalBooster_bronze_1day,c.t.metalBooster_bronze_7days,c.t.metalBooster_silver_7days,c.t.metalBooster_silver_30days,c.t.metalBooster_silver_90days,c.t.metalBooster_gold_7days,c.t.metalBooster_gold_30days,c.t.metalBooster_gold_90days,c.t.metalBooster_platinum_7days,c.t.metalBooster_platinum_30days,c.t.metalBooster_platinum_90days];productionBoostItems_crystal=[c.t.crystalBooster_bronze_1day,c.t.crystalBooster_bronze_7days,c.t.crystalBooster_silver_7days,c.t.crystalBooster_silver_30days,c.t.crystalBooster_silver_90days,c.t.crystalBooster_gold_7days,c.t.crystalBooster_gold_30days,c.t.crystalBooster_gold_90days,c.t.crystalBooster_platinum_7days,c.t.crystalBooster_platinum_30days,c.t.crystalBooster_platinum_90days];productionBoostItems_deuterium=[c.t.deuteriumBooster_bronze_1day,c.t.deuteriumBooster_bronze_7days,c.t.deuteriumBooster_silver_7days,c.t.deuteriumBooster_silver_30days,c.t.deuteriumBooster_silver_90days,c.t.deuteriumBooster_gold_7days,c.t.deuteriumBooster_gold_30days,c.t.deuteriumBooster_gold_90days,c.t.deuteriumBooster_platinum_7days,c.t.deuteriumBooster_platinum_30days,c.t.deuteriumBooster_platinum_90days];productionBoostItems_energy=[c.t.energyBooster_bronze_7days,c.t.energyBooster_silver_7days,c.t.energyBooster_silver_30days,c.t.energyBooster_silver_90days,c.t.energyBooster_gold_7days,c.t.energyBooster_gold_30days,c.t.energyBooster_gold_90days,c.t.energyBooster_platinum_7days,c.t.energyBooster_platinum_30days,c.t.energyBooster_platinum_90days];getActiveItems(e){return[e.activeItems.find((e=>this.productionBoostItems_metal.includes(e)))??null,e.activeItems.find((e=>this.productionBoostItems_crystal.includes(e)))??null,e.activeItems.find((e=>this.productionBoostItems_deuterium.includes(e)))??null,e.activeItems.find((e=>this.productionBoostItems_energy.includes(e)))??null]}};(0,r.gn)([(0,i.RL)("playerSettings.playerClass")],x.prototype,"onPlayerClassSelectionChanged",null),(0,r.gn)([(0,i.RL)("planets",{immediate:!0})],x.prototype,"onPlanetsChanged",null),x=(0,r.gn)([(0,i.wA)({components:{ShowConvertedResourcesInCellsSettings:g.Z,AmortizationPlanetSettingsInputs:w.Z,AmortizationPlayerSettingsInputs:P.Z}})],x);const B=x,$=B;var A=o(1001),T=(0,A.Z)($,s,n,!1,null,"e6ff8432",null);const I=T.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,