"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[8124],{5209:(t,e,r)=>{r.d(e,{Z:()=>m});var s=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"fake-table expedition-ship-resource-units-factor-settings"},[r("div",{staticClass:"fake-table-header"},[r("span",{domProps:{textContent:t._s(t.$i18n.$t.extension.settings.expeditions.resourceUnitFactorsOfShipFoundOnExpeditions)}})]),r("div",{staticClass:"fake-table-body"},[r("span",{staticClass:"inputs"},[r("span",[r("span",{staticClass:"two-resources"},[r("o-resource",{attrs:{resource:"metal"}}),r("o-resource",{attrs:{resource:"crystal"}})],1),r("input",{directives:[{name:"model",rawName:"v-model.number.lazy",value:t.factor,expression:"factor",modifiers:{number:!0,lazy:!0}}],attrs:{type:"number",min:"0",max:"1",step:"0.01"},domProps:{value:t.factor},on:{change:[function(e){t.factor=t._n(e.target.value)},function(e){return t.updateFactors()}],focus:function(e){t.isFocused=!0},blur:[function(e){return t.onBlur()},function(e){return t.$forceUpdate()}]}})]),r("span",[r("o-resource",{attrs:{resource:"deuterium"}}),r("input",{directives:[{name:"model",rawName:"v-model.number.lazy",value:t.deuteriumFactor,expression:"deuteriumFactor",modifiers:{number:!0,lazy:!0}}],attrs:{type:"number",min:"0",max:"1",step:"0.01"},domProps:{value:t.deuteriumFactor},on:{change:[function(e){t.deuteriumFactor=t._n(e.target.value)},function(e){return t.updateFactors()}],focus:function(e){t.isFocused=!0},blur:[function(e){return t.onBlur()},function(e){return t.$forceUpdate()}]}})],1)])])])},n=[],o=r(655),a=r(4028),i=r(917);let u=class extends a.w3{factor=1;deuteriumFactor=1;isFocused=!1;get factors(){return i.V.settings.expeditionFoundShipsResourceUnits}onFactorsChanged(){const{factor:t,deuteriumFactor:e}=this.factors;this.isFocused||(this.factor=t,this.deuteriumFactor=e)}updateFactors(){i.V.updateSettings({...i.V.settings,expeditionFoundShipsResourceUnits:{factor:this.factor,deuteriumFactor:this.deuteriumFactor}})}onBlur(){this.isFocused=!1,this.onFactorsChanged()}};(0,o.gn)([(0,a.RL)("factors",{immediate:!0})],u.prototype,"onFactorsChanged",null),u=(0,o.gn)([(0,a.wA)({})],u);const c=u,d=c;var l=r(1001),p=(0,l.Z)(d,s,n,!1,null,"160db831",null);const m=p.exports},8124:(t,e,r)=>{r.r(e),r.d(e,{default:()=>m});var s=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("expedition-ship-resource-units-factor-settings")],1)},n=[],o=r(655),a=r(4028),i=r(5209);let u=class extends a.w3{};u=(0,o.gn)([(0,a.wA)({components:{ExpeditionShipResourceUnitsFactorSettings:i.Z}})],u);const c=u,d=c;var l=r(1001),p=(0,l.Z)(d,s,n,!1,null,null,null);const m=p.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,