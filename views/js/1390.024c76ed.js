"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[1390],{2656:(e,t,s)=>{s.r(t),s.d(t,{default:()=>$});var l=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("lifeform-bonuses-breakdown",{attrs:{types:e.bonusTypes,technologies:e.techs,planets:e.planets,limits:e.limits}})},n=[],r=s(655),i=s(5128),a=s(147),o=s(3418),u=s(4846),m=s(9751),c=s(8395),g=s(1786),p=s(4028),y=s(3894),h=s(7848),d=s(7377);let f=class extends p.w3{bonusTypes=[{key:"metal",label:this.$i18n.$t.ogame.resources.metal},{key:"crystal",label:this.$i18n.$t.ogame.resources.crystal},{key:"deuterium",label:this.$i18n.$t.ogame.resources.deuterium},{key:"energy",label:this.$i18n.$t.ogame.resources.energy}];techs=u.rE.map((e=>e.type));get limits(){const e=(0,h.K)({type:d.f.ResourceProductionBonus});return{metal:t=>null!=e?Math.min(t,e):t,crystal:t=>null!=e?Math.min(t,e):t,deuterium:t=>null!=e?Math.min(t,e):t,energy:t=>null!=e?Math.min(t,e):t}}get planets(){return(0,m.r)(c.p.empire.planetOrder.map((e=>c.p.empire.planets[e])).filter((e=>!e.isMoon)),(e=>e.id),(e=>this.techs.map((t=>{const s=u.dy[t],l=this.getPlanetBonus(s,e);return{planet:e,technologyType:t,bonuses:(0,m.a)(["metal","crystal","deuterium","energy"],(e=>({base:l.base[e],buildings:l.buildings[e],level:l.level[e],total:l.total[e]})))}}))))}get experience(){return c.p.lifeformExperience}getPlanetBonus(e,t){if(t.activeLifeform==o.e5.none||!t.activeLifeformTechnologies.includes(e.type))return{base:{metal:0,crystal:0,deuterium:0,energy:0},level:{metal:0,crystal:0,deuterium:0,energy:0},buildings:{metal:0,crystal:0,deuterium:0,energy:0},buildingsBoost:0,total:{metal:0,crystal:0,deuterium:0,energy:0}};const s=Math.min((0,g.io)(t),(0,h.K)({type:d.f.LifeformResearchBonusBoost})??Number.MAX_SAFE_INTEGER),l=e.getProductionBonus(t.lifeformTechnologies[e.type]),n=(0,i.fB)(l,(0,a.g1)(this.experience[t.activeLifeform])),r=(0,i.fB)(l,s);return{base:l,level:n,buildings:r,buildingsBoost:s,total:(0,i.aV)(l,n,r)}}};f=(0,r.gn)([(0,p.wA)({components:{LifeformBonusesBreakdown:y.Z}})],f);const b=f,k=b;var B=s(1001),v=(0,B.Z)(k,l,n,!1,null,null,null);const $=v.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,