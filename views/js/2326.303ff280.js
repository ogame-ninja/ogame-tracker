"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[2326],{4698:(e,t,s)=>{s.d(t,{O:()=>p});var r=s(1821),a=s(3347),o=s(1745),n=s(776),i=s(5424),l=s(612),g=s(6105),c=s(3418),d=s(7331),u=s(2057);function p(e){const t=r.j.locale;r.j.locale=e;const s={dateRanges:[{label:r.j.$t.extension.settings.dateRanges.defaultNames.today,type:"day",skip:0,take:1},{label:r.j.$t.extension.settings.dateRanges.defaultNames.yesterday,type:"day",skip:1,take:1},{label:r.j.$t.extension.settings.dateRanges.defaultNames.currentWeek,type:"week",skip:0,take:1},{label:r.j.$t.extension.settings.dateRanges.defaultNames.lastWeek,type:"week",skip:1,take:1},{label:r.j.$t.extension.settings.dateRanges.defaultNames.currentMonth,type:"month",skip:0,take:1},{type:"all"}],lostShipsResourceUnits:{factor:1,deuteriumFactor:1},resourceBalance:{showDetailedBreakdown:!1,includeExpeditionFoundShipsResourceUnits:!0,includeLostShipsResourceUnits:!0,includeLostLootResources:!0},conversionRates:{mode:"msu",msu:{crystal:1.5,deuterium:3},dsu:{metal:3,crystal:2}},showCellsWithConvertedResourceUnits:!0,expeditionFoundShipsResourceUnits:{factor:1,deuteriumFactor:1},extensionLanguage:e,defaultRoutes:{},colors:{combatResults:{[a.a.won]:"#00c23a",[a.a.draw]:"#aaaaaa",[a.a.lost]:"#d11515"},resources:{[d._.metal]:"#ff5e00",[d._.crystal]:"#1a9fff",[d._.deuterium]:"#1bee8f",totalConverted:"#999999"},ships:{[u.g.lightFighter]:"#2472f3",[u.g.heavyFighter]:"#c72525",[u.g.cruiser]:"#fbbc04",[u.g.battleship]:"#9ecc00",[u.g.bomber]:"#00a95e",[u.g.battlecruiser]:"#075263",[u.g.destroyer]:"#de5200",[u.g.reaper]:"#16a8d4",[u.g.pathfinder]:"#ad135e",[u.g.smallCargo]:"#888888",[u.g.largeCargo]:"#ffffff",[u.g.espionageProbe]:"#4b17da",[u.g.deathStar]:"#262530",[u.g.recycler]:"#8aff8e",[u.g.colonyShip]:"#d7b58e",[u.g.crawler]:"#94b4ff",[u.g.solarSatellite]:"#dd94ff"},expeditions:{events:{[i.r.nothing]:"#404040",[i.r.resources]:"#2242e2",[i.r.fleet]:"#dddddd",[i.r.delay]:"#ff5e00",[i.r.early]:"#00c23a",[i.r.darkMatter]:"#33bcdb",[i.r.pirates]:"#ffb592",[i.r.aliens]:"#92ffdc",[i.r.combat]:"#ffb592",[i.r.item]:"#6f23e1",[i.r.trader]:"#fbbc04",[i.r.lostFleet]:"#d11515"},sizes:{[n.Mm.small]:"#404040",[n.Mm.medium]:"#3e85fe",[n.Mm.large]:"#e01a76","fled-death-star":"#dddddd"},depletion:{[o.q.none]:"#00c23a",[o.q.low]:"#fbbc04",[o.q.medium]:"#ff5e00",[o.q.high]:"#c72525",unknown:"#404040"}},lifeformDiscoveries:{events:{[g.y.nothing]:"#404040",[g.y.lostShip]:"#d11515",[g.y.knownLifeformFound]:"#33bcdb",[g.y.newLifeformFound]:"#00c23a",[g.y.artifacts]:"#fbbc04"},artifactFindingSizes:{[l.k.small]:"#404040",[l.k.medium]:"#3e85fe",[l.k.large]:"#e01a76",[l.k.storageFull]:"#d11515"}},lifeforms:{[c.e5.humans]:"#7ec000",[c.e5.rocktal]:"#df6642",[c.e5.mechas]:"#4b91e7",[c.e5.kaelesh]:"#9863e9"}},universeHistory:{updateTimes:[72e6],enabled:!1,trackHistory:!1},combatTracking:{ignoreEspionageFights:!0},messageTracking:{showSimplifiedResults:!0},debrisFields:{separateExpeditionDebrisFields:!1}};return r.j.locale=t,s}},1799:(e,t,s)=>{s.d(t,{Z:()=>u});var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("button",{staticClass:"reset-button",attrs:{title:e.$i18n.$t.extension.settings.reset},on:{click:function(t){return e.$emit("reset")}}},[s("span",{staticClass:"mdi mdi-refresh"})])},a=[],o=s(655),n=s(4028);let i=class extends n.w3{};i=(0,o.gn)([(0,n.wA)({})],i);const l=i,g=l;var c=s(1001),d=(0,c.Z)(g,r,a,!1,null,"6ca60f84",null);const u=d.exports},7174:(e,t,s)=>{s.d(t,{Z:()=>p});var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("grid-table",{staticClass:"color-settings",staticStyle:{width:"max-content"},attrs:{columns:e.columns,items:e.items},scopedSlots:e._u([{key:"header-key",fn:function(t){var r=t.label;return[s("span",{domProps:{textContent:e._s(r)}}),s("reset-button",{on:{reset:function(t){return e.$emit("reset")}}})]}},{key:"cell-key",fn:function(t){var r=t.value;return[s("div",{staticClass:"color-input",on:{click:function(t){e.$refs["colorInput-"+r].click()}}},[s("input",{ref:"colorInput-"+r,attrs:{type:"color"},domProps:{value:e.colors[r]},on:{change:function(t){return e.updateColor(r,t)}}}),s("div",{staticClass:"color-indicator",style:{background:e.colors[r]}}),s("span",{domProps:{textContent:e._s(e.labels[r])}})])]}}])})},a=[],o=s(655),n=s(4028),i=s(1799);let l=class extends n.w3{header;colors;labels;keys;get columns(){return[{key:"key",label:this.header,headerClass:"color-settings-header"}]}get items(){const e=this.keys??Object.keys(this.colors);return e.map((e=>({key:e})))}updateColor(e,t){t.target instanceof HTMLInputElement&&(this.colors={...this.colors,[e]:t.target.value})}};(0,o.gn)([(0,n.fI)({required:!0,type:String})],l.prototype,"header",void 0),(0,o.gn)([(0,n.Ey)({required:!0,type:Object})],l.prototype,"colors",void 0),(0,o.gn)([(0,n.fI)({required:!0,type:Object})],l.prototype,"labels",void 0),(0,o.gn)([(0,n.fI)({required:!1,type:Array,default:()=>null})],l.prototype,"keys",void 0),l=(0,o.gn)([(0,n.wA)({components:{ResetButton:i.Z}})],l);const g=l,c=g;var d=s(1001),u=(0,d.Z)(c,r,a,!1,null,"2f24a3e0",null);const p=u.exports},8802:(e,t,s)=>{s.d(t,{Z:()=>y});var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.ships,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},a=[],o=s(655),n=s(9167),i=s(2057),l=s(4698),g=s(917),c=s(4028),d=s(7174);let u=class extends c.w3{get labels(){return{[i.g.lightFighter]:this.$i18n.$t.ogame.ships[i.g.lightFighter],[i.g.heavyFighter]:this.$i18n.$t.ogame.ships[i.g.heavyFighter],[i.g.cruiser]:this.$i18n.$t.ogame.ships[i.g.cruiser],[i.g.battleship]:this.$i18n.$t.ogame.ships[i.g.battleship],[i.g.bomber]:this.$i18n.$t.ogame.ships[i.g.bomber],[i.g.battlecruiser]:this.$i18n.$t.ogame.ships[i.g.battlecruiser],[i.g.destroyer]:this.$i18n.$t.ogame.ships[i.g.destroyer],[i.g.reaper]:this.$i18n.$t.ogame.ships[i.g.reaper],[i.g.pathfinder]:this.$i18n.$t.ogame.ships[i.g.pathfinder],[i.g.smallCargo]:this.$i18n.$t.ogame.ships[i.g.smallCargo],[i.g.largeCargo]:this.$i18n.$t.ogame.ships[i.g.largeCargo],[i.g.espionageProbe]:this.$i18n.$t.ogame.ships[i.g.espionageProbe],[i.g.deathStar]:this.$i18n.$t.ogame.ships[i.g.deathStar],[i.g.recycler]:this.$i18n.$t.ogame.ships[i.g.recycler],[i.g.colonyShip]:this.$i18n.$t.ogame.ships[i.g.colonyShip],[i.g.crawler]:this.$i18n.$t.ogame.ships[i.g.crawler],[i.g.solarSatellite]:this.$i18n.$t.ogame.ships[i.g.solarSatellite]}}keys=[i.g.lightFighter,i.g.heavyFighter,i.g.cruiser,i.g.battleship,i.g.bomber,i.g.battlecruiser,i.g.destroyer,i.g.reaper,i.g.pathfinder,i.g.smallCargo,i.g.largeCargo,i.g.espionageProbe,i.g.deathStar,i.g.recycler,i.g.colonyShip,i.g.crawler,i.g.solarSatellite];get colors(){return g.V.settings.colors.ships}updateColors(e){g.V.updateSettings({...g.V.settings,colors:{...g.V.settings.colors,ships:e}})}resetColors(){const e=(0,l.O)(n.I.de).colors.ships;this.updateColors(e)}};u=(0,o.gn)([(0,c.wA)({components:{ColorSettingsTable:d.Z}})],u);const p=u,h=p;var f=s(1001),m=(0,f.Z)(h,r,a,!1,null,null,null);const y=m.exports},3421:(e,t,s)=>{s.d(t,{Z:()=>m});var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("scrollable-chart",{attrs:{datasets:e.computedDatasets,"x-label-formatter":function(t){return e.formatDate(t)},"no-legend":e.noLegend,"hide-tooltip-footer":e.noTooltipFooter},scopedSlots:e._u([{key:"tooltip-footer",fn:function(t){var s=t.datasets;return[e._t("tooltip-footer",null,{datasets:s})]}}],null,!0)})},a=[],o=s(655),n=s(9119),i=s(5347),l=s(9383),g=s(7349),c=s(4028);let d=class extends c.w3{datasets;noLegend;noTooltipFooter;firstDay;itemsPerDay;minDays;get minDay(){const e="number"===typeof this.firstDay?this.firstDay:this.firstDay.getTime(),t=(0,n.Z)(Date.now());return Math.min(e,(0,i.Z)(t,this.minDays-1).getTime())}get computedDatasets(){const e=this.minDay,t=(0,l.Z)((0,n.Z)(Date.now()),e),s=Array.from({length:t+1}).map(((t,s)=>(0,g.Z)(e,s).getTime())),r=s.map((e=>this.itemsPerDay[e]??null)),a=r.filter((e=>null!=e)).length;return this.datasets.map((e=>{const t=r.map((t=>null==t?0:e.getValue(t))),s=t.reduce(((e,t)=>e+t),0);return{key:e.key,color:e.color,label:e.label,values:t.map(((e,t)=>({x:t,y:e}))),filled:e.filled??!0,stack:e.stack??!0,hidePoints:!1,average:1==e.showAverage?s/Math.max(1,a):void 0}}))}formatDate(e){const t=(0,g.Z)(this.minDay,e);return this.$i18n.$d(t,"date")}};(0,o.gn)([(0,c.fI)({required:!0,type:Array})],d.prototype,"datasets",void 0),(0,o.gn)([(0,c.fI)({required:!1,type:Boolean})],d.prototype,"noLegend",void 0),(0,o.gn)([(0,c.fI)({required:!1,type:Boolean})],d.prototype,"noTooltipFooter",void 0),(0,o.gn)([(0,c.fI)({required:!0,type:[Number,Date]})],d.prototype,"firstDay",void 0),(0,o.gn)([(0,c.fI)({required:!0,type:Object})],d.prototype,"itemsPerDay",void 0),(0,o.gn)([(0,c.fI)({required:!1,type:Number,default:()=>30})],d.prototype,"minDays",void 0),d=(0,o.gn)([(0,c.wA)({})],d);const u=d,p=u;var h=s(1001),f=(0,h.Z)(p,r,a,!1,null,null,null);const m=f.exports},2326:(e,t,s)=>{s.r(t),s.d(t,{default:()=>y});var r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"chart-container"},[s("stats-chart",{attrs:{firstDay:e.firstDay,itemsPerDay:e.exposPerDay,datasets:e.datasets,stacked:"","show-average":""},scopedSlots:e._u([{key:"tooltip-footer",fn:function(t){var r=t.datasets;return[e.getVisibleDatasets(r).length<r.length?[s("div",{staticClass:"footer-item"},[s("div",{staticClass:"number",domProps:{textContent:e._s(e.$i18n.$n(e.getSum(e.getVisibleDatasets(r))))}}),s("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.expeditions.shipsFound)}})]),s("hr")]:e._e(),s("div",{staticClass:"footer-item"},[s("div",{staticClass:"number",domProps:{textContent:e._s(e.$i18n.$n(e.getSum(r)))}}),s("div",{domProps:{textContent:e._s(e.$i18n.$t.extension.expeditions.shipsFound+" ("+e.$i18n.$t.extension.common.total+")")}})])]}}])}),s("floating-menu",{attrs:{left:""},scopedSlots:e._u([{key:"activator",fn:function(){return[s("button",{on:{click:function(t){e.showSettings=!e.showSettings}}},[s("span",{staticClass:"mdi mdi-cog"})])]},proxy:!0}]),model:{value:e.showSettings,callback:function(t){e.showSettings=t},expression:"showSettings"}},[s("ship-color-settings")],1)],1)},a=[],o=s(655),n=s(9563),i=s(4028),l=s(3421),g=s(7090),c=s(917),d=s(8802);let u=class extends i.w3{showSettings=!1;get colors(){return c.V.settings.colors.ships}get firstDay(){return g.m.firstDay}get exposPerDay(){return g.m.dailyResults}get datasets(){return n.x.map((e=>({key:`${e}`,label:this.$i18n.$t.ogame.ships[e],color:this.colors[e],filled:!0,getValue:t=>t.findings.fleet[e],showAverage:!0})))}getVisibleDatasets(e){return e.filter((e=>e.visible))}getSum(e){return e.reduce(((e,t)=>e+t.value),0)}};u=(0,o.gn)([(0,i.wA)({components:{StatsChart:l.Z,ShipColorSettings:d.Z}})],u);const p=u,h=p;var f=s(1001),m=(0,f.Z)(h,r,a,!1,null,"607b180b",null);const y=m.exports},7349:(e,t,s)=>{s.d(t,{Z:()=>n});var r=s(3946),a=s(9013),o=s(3882);function n(e,t){(0,o.Z)(2,arguments);var s=(0,a.Z)(e),n=(0,r.Z)(t);return isNaN(n)?new Date(NaN):n?(s.setDate(s.getDate()+n),s):s}},9383:(e,t,s)=>{s.d(t,{Z:()=>c});var r=s(9013),a=s(4262),o=s(9119),n=s(3882),i=864e5;function l(e,t){(0,n.Z)(2,arguments);var s=(0,o.Z)(e),r=(0,o.Z)(t),l=s.getTime()-(0,a.Z)(s),g=r.getTime()-(0,a.Z)(r);return Math.round((l-g)/i)}function g(e,t){var s=e.getFullYear()-t.getFullYear()||e.getMonth()-t.getMonth()||e.getDate()-t.getDate()||e.getHours()-t.getHours()||e.getMinutes()-t.getMinutes()||e.getSeconds()-t.getSeconds()||e.getMilliseconds()-t.getMilliseconds();return s<0?-1:s>0?1:s}function c(e,t){(0,n.Z)(2,arguments);var s=(0,r.Z)(e),a=(0,r.Z)(t),o=g(s,a),i=Math.abs(l(s,a));s.setDate(s.getDate()-o*i);var c=Number(g(s,a)===-o),d=o*(i-c);return 0===d?0:d}},5347:(e,t,s)=>{s.d(t,{Z:()=>n});var r=s(3946),a=s(7349),o=s(3882);function n(e,t){(0,o.Z)(2,arguments);var s=(0,r.Z)(t);return(0,a.Z)(e,-s)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,