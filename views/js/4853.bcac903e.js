"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[4853],{4698:(e,t,s)=>{s.d(t,{O:()=>p});var o=s(1821),r=s(3347),n=s(1745),i=s(776),l=s(5424),a=s(612),c=s(6105),u=s(3418),g=s(7331),d=s(2057);function p(e){const t=o.j.locale;o.j.locale=e;const s={dateRanges:[{label:o.j.$t.extension.settings.dateRanges.defaultNames.today,type:"day",skip:0,take:1},{label:o.j.$t.extension.settings.dateRanges.defaultNames.yesterday,type:"day",skip:1,take:1},{label:o.j.$t.extension.settings.dateRanges.defaultNames.currentWeek,type:"week",skip:0,take:1},{label:o.j.$t.extension.settings.dateRanges.defaultNames.lastWeek,type:"week",skip:1,take:1},{label:o.j.$t.extension.settings.dateRanges.defaultNames.currentMonth,type:"month",skip:0,take:1},{type:"all"}],lostShipsResourceUnits:{factor:1,deuteriumFactor:1},resourceBalance:{showDetailedBreakdown:!1,includeExpeditionFoundShipsResourceUnits:!0,includeLostShipsResourceUnits:!0,includeLostLootResources:!0},conversionRates:{mode:"msu",msu:{crystal:1.5,deuterium:3},dsu:{metal:3,crystal:2}},showCellsWithConvertedResourceUnits:!0,expeditionFoundShipsResourceUnits:{factor:1,deuteriumFactor:1},extensionLanguage:e,defaultRoutes:{},colors:{combatResults:{[r.a.won]:"#00c23a",[r.a.draw]:"#aaaaaa",[r.a.lost]:"#d11515"},resources:{[g._.metal]:"#ff5e00",[g._.crystal]:"#1a9fff",[g._.deuterium]:"#1bee8f",totalConverted:"#999999"},ships:{[d.g.lightFighter]:"#2472f3",[d.g.heavyFighter]:"#c72525",[d.g.cruiser]:"#fbbc04",[d.g.battleship]:"#9ecc00",[d.g.bomber]:"#00a95e",[d.g.battlecruiser]:"#075263",[d.g.destroyer]:"#de5200",[d.g.reaper]:"#16a8d4",[d.g.pathfinder]:"#ad135e",[d.g.smallCargo]:"#888888",[d.g.largeCargo]:"#ffffff",[d.g.espionageProbe]:"#4b17da",[d.g.deathStar]:"#262530",[d.g.recycler]:"#8aff8e",[d.g.colonyShip]:"#d7b58e",[d.g.crawler]:"#94b4ff",[d.g.solarSatellite]:"#dd94ff"},expeditions:{events:{[l.r.nothing]:"#404040",[l.r.resources]:"#2242e2",[l.r.fleet]:"#dddddd",[l.r.delay]:"#ff5e00",[l.r.early]:"#00c23a",[l.r.darkMatter]:"#33bcdb",[l.r.pirates]:"#ffb592",[l.r.aliens]:"#92ffdc",[l.r.combat]:"#ffb592",[l.r.item]:"#6f23e1",[l.r.trader]:"#fbbc04",[l.r.lostFleet]:"#d11515"},sizes:{[i.Mm.small]:"#404040",[i.Mm.medium]:"#3e85fe",[i.Mm.large]:"#e01a76","fled-death-star":"#dddddd"},depletion:{[n.q.none]:"#00c23a",[n.q.low]:"#fbbc04",[n.q.medium]:"#ff5e00",[n.q.high]:"#c72525",unknown:"#404040"}},lifeformDiscoveries:{events:{[c.y.nothing]:"#404040",[c.y.lostShip]:"#d11515",[c.y.knownLifeformFound]:"#33bcdb",[c.y.newLifeformFound]:"#00c23a",[c.y.artifacts]:"#fbbc04"},artifactFindingSizes:{[a.k.small]:"#404040",[a.k.medium]:"#3e85fe",[a.k.large]:"#e01a76",[a.k.storageFull]:"#d11515"}},lifeforms:{[u.e5.humans]:"#7ec000",[u.e5.rocktal]:"#df6642",[u.e5.mechas]:"#4b91e7",[u.e5.kaelesh]:"#9863e9"}},universeHistory:{updateTimes:[72e6],enabled:!1,trackHistory:!1},combatTracking:{ignoreEspionageFights:!0},messageTracking:{showSimplifiedResults:!0},debrisFields:{separateExpeditionDebrisFields:!1}};return o.j.locale=t,s}},1799:(e,t,s)=>{s.d(t,{Z:()=>d});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("button",{staticClass:"reset-button",attrs:{title:e.$i18n.$t.extension.settings.reset},on:{click:function(t){return e.$emit("reset")}}},[s("span",{staticClass:"mdi mdi-refresh"})])},r=[],n=s(655),i=s(4028);let l=class extends i.w3{};l=(0,n.gn)([(0,i.wA)({})],l);const a=l,c=a;var u=s(1001),g=(0,u.Z)(c,o,r,!1,null,"6ca60f84",null);const d=g.exports},7174:(e,t,s)=>{s.d(t,{Z:()=>p});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("grid-table",{staticClass:"color-settings",staticStyle:{width:"max-content"},attrs:{columns:e.columns,items:e.items},scopedSlots:e._u([{key:"header-key",fn:function(t){var o=t.label;return[s("span",{domProps:{textContent:e._s(o)}}),s("reset-button",{on:{reset:function(t){return e.$emit("reset")}}})]}},{key:"cell-key",fn:function(t){var o=t.value;return[s("div",{staticClass:"color-input",on:{click:function(t){e.$refs["colorInput-"+o].click()}}},[s("input",{ref:"colorInput-"+o,attrs:{type:"color"},domProps:{value:e.colors[o]},on:{change:function(t){return e.updateColor(o,t)}}}),s("div",{staticClass:"color-indicator",style:{background:e.colors[o]}}),s("span",{domProps:{textContent:e._s(e.labels[o])}})])]}}])})},r=[],n=s(655),i=s(4028),l=s(1799);let a=class extends i.w3{header;colors;labels;keys;get columns(){return[{key:"key",label:this.header,headerClass:"color-settings-header"}]}get items(){const e=this.keys??Object.keys(this.colors);return e.map((e=>({key:e})))}updateColor(e,t){t.target instanceof HTMLInputElement&&(this.colors={...this.colors,[e]:t.target.value})}};(0,n.gn)([(0,i.fI)({required:!0,type:String})],a.prototype,"header",void 0),(0,n.gn)([(0,i.Ey)({required:!0,type:Object})],a.prototype,"colors",void 0),(0,n.gn)([(0,i.fI)({required:!0,type:Object})],a.prototype,"labels",void 0),(0,n.gn)([(0,i.fI)({required:!1,type:Array,default:()=>null})],a.prototype,"keys",void 0),a=(0,n.gn)([(0,i.wA)({components:{ResetButton:l.Z}})],a);const c=a,u=c;var g=s(1001),d=(0,g.Z)(u,o,r,!1,null,"2f24a3e0",null);const p=d.exports},6612:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.combatResults,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(3347),l=s(917),a=s(4028),c=s(7174),u=s(4698),g=s(9167);let d=class extends a.w3{get labels(){return this.$i18n.$t.extension.combats.combatResults}keys=[i.a.won,i.a.lost,i.a.draw];get colors(){return l.V.settings.colors.combatResults}updateColors(e){l.V.updateSettings({...l.V.settings,colors:{...l.V.settings.colors,combatResults:e}})}resetColors(){const e=(0,u.O)(g.I.de).colors.combatResults;this.updateColors(e)}};d=(0,n.gn)([(0,a.wA)({components:{ColorSettingsTable:c.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},2861:(e,t,s)=>{s.d(t,{Z:()=>y});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.expeditionDepletionLevels,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(1745),a=s(4698),c=s(9751),u=s(917),g=s(4028),d=s(7174);let p=class extends g.w3{depletionLevels=[...l.R,"unknown"];get labels(){return(0,c.a)(this.depletionLevels,(e=>this.$i18n.$t.extension.expeditions.depletionLevels[e]))}keys=this.depletionLevels;get colors(){return u.V.settings.colors.expeditions.depletion}updateColors(e){u.V.updateSettings({...u.V.settings,colors:{...u.V.settings.colors,expeditions:{...u.V.settings.colors.expeditions,depletion:e}}})}resetColors(){const e=(0,a.O)(i.I.de).colors.expeditions.depletion;this.updateColors(e)}};p=(0,n.gn)([(0,g.wA)({components:{ColorSettingsTable:d.Z}})],p);const f=p,h=f;var m=s(1001),b=(0,m.Z)(h,o,r,!1,null,null,null);const y=b.exports},6964:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.expeditionEvents,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(5424),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return this.$i18n.$t.extension.expeditions.expeditionEvents}keys=[l.r.nothing,l.r.resources,l.r.fleet,l.r.delay,l.r.early,l.r.darkMatter,l.r.combat,l.r.item,l.r.trader,l.r.lostFleet];get colors(){return c.V.settings.colors.expeditions.events}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,expeditions:{...c.V.settings.colors.expeditions,events:e}}})}resetColors(){const e=(0,a.O)(i.I.de).colors.expeditions.events;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},403:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.expeditionEventSizes,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(776),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return this.$i18n.$t.extension.expeditions.expeditionEventSizes}keys=[l.Mm.small,l.Mm.medium,l.Mm.large,"fled-death-star"];get colors(){return c.V.settings.colors.expeditions.sizes}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,expeditions:{...c.V.settings.colors.expeditions,sizes:e}}})}resetColors(){const e=(0,a.O)(i.I.de).colors.expeditions.sizes;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},4024:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.lifeforms,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(3418),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return this.$i18n.$t.ogame.lifeforms}keys=l.p3;get colors(){return c.V.settings.colors.lifeforms}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,lifeforms:e}})}resetColors(){const e=(0,a.O)(i.I.de).colors.lifeforms;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},4898:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.lifeformDiscoveries,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(6105),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return{[l.y.nothing]:this.$i18n.$t.extension.empire.lifeforms.eventTypes.nothing,[l.y.lostShip]:this.$i18n.$t.extension.empire.lifeforms.eventTypes.lostShip,[l.y.knownLifeformFound]:this.$i18n.$t.extension.empire.lifeforms.lifeformFound,[l.y.artifacts]:this.$i18n.$t.extension.empire.lifeforms.eventTypes.artifacts}}keys=[l.y.nothing,l.y.lostShip,l.y.knownLifeformFound];get colors(){return c.V.settings.colors.lifeformDiscoveries.events}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,lifeformDiscoveries:{...c.V.settings.colors.lifeformDiscoveries,events:e}}})}resetColors(){const e=(0,a.O)(i.I.de).colors.lifeformDiscoveries.events;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},7196:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.resources,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(7331),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return{[l._.metal]:this.$i18n.$t.extension.resources.metal,[l._.crystal]:this.$i18n.$t.extension.resources.crystal,[l._.deuterium]:this.$i18n.$t.extension.resources.deuterium,totalConverted:`${this.$i18n.$t.extension.common.resourceUnits} (${this.$i18n.$t.extension.common.msu}/${this.$i18n.$t.extension.common.dsu})`}}keys=[l._.metal,l._.crystal,l._.deuterium,"totalConverted"];get colors(){return c.V.settings.colors.resources}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,resources:e}})}resetColors(){const e=(0,a.O)(i.I.de).colors.resources;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},8802:(e,t,s)=>{s.d(t,{Z:()=>b});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("color-settings-table",{attrs:{header:e.$i18n.$t.extension.settings.colors.ships,labels:e.labels,keys:e.keys,value:e.colors},on:{input:function(t){return e.updateColors(t)},reset:function(t){return e.resetColors()}}})},r=[],n=s(655),i=s(9167),l=s(2057),a=s(4698),c=s(917),u=s(4028),g=s(7174);let d=class extends u.w3{get labels(){return{[l.g.lightFighter]:this.$i18n.$t.ogame.ships[l.g.lightFighter],[l.g.heavyFighter]:this.$i18n.$t.ogame.ships[l.g.heavyFighter],[l.g.cruiser]:this.$i18n.$t.ogame.ships[l.g.cruiser],[l.g.battleship]:this.$i18n.$t.ogame.ships[l.g.battleship],[l.g.bomber]:this.$i18n.$t.ogame.ships[l.g.bomber],[l.g.battlecruiser]:this.$i18n.$t.ogame.ships[l.g.battlecruiser],[l.g.destroyer]:this.$i18n.$t.ogame.ships[l.g.destroyer],[l.g.reaper]:this.$i18n.$t.ogame.ships[l.g.reaper],[l.g.pathfinder]:this.$i18n.$t.ogame.ships[l.g.pathfinder],[l.g.smallCargo]:this.$i18n.$t.ogame.ships[l.g.smallCargo],[l.g.largeCargo]:this.$i18n.$t.ogame.ships[l.g.largeCargo],[l.g.espionageProbe]:this.$i18n.$t.ogame.ships[l.g.espionageProbe],[l.g.deathStar]:this.$i18n.$t.ogame.ships[l.g.deathStar],[l.g.recycler]:this.$i18n.$t.ogame.ships[l.g.recycler],[l.g.colonyShip]:this.$i18n.$t.ogame.ships[l.g.colonyShip],[l.g.crawler]:this.$i18n.$t.ogame.ships[l.g.crawler],[l.g.solarSatellite]:this.$i18n.$t.ogame.ships[l.g.solarSatellite]}}keys=[l.g.lightFighter,l.g.heavyFighter,l.g.cruiser,l.g.battleship,l.g.bomber,l.g.battlecruiser,l.g.destroyer,l.g.reaper,l.g.pathfinder,l.g.smallCargo,l.g.largeCargo,l.g.espionageProbe,l.g.deathStar,l.g.recycler,l.g.colonyShip,l.g.crawler,l.g.solarSatellite];get colors(){return c.V.settings.colors.ships}updateColors(e){c.V.updateSettings({...c.V.settings,colors:{...c.V.settings.colors,ships:e}})}resetColors(){const e=(0,a.O)(i.I.de).colors.ships;this.updateColors(e)}};d=(0,n.gn)([(0,u.wA)({components:{ColorSettingsTable:g.Z}})],d);const p=d,f=p;var h=s(1001),m=(0,h.Z)(f,o,r,!1,null,null,null);const b=m.exports},4853:(e,t,s)=>{s.r(t),s.d(t,{default:()=>v});var o=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"colors"},[s("expedition-event-color-settings"),s("expedition-event-size-color-settings"),s("expedition-depletion-color-settings"),s("combat-result-color-settings"),s("resource-color-settings"),s("ship-color-settings"),s("lifeform-discovery-color-settings"),s("lifeform-color-settings")],1)},r=[],n=s(655),i=s(4028),l=s(6964),a=s(403),c=s(2861),u=s(6612),g=s(7196),d=s(8802),p=s(4024),f=s(4898);let h=class extends i.w3{};h=(0,n.gn)([(0,i.wA)({components:{ExpeditionEventColorSettings:l.Z,ExpeditionEventSizeColorSettings:a.Z,ExpeditionDepletionColorSettings:c.Z,CombatResultColorSettings:u.Z,ResourceColorSettings:g.Z,ShipColorSettings:d.Z,LifeformColorSettings:p.Z,LifeformDiscoveryColorSettings:f.Z}})],h);const m=h,b=m;var y=s(1001),$=(0,y.Z)(b,o,r,!1,null,"50ac56b1",null);const v=$.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,