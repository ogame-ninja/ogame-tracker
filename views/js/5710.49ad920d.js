"use strict";(globalThis["webpackChunkogame_tracker"]=globalThis["webpackChunkogame_tracker"]||[]).push([[5710],{5710:(e,t,s)=>{s.r(t),s.d(t,{default:()=>v});var n=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("grid-table",{staticClass:"empire-table",attrs:{columns:e.columns,items:e.items,sticky:"100%"},scopedSlots:e._u([{key:"cell-planet",fn:function(t){var n=t.value;return[s("span",{domProps:{textContent:e._s(n.name)}}),e._v(" Â  "),s("span",{domProps:{textContent:e._s(n.coordinates)}})]}},{key:"cell-supplies",fn:function(t){var n=t.value;t.item;return[s("div",{staticClass:"supplies-table"},e._l(e.PlanetSupplyBuildingTypes,(function(t){return s("span",{key:t},[s("o-building",{attrs:{building:t,disabled:0==n[t]}}),s("span",{class:{fade:0==n[t]},domProps:{textContent:e._s(n[t])}})],1)})),0)]}},{key:"cell-facilities",fn:function(t){var n=t.value;t.item;return[s("div",{staticClass:"facilities-table"},e._l(e.PlanetFacilityBuildingTypes,(function(t){return s("span",{key:t},[s("o-building",{attrs:{building:t,disabled:0==n[t]}}),s("span",{class:{fade:0==n[t]},domProps:{textContent:e._s(n[t])}})],1)})),0)]}},{key:"cell-ships",fn:function(t){var n=t.value;t.item;return[s("div",{staticClass:"ships-table"},e._l(e.ShipTypes,(function(t){return s("span",{key:t},[s("o-ship",{attrs:{ship:t,disabled:0==n[t]}}),s("span",{class:{fade:0==n[t]},domProps:{textContent:e._s(n[t])}})],1)})),0)]}},{key:"cell-defenses",fn:function(t){var n=t.value;t.item;return[s("div",{staticClass:"defenses-table"},e._l(e.DefenseTypes,(function(t){return s("span",{key:t},[s("o-defense",{attrs:{defense:t,disabled:0==n[t]}}),s("span",{class:{fade:0==n[t]},domProps:{textContent:e._s(n[t])}})],1)})),0)]}}])})},i=[],a=s(655),l=s(1913),r=s(248),o=s(1628),p=s(4028),u=s(8395),c=s(9751);let d=class extends p.w3{PlanetSupplyBuildingTypes=l.uP;PlanetFacilityBuildingTypes=l.qi;ShipTypes=r.GI;DefenseTypes=o.Q;get columns(){return[{key:"planet",label:this.$i18n.$t.extension.empire.planet,size:"250px"},{key:"supplies",label:this.$i18n.$t.extension.empire.overview.supplyBuildings,style:{"justify-items":"start"},headerClass:"left-text",class:"left-text"},{key:"facilities",label:this.$i18n.$t.extension.empire.overview.facilityBuildings,style:{"justify-items":"start"},headerClass:"left-text",class:"left-text"}]}get items(){const e=u.p.empire,t=e.planetOrder.map((t=>e.planets[t])).filter((e=>!e.isMoon));return t.map((e=>{const t={planet:{name:e.name,coordinates:this.formatCoordinates(e.coordinates)},supplies:(0,c.a)(l.uP,(t=>e.buildings[t])),facilities:(0,c.a)(l.qi,(t=>e.buildings[t])),ships:(0,c.a)(r.GI,(t=>e.ships[t])),defenses:(0,c.a)(o.Q,(t=>e.defense[t]))};return t}))}formatCoordinates(e){return`[${e.galaxy}:${e.system}:${e.position}]`}};d=(0,a.gn)([(0,p.wA)({})],d);const f=d,m=f;var y=s(1001),b=(0,y.Z)(m,n,i,!1,null,"3bb14e6a",null);const v=b.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,